{"version":3,"sources":["Utilities.tsx","ValueCard.tsx","Subcaucus.tsx","SubcaucusRow.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["String","prototype","trim","str","this","replace","i","length","test","charAt","substring","ValueCard","_React$Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","type","isPositiveInt","originalValue","defaultValue","textFieldRef","React","handleChange","event","num","Number","currentTarget","value","setState","handleKey","key","onSave","state","focusOnWholeText","target","setTimeout","setSelectionRange","isEmpty","empty","save","componentDidMount","ReactDOM","current","InputText","select","_unused","console","log","idPlus","suffix","id","concat","undefined","inherits","createClass","illegallyEmpty","allowEmpty","saveButton","react","primereact_button","label","icon","disabled","onClick","cancelButton","className","cardFooter","primereact_card","title","footer","description","inputtext","keyfilter","pattern","placeholder","onChange","onFocus","onKeyUp","ref","Subcaucus","withID","name","count","delegates","SubcaucusRow","subcaucus","handleName","handleCount","remove","objectSpread","_this$state","inputtextarea","rows","cols","App","_currentSubcaucusID","nextSubcaucusID","defaultName","dateCreated","toLocaleDateString","allowedString","allowed","Date","changingName","changingDelegates","subcaucuses","_this2","card","ValueCard_ValueCard","toString","subcaucusRows","map","index","number","SubcaucusRow_SubcaucusRow","iconPos","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.154bd416.chunk.js","sourcesContent":["declare global {\n\tinterface String {\n\t\ttrim(): string\n\t}\n}\n// see http://blog.stevenlevithan.com/archives/faster-trim-javascript\nString.prototype.trim = function (): string {\n\tvar str = this.replace(/^\\s+/, '')\n\tfor (var i = str.length - 1; i >= 0; i--) {\n\t\tif (/\\S/.test(str.charAt(i))) {\n\t\t\tstr = str.substring(0, i + 1)\n\t\t\tbreak\n\t\t}\n\t}\n\treturn str\n}\n\nexport function debug(message?: any, ...optionalParams: any[]) {\n\tif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n\t\tconsole.log(message, ...optionalParams)\n\t}\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { Button } from 'primereact/button'\nimport { Card } from 'primereact/card'\nimport { InputText } from 'primereact/inputtext'\nimport { debug } from './Utilities'\n\ninterface Props {\n    id?: string\n    title: string\n    description?: string\n    type?: 'text' | 'positive integer'\n    value?: string\n    defaultValue?: string\n    allowEmpty?: boolean\n    onSave?: ((value: string) => void)\n}\ninterface State {\n    value: string\n}\n\nexport class ValueCard extends React.Component<Props, State> {\n\n    type: 'text' | 'positive integer' = 'text'\n    isPositiveInt = false\n    originalValue = ''\n    defaultValue = ''\n    textFieldRef: React.RefObject<any> = React.createRef()\n\n    constructor(props: Props) {\n        super(props)\n        this.type = (this.props.type == undefined ? 'text' : this.props.type)\n        this.isPositiveInt = (this.type == 'positive integer')\n        this.originalValue = (this.props.value == undefined ? '' : this.props.value)\n        this.defaultValue = (this.props.defaultValue == undefined ? '' : this.props.defaultValue)\n        this.state = {\n            value: this.originalValue,\n        }\n    }\n\n    handleChange = () => (event: React.FormEvent<HTMLInputElement>) => {\n        switch (this.type) {\n            case 'positive integer':\n                var num = Number(event.currentTarget.value)\n                if (num < 0) {\n                    num = 0\n                }\n                this.setState({ value: String(num) })\n                break\n            case 'text':\n                this.setState({ value: event.currentTarget.value })\n                break\n        }\n    }\n\n    handleKey = () => (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            if (this.props.onSave) {\n                this.props.onSave(this.state.value.trim())\n            }\n        }\n    }\n\n    focusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n        // event properties must be copied to use async\n        const target = event.currentTarget\n        // do this async to try to make Safari behave\n        setTimeout(() => target.setSelectionRange(0, 9999), 0)\n    }\n\n    isEmpty = (value: string): boolean => {\n        var empty = (value == '')\n        if (this.props.type == 'positive integer') {\n            empty = (empty || value == '0')\n        }\n        return empty\n    }\n\n    save = (value: string) => (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (this.props.onSave) {\n            this.props.onSave(value.trim())\n        }\n    }\n\n    componentDidMount = () => {\n        debug(\"card mounted\")\n        const target = ReactDOM.findDOMNode(this.textFieldRef.current)\n        if (this.textFieldRef.current instanceof InputText && target != null) {\n            switch (this.type) {\n                case 'text':\n                case 'positive integer':\n                    try {\n                        debug(\"selecting\", target)\n                        // @ts-ignore\n                        target.select()\n                    } catch {\n                        console.log(\"oops\")\n                    }\n                    break\n            }\n        }\n    }\n\n    idPlus = (suffix: string): string | undefined => {\n        return this.props.id ? `${this.props.id}-${suffix}` : undefined\n    }\n\n    render() {\n\n        const illegallyEmpty = (this.isEmpty(this.state.value) && this.isEmpty(this.defaultValue) && !this.props.allowEmpty)\n\n        const saveButton =\n            <Button id={this.idPlus(\"save-button\")}\n                label=\"Save\"\n                icon=\"pi pi-check\"\n                disabled={illegallyEmpty}\n                onClick={this.save(this.state.value ? this.state.value : this.defaultValue)}\n            />\n\n        const cancelButton = this.isEmpty(this.originalValue)\n            ? <></>\n            : <Button id={this.idPlus(\"cancel-button\")}\n                label=\"Cancel\"\n                icon=\"pi pi-times\"\n                className=\"p-button-secondary\"\n                onClick={this.save(this.originalValue)}\n            />\n\n        const cardFooter = (\n            <span>\n                {saveButton}{cancelButton}\n            </span>\n        )\n\n        return (\n            <div className=\"background-blocker\">\n                <Card id={this.idPlus(\"card\")}\n                    className={`value-card ${this.idPlus(\"card\")}`}\n                    title={this.props.title}\n                    footer={cardFooter}\n                >\n                    {this.props.description\n                        ? <p>{this.props.description}</p>\n                        : <></>}\n                    <InputText id={this.idPlus(\"card-field\")}\n                        className={this.isPositiveInt ? \"number\" : \"text\"}\n                        keyfilter={this.isPositiveInt ? \"pint\" : \"\"}\n                        type=\"text\"\n                        pattern={this.isPositiveInt ? \"\\\\d*\" : undefined}\n                        value={this.state.value}\n                        placeholder={this.defaultValue}\n                        onChange={this.handleChange()}\n                        onFocus={this.isPositiveInt ? this.focusOnWholeText() : undefined}\n                        onKeyUp={this.handleKey()}\n                        ref={this.textFieldRef}\n                    />\n                </Card>\n            </div>\n        )\n    }\n}\n","export class Subcaucus {\n\n\treadonly id: number\n\tname = ''\n\tcount = 0\n\tdelegates = 0\n\n\tconstructor(withID: number) {\n\t\tthis.id = withID\n\t}\n}","import * as React from 'react'\nimport { Button } from 'primereact/button'\nimport { InputText } from 'primereact/inputtext'\nimport { InputTextarea } from 'primereact/inputtextarea'\n// import { debug } from './Utilities'\nimport { Subcaucus } from './Subcaucus'\n\ninterface Props {\n\tsubcaucus: Subcaucus\n\tonChange?: ((subcaucus: Subcaucus, action?: 'remove' | 'enter') => void)\n}\ninterface State {\n\tid: number\n\tname: string\n\tcount: number\n\tdelegates: number\n}\n\nexport class SubcaucusRow extends React.Component<Props, State> {\n\n\tsubcaucus: Subcaucus\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tthis.subcaucus = { ...this.props.subcaucus }\n\t\tthis.state = {\n\t\t\tid: this.subcaucus.id,\n\t\t\tname: this.subcaucus.name,\n\t\t\tcount: this.subcaucus.count,\n\t\t\tdelegates: this.subcaucus.delegates,\n\t\t}\n\t}\n\n\thandleName = () => (event: React.FormEvent<HTMLTextAreaElement>) => {\n\t\tvar value = event.currentTarget.value\n\t\tthis.subcaucus.name = value.trim()\n\t\tthis.setState({ name: value })\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(this.subcaucus)\n\t\t}\n\t}\n\n\thandleCount = () => (event: React.FormEvent<HTMLInputElement>) => {\n\t\tvar num = Number(event.currentTarget.value)\n\t\tif (num < 0) {\n\t\t\tnum = 0\n\t\t}\n\t\tthis.subcaucus.count = num\n\t\tthis.setState({ count: num })\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(this.subcaucus)\n\t\t}\n\t}\n\n\thandleKey = () => (event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tif (event.key === 'Enter') {\n\t\t\tif (this.props.onChange) {\n\t\t\t\tthis.props.onChange(this.subcaucus, 'enter')\n\t\t\t}\n\t\t}\n\t}\n\n\tfocusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n\t\t// event properties must be copied to use async\n\t\tconst target = event.currentTarget\n\t\t// do this async to try to make Safari behave\n\t\tsetTimeout(() => target.setSelectionRange(0, 9999), 0)\n\t}\n\n\tremove = () => (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tif (this.props.onChange) {\n\t\t\tthis.props.onChange(this.subcaucus, 'remove')\n\t\t}\n\t}\n\n\tidPlus = (suffix: string): string | undefined => {\n\t\treturn `subcaucus-${this.subcaucus.id}-${suffix}`\n\t}\n\n\trender() {\n\t\tconst { name, count, delegates } = this.state\n\n\t\treturn (\n\t\t\t<div id={this.idPlus(\"row\")} className=\"subcaucus-row\">\n\t\t\t\t<Button id={this.idPlus(\"row-remove-button\")}\n\t\t\t\t\tclassName=\"subcaucus-remove-button p-button-danger\"\n\t\t\t\t\ticon=\"pi pi-minus\"\n\t\t\t\t/>\n\t\t\t\t<InputTextarea id={this.idPlus(\"row-name\")}\n\t\t\t\t\tclassName=\"subcaucus-field subcaucus-name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\trows={1}\n\t\t\t\t\tcols={1}\n\t\t\t\t\tplaceholder={`Subcaucus ${this.state.id}`}\n\t\t\t\t\tonChange={this.handleName()}\n\t\t\t\t\tonKeyUp={this.handleKey()}\n\t\t\t\t/>\n\t\t\t\t<InputText id={this.idPlus(\"row-count\")}\n\t\t\t\t\tclassName=\"subcaucus-field subcaucus-count\"\n\t\t\t\t\tkeyfilter=\"pint\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tpattern=\"\\\\d*\"\n\t\t\t\t\tvalue={count ? count : ''}\n\t\t\t\t\tplaceholder=\"&mdash;\"\n\t\t\t\t\tonChange={this.handleCount()}\n\t\t\t\t\tonFocus={this.focusOnWholeText()}\n\t\t\t\t\tonKeyUp={this.handleKey()}\n\t\t\t\t/>\n\t\t\t\t<Button id={this.idPlus(\"row-delegates\")}\n\t\t\t\t\tclassName={`subcaucus-delegates-button ${delegates > 0 ? \"has-delegates p-button-success\" : \"p-button-secondary\"}`}\n\t\t\t\t\tlabel={`${delegates}`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport { Button } from 'primereact/button'\nimport { ValueCard } from './ValueCard'\nimport 'primereact/resources/primereact.min.css'\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primeicons/primeicons.css'\nimport './App.scss'\nimport { debug } from './Utilities'\nimport { Subcaucus } from './Subcaucus'\nimport { SubcaucusRow } from './SubcaucusRow'\n\ninterface Props { }\ninterface State {\n    name: string\n    allowed: number\n    dateCreated: Date\n    changingName: boolean\n    changingDelegates: boolean\n    subcaucuses: Array<Subcaucus>\n}\n\nexport class App extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            name: 'Debugging',\n            allowed: 10, // make zero for release\n            dateCreated: new Date(),\n            changingName: false,\n            changingDelegates: false,\n            subcaucuses: [\n                new Subcaucus(this.nextSubcaucusID()),\n                new Subcaucus(this.nextSubcaucusID()),\n                new Subcaucus(this.nextSubcaucusID())\n            ],\n        }\n    }\n\n    private _currentSubcaucusID = 1\n    nextSubcaucusID = () => this._currentSubcaucusID++\n\n    defaultName = (): string => {\n        return \"Meeting on \" + this.state.dateCreated.toLocaleDateString(\"en-US\")\n    }\n\n    allowedString = (): string => {\n        return `${this.state.allowed} delegates to be elected`\n    }\n\n    handleChange = (name: string) => (event: React.FormEvent<HTMLInputElement>) => {\n        switch (name) {\n            case 'allowed':\n                var allowed = Number(event.currentTarget.value)\n                if (allowed < 0) {\n                    allowed = 0\n                }\n                this.setState({ allowed: allowed })\n                break\n            case 'name':\n                this.setState({ name: event.currentTarget.value })\n                break\n        }\n    }\n\n    focusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.currentTarget // event properties must be copied to use async\n        setTimeout(() => target.setSelectionRange(0, 9999), 0) // do this async to try to make Safari behave\n    }\n\n    render() {\n\n        // we start with an empty card, then change the value of card as circumstances warrent\n        // note that the last card set \"wins\" in the case where multiple cards are possible\n        var card = <></>\n\n        // show a delegates allowed card there are none allowed or we are trying to change the number\n        if (!this.state.allowed || this.state.changingDelegates) {\n            card = (\n                <ValueCard id=\"delegate-value\"\n                    title=\"Number of delegates allowed?\"\n                    description=\"Specify the number of delegates that your meeting or caucus is allowed to send on to the next level. This is the number of delegates to be elected by your meeting.\"\n                    type=\"positive integer\"\n                    value={this.state.allowed.toString()}\n                    onSave={(value: string) => {\n                        this.setState({\n                            allowed: Number(value),\n                            changingDelegates: false,\n                        })\n                    }}\n                />\n            )\n        }\n\n        // show a name card if the meeting name is empty or we are trying to change the name\n        if ((this.state.name == '') || this.state.changingName) {\n            card = (\n                <ValueCard id=\"name-value\"\n                    title=\"What is the name of your meeting?\"\n                    description='Most meetings have a name, like the \"Ward 4 Precinct 7 Caucus\" or the \"Saint Paul City Convention\". Specify the name of your meeting here.'\n                    value={this.state.name ? this.state.name : this.defaultName()}\n                    defaultValue={this.defaultName()}\n                    onSave={(value: string) => {\n                        this.setState({\n                            name: value,\n                            changingName: false,\n                        })\n                    }}\n                />\n            )\n        }\n\n        const subcaucusRows = this.state.subcaucuses.map((subcaucus, index, number) => {\n            return (\n                <SubcaucusRow\n                    subcaucus={subcaucus}\n                />\n            )\n        })\n\n        return (\n            <div id=\"app\">\n                <div id=\"app-content\">\n                    <div id=\"app-header\">\n                        <p><strong>Minnesota DFL Subcaucus Calculator</strong></p>\n                    </div>\n                    <div id=\"meeting-info\">\n                        <Button id=\"meeting-name\"\n                            label={this.state.name ? this.state.name : this.defaultName()}\n                            onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n                                debug(\"show the name card\")\n                                this.setState({\n                                    changingName: true,\n                                })\n                            }}\n                        />\n                        <Button id=\"delegates-allowed\"\n                            label={this.allowedString()}\n                            onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n                                debug(\"show the delegate card\")\n                                this.setState({\n                                    changingDelegates: true,\n                                })\n                            }}\n                        />\n                    </div>\n                    <div id=\"subcaucus-container\">\n                        <div id=\"subcaucus-header\">\n                            <Button id=\"subcaucus-management-head\"\n                                label=\"&nbsp;\"\n                                disabled={true}\n                            />\n                            <Button id=\"subcaucus-name-head\"\n                                label=\"Subcaucus\"\n                                icon=\"pi pi-circle-off\"\n                            />\n                            <Button id=\"subcaucus-count-head\"\n                                label=\"Count\"\n                                iconPos=\"right\"\n                                icon=\"pi pi-circle-off\"\n                            />\n                            <Button id=\"subcaucus-delegate-head\"\n                                label=\"Del\"\n                            />\n                        </div>\n                        <div id=\"subcaucus-list\">\n                            {subcaucusRows}\n                        </div>\n                        <Button id=\"add-subcaucus-button\"\n                            label=\"Add a Subcaucus\"\n                            icon=\"pi pi-plus\"\n                        />\n                    </div>\n                    {card}\n                </div>\n            </div>\n        )\n    }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}