{"version":3,"sources":["Utilities.ts","Subcaucus.ts","SubCalcPRNG.ts","Snapshot.ts","SubCalcOne.ts","SubCalc.ts","Loader.tsx","ValueCard.tsx","SubcaucusRowInfoCard.tsx","SubcaucusRow.tsx","App.tsx","ShowJSON.tsx","Cards/RemovingEmptiesCard.tsx","Cards/ChangingCoinCard.tsx","Cards/ChangingDelegatesAllowedCard.tsx","Cards/ChangingNameCard.tsx","Cards/SavingSnapshotCard.tsx","Cards/SavingSnapshotBeforeCard.tsx","Cards/WelcomeAndSetNameCard.tsx","Cards/InstructionsCard.tsx","Cards/AboutCard.tsx","Cards/CreditCard.tsx","Cards/SecurityCard.tsx","Cards/ViabilityCard.tsx","registerServiceWorker.ts","index.tsx"],"names":["alertFunction","debug","message","isDebugging","_console","_len","arguments","length","optionalParams","Array","_key","console","log","apply","concat","alertUser","error","alert","_len2","_key2","window","getApp","app","version","build","isApp","Boolean","unwrapString","maybeString","empty","undefined","randomSeed","Math","floor","random","now","Date","toTimestampString","download","data","filename","mime","navigator","msSaveBlob","blob","Blob","type","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","String","prototype","trim","str","this","replace","i","test","charAt","substring","hashCode","hash","charCodeAt","toDate","csvQuoted","Number","toCommaString","toString","singularPlural","singular","plural","includeNumber","number","comparisonValue","decimalPlaces","multiple","pow","round","pushUnique","something","indexOf","push","max","reduce","accumulator","current","toJSON","Subcaucus","init","_this","Object","classCallCheck","name","count","id","delegates","recreate","with","fromJSON","json","decoded","decoder","run","ok","result","_u","defaultName","displayName","viability","baseDelegates","remainder","_tosses","reportTosses","clearDelegateInfo","setViability","delegateScore","coinToss","won","against","tosses","forEach","toss","keys","map","key","addRemainderDelegate","asText","text","asCSV","csv","join","object","string","optional","SubCalcPRNG","state1","state2","mod1","mul1","mod2","mul2","record","randomUpTo","limit","abs","randomComparison","recordSummary","summary","r","isNaN","Snapshot","debugID","revision","allowed","subcaucuses","s","created","device","revised","seed","TSMap","subcaucus","set","jsub","keyNum","revise","update","redistributeDelegates","clearCounts","sub","participants","totalDelegates","participantsPerDelegate","viabilityNumber","viableParticipants","delegateDivisor","subs","values","acc","ceil","vSubs","filter","scRand","vSubRanks","m","temp","sort","a","b","coinFlip","reportingTo","justAddedRemainderDelegate","meetingKey","snapshotKey","nextSubcaucusID","toConsumableArray","addSubcaucus","newID","deleteSubcaucus","delete","sText","parse","toLocaleString","timeZoneName","row","dict","SubCalcOne","storageKey","snapshot","saved","sleep","ms","getTime","read","JSON","localStorage","getItem","e","snapshotFromCaucus","caucus","toLocaleDateString","precinct","members","names","caucusDecoder","SubCalc","incoming","storedSnapshotPrefix","trashedSnapshotPrefix","storedSnapshotKey","snapshots","status","prefix","storedKey","startsWith","readSnapshot","setSnapshot","write","newSnapshot","duplicateSnapshot","jsonSubCalc","v","jsonSubCalcString","stringify","setItem","Error","writeSnapshot","jsnap","jsnapString","reviseSnapshot","zeroSubcaucuses","saveSnapshot","renameMeeting","trashSnapshot","keyContent","removeItem","emptyTrash","subcalcOne","completeIncoming","decodeSnapshot","jsonString","decodeSnapshots","isArray","decodeCaucus","clear","query","params","URLSearchParams","decodeURIComponent","get","subcalc1","snap","subcalc2","_this$incoming","_this$incoming2","SortOrder","ValueCard","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","isPositiveInteger","originalValue","value","defaultValue","handleChange","event","currentTarget","num","setState","handleKey","onSave","state","focusOnWholeText","target","setTimeout","setSelectionRange","isEmpty","save","allowEmpty","idPlus","suffix","initialValue","inherits","createClass","cardFooter","react","footer","illegallyEmpty","originalIllegallyEmpty","saveButton","primereact_button","label","icon","disabled","onClick","cancelButton","className","extraButtons","card","title","header","image","alt","src","children","description","inputtext","autoComplete","keyfilter","pattern","placeholder","onChange","onKeyUp","autoFocus","React","SubcaucusRowInfoCard","_this$props","dismiss","ValueCard_ValueCard","SubcaucusRow","handleName","currentTabIndex","tabIndex","handleCount","handleBlur","exchange","rows","preventDefault","next","querySelectorAll","focus","showInfo","_this2","_this$state","infoCard","SubcaucusRowInfoCard_SubcaucusRowInfoCard","inputtextarea","index","cols","onKeyDown","onBlur","onFocus","CardFor","Presenting","Loader","renderMenu","items","command","onLoad","menubar","model","sortOrderIcon","button","sortBy","toggleSortOrder","deleteSnapshot","subcalc","forceUpdate","renderSnapshot","createdDate","year","month","day","revisedString","hour","minute","second","showing","renderSnapshots","sortBySnapshotRevision","comparison","revA","revB","sortBySnapshotName","toUpperCase","renderMeeting","snapshotsJSX","accordion","headerClassName","contentClassName","renderMeetings","currentMeetingKey","tabs","meetingIndex","indexOfCurrent","meetingSnapshots","activeIndex","iconPos","onNew","ShowJSON","RemovingEmptiesCard","removeEmpties","cancel","ChangingCoinCard","generate","ChangingDelegatesAllowedCard","newMeeting","ChangingNameCard","SavingSnapshotCard","SavingSnapshotBeforeCard","_getPrototypeOf2","args","WelcomeAndSetNameCard","InstructionsCard","AboutCard","showCredits","href","CreditCard","packageJson","SecurityCard","clearData","ViabilityCard","App","callback","keySuffix","initialCardState","WelcomeAndSetName","ChangingDelegates","growl","tooltipOptions","showDelay","hideDelay","position","loadSnapshot","present","Calculator","setStateName","setStateAllowed","setStateSeed","setStateSubcaucuses","cards","duplicateMeeting","growlAlert","remove","SavingSnapshot","removeCardState","emailSnapshot","url","location","protocol","host","pathname","subject","mailto","allowedString","addCard","cardFor","to","addCardState","removeCard","seekingCardFor","from","foundCardFor","Nothing","switchCardState","fromCardFor","toCardFor","newCards","showingCard","handleSubcaucusChange","action","subset","k","RemovingEmpties","order","nextSortOrder","currentOrder","nextOrder","checkForRevisionBefore","afterBefore","before","SavingSnapshotBefore","ShowingAbout","ShowingInstructions","ShowingSecurity","Loading","ChangingCoin","renderNextCard","WelcomeAndSetNameCard_WelcomeAndSetNameCard","saveName","InstructionsCard_InstructionsCard","AboutCard_AboutCard","ShowingBy","CreditCard_CreditCard","SavingSnapshotBeforeCard_SavingSnapshotBeforeCard","saveSnapshotBefore","SavingSnapshotCard_SavingSnapshotCard","ChangingName","ChangingNameCard_ChangingNameCard","ChangingDelegatesAllowedCard_ChangingDelegatesAllowedCard","saveDelegatesAllowed","ChangingCoinCard_ChangingCoinCard","saveRandomSeed","generateRandomSeed","RemovingEmptiesCard_RemovingEmptiesCard","SecurityCard_SecurityCard","Viability","ViabilityCard_ViabilityCard","sortBySubcaucusName","nameA","nameB","sortName","sortBySubcaucusCounts","sortCount","Infinity","renderSubcaucusRows","None","array","SubcaucusRow_SubcaucusRow","renderSummary","renderCalculator","Ascending","tooltip","renderByline","renderDebuggingInfo","toLocaleTimeString","ShowJSON_ShowJSON","severity","show","closable","detail","Loader_Loader","ref","el","isLocalhost","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","search","ReactDOM","App_App","getElementById","URL","process","origin","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1e12459b.chunk.js","sourcesContent":["// Utilities.tsx\n//\n// A number of helpful functions used throughout the app.\n//\n// Recommend this file be imported as:\n// import * as _u from './Utilities'\n//\n// We use the name \"_u\" so that tslint won't complain if we\n// do not actually use any _u functions in our file. This way\n// we still can import the prototype extensions.\n\n// Prototype extensions\n\ndeclare global {\n\n\ttype TimestampString = string\n\ttype ComparisonValue = -1 | 0 | 1\n\n\t// about extending classes\n\t// see: https://stackoverflow.com/a/53392268/383737\n\n\tinterface String {\n\t\ttrim(): string\n\t\thashCode(): number\n\t\ttoDate(): Date\n\t\tcsvQuoted(): string\n\t}\n\n\tinterface Number {\n\t\ttoCommaString(): string\n\t\tsingularPlural(singular: string, plural: string): string\n\t\tcomparisonValue(): ComparisonValue\n\t\tdecimalPlaces(decimalPlaces: number): number\n\t}\n\n\tinterface Array<T> {\n\t\tpushUnique(something: T): Array<T>\n\t\tmax(): number\n\t}\n\n\t/**\n\t * Converts a date to our typical timestamp string,\n\t * which is really just JSON format with a type to be clearer.\n\t */\n\tinterface Date {\n\t\ttoTimestampString(): TimestampString\n\t}\n\n}\n\n// see http://blog.stevenlevithan.com/archives/faster-trim-javascript\nString.prototype.trim = function (): string {\n\tvar str = this.replace(/^\\s+/, '')\n\tfor (var i = str.length - 1; i >= 0; i--) {\n\t\tif (/\\S/.test(str.charAt(i))) {\n\t\t\tstr = str.substring(0, i + 1)\n\t\t\tbreak\n\t\t}\n\t}\n\treturn str\n}\n\n// https://stackoverflow.com/a/7616484\nString.prototype.hashCode = function (): number {\n\tlet hash = 0\n\tif (this.length === 0) return hash;\n\tfor (let i = 0; i < this.length; i++) {\n\t\tlet chr = this.charCodeAt(i);\n\t\thash = ((hash << 5) - hash) + chr;\n\t\thash |= 0; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\nString.prototype.toDate = function (): Date {\n\treturn new Date(String(this))\n}\n\nString.prototype.csvQuoted = function (): string {\n\treturn '\"' + this.replace(/\"/g, '\"\"') + '\"'\n}\n\n// see: https://stackoverflow.com/a/2901298\nNumber.prototype.toCommaString = function (): string {\n\treturn this.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nNumber.prototype.singularPlural = function (singular: string, plural: string, includeNumber?: 'no number'): string {\n\tconst number = includeNumber != 'no number' ? `${this} ` : ''\n\treturn `${number}${this == 1 ? singular : plural}`\n}\n\nNumber.prototype.comparisonValue = function (): ComparisonValue {\n\tif (this < 0) return -1\n\tif (this > 0) return 1\n\treturn 0\n}\n\nNumber.prototype.decimalPlaces = function (decimalPlaces: number) {\n\tconst multiple = Math.pow(10, decimalPlaces)\n\treturn Math.round(Number(this) * multiple) / multiple\n}\n\n// see: https://stackoverflow.com/a/12803141\nArray.prototype.pushUnique = function (something) {\n\tif (this.indexOf(something) === -1) {\n\t\tthis.push(something)\n\t}\n\treturn this\n}\n\nArray.prototype.max = function (): number {\n\treturn this.reduce((accumulator, current) => {\n\t\treturn Math.max(accumulator, current)\n\t})\n}\n\n/**\n * Converts a date to our typical timestamp string,\n * which is really just JSON format with a type to be clearer.\n */\nDate.prototype.toTimestampString = function (): TimestampString {\n\treturn this.toJSON()\n}\n\n// _u functions\n\n/**\n * _u.debug\n * \n * Pass along message and optionalParams to console.log\n * only if we are in a development environment.\n * \n */\nexport function debug(message?: any, ...optionalParams: any[]) {\n\tif (isDebugging()) {\n\t\tconsole.log(message, ...optionalParams)\n\t}\n}\n\nvar alertFunction: ((message: string) => void)\n\nexport function setAlertFunction(callback: ((message: string) => void)) {\n\talertFunction = callback\n}\n\nexport function alertUser(error: Error, ...optionalParams: any[]) {\n\tif (alertFunction) {\n\t\talertFunction(error.message)\n\t} else {\n\t\talert(error.message)\n\t}\n\tdebug(error, ...optionalParams)\n}\n\nexport function isDebugging(): boolean {\n\treturn !process.env.NODE_ENV || process.env.NODE_ENV === \"development\" || window['_tg_debug']\n}\n\nexport function setApp(app: string, version?: string, build?: string) {\n\twindow['_tg_app'] = app\n\twindow['_tg_version'] = version\n\twindow['_tg_build'] = build\n}\n\nexport function getApp(): { app: string, version: string, build: string } {\n\treturn {\n\t\tapp: window['_tg_app'] || '',\n\t\tversion: window['_tg_version'] || '',\n\t\tbuild: window['_tg_build'] || ''\n\t}\n}\n\nexport function isApp(): boolean {\n\treturn Boolean(window['_tg_app'])\n}\n\nexport function getQueryVariable(variable: string) {\n\tvar query = window.location.search.substring(1);\n\tvar vars = query.split('&');\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=');\n\t\tif (decodeURIComponent(pair[0]) == variable) {\n\t\t\treturn decodeURIComponent(pair[1]);\n\t\t}\n\t}\n\treturn undefined\n}\n\n/**\n * Unwrap the optional string, returning '' if it was undefined.\n * \n * @param {string | undefined} maybeString\n * @param {string} empty An alternative string to return if the input was undefined.\n */\nexport function unwrapString(maybeString?: string, empty = ''): string {\n\tif (maybeString == undefined) return empty\n\treturn maybeString\n}\n\n/**\n * Unwrap the optional number, returning 0 if it was undefined.\n * \n * @param {string | undefined} maybeNumber\n * @param {string} empty An alternative number to return if the input was undefined.\n */\nexport function unwrapNumber(maybeNumber?: number, empty = 0): number {\n\tif (maybeNumber == undefined) return empty\n\treturn maybeNumber\n}\n\n/**\n * Unwrap the optional boolean, returning false if it was undefined.\n * \n * @param {string | undefined} maybeBoolean\n * @param {string} empty An alternative boolean value to return if the input was undefined.\n */\nexport function unwrapBoolean(maybeBoolean?: boolean, empty = false): boolean {\n\tif (maybeBoolean == undefined) return empty\n\treturn maybeBoolean\n}\n\n/**\n * A random number provided by Math.random() to use as a seed\n * for our own random number sequences.\n * \n * Note that in SubCalc1 we used seconds from Unix epoch as seeds,\n * but that makes it somewhat confusing by implying a connection between\n * the time and the seed. There really is no such connection.\n */\nexport function randomSeed(): number {\n\treturn Math.floor(Math.random() * 1000000)\n}\n\n/**\n * Provides a uniqueNumber, simply counting up each time a number is provided.\n */\nexport function uniqueNumber(): number {\n\twindow['_tg_counter'] = window['_tg_counter'] || 1\n\treturn window['_tg_counter']++\n}\n\n/**\n * Returns the TimestampString of the current time.\n */\nexport function now(): TimestampString {\n\treturn (new Date()).toTimestampString()\n}\n\n/**\n * Create a file download link, click it, and remove it.\n * \n * NOTE: Will have to rethink this for non-string formats.\n */\nexport function download(data: string, filename: string, mime = 'text/plain') {\n\n\tif (typeof window.navigator.msSaveBlob !== 'undefined') {\n\t\t// IE workaround for \"HTML7007: One or more blob URLs were \n\t\t// revoked by closing the blob for which they were created. \n\t\t// These URLs will no longer resolve as the data backing \n\t\t// the URL has been freed.\"\n\t\tconst blob = new Blob([data], { type: mime || 'application/octet-stream' });\n\t\twindow.navigator.msSaveBlob(blob, filename);\n\t}\n\telse {\n\t\tconst element = document.createElement('a')\n\t\telement.setAttribute('href', `data:${mime};charset=utf-8,` + encodeURIComponent(data))\n\t\telement.setAttribute('download', filename)\n\t\telement.style.display = 'none'\n\t\tdocument.body.appendChild(element)\n\t\telement.click()\n\t\tdocument.body.removeChild(element)\n\t}\n}","// we will need a way to type validate the json we import\n// see https://github.com/mojotech/json-type-validation\n// or maybe just use a JSON.parse reviver to type the data\n\n// see: https://github.com/mojotech/json-type-validation\nimport { Decoder, object, string, optional, number, boolean } from '@mojotech/json-type-validation'\n\n// local to this app\nimport * as _u from './Utilities'\n\ndeclare global {\n\n\tinterface SubcaucusInitializer {\n\t\tid: number\n\t\twith?: Partial<SubcaucusJSON>\n\t\tjson?: SubcaucusJSON\n\t}\n\n\tinterface SubcaucusJSON {\n\t\tname: string\n\t\tcount: number\n\t\tdelegates?: number\n\t}\n\n}\n\nexport class Subcaucus {\n\n\tdebug = (): string => {\n\t\treturn `${this.name} (${this.count})`\n\t}\n\treadonly id: number\n\tname: string\n\tcount: number\n\tdelegates: number\n\n\tstatic decoder: Decoder<SubcaucusJSON> = object({\n\t\tname: string(),\n\t\tcount: number(),\n\t\tdelegates: optional(number())\n\t})\n\n\t/**\n\t * Creates a new subcacucus instance.\n\t * \n```typescript\ninterface SubcaucusInitializer {\n\tid: number\n\twith?: {\n\t\tname?: string\n\t\tcount?: number\n\t\t\tdelegates?: number\n\t}\n\tjson?: SubcaucusJSON\n}\n```\n\t * @param {SubcaucusInitializer} init\n\t */\n\tconstructor(init: SubcaucusInitializer) {\n\t\tthis.id = init.id\n\n\t\tthis.name = ''\n\t\tthis.count = 0\n\t\tthis.delegates = 0\n\n\t\tif (init.with) {\n\t\t\tthis.name = init.with[\"name\"] || this.name\n\t\t\tthis.count = init.with[\"count\"] || this.count\n\t\t\tthis.delegates = init.with[\"delegates\"] || this.delegates\n\t\t}\n\n\t\tif (init.json) {\n\t\t\tthis.fromJSON(init.json)\n\t\t}\n\t}\n\n\trecreate = (): Subcaucus => {\n\t\treturn new Subcaucus({\n\t\t\tid: this.id,\n\t\t\twith: {\n\t\t\t\tname: this.name,\n\t\t\t\tcount: this.count,\n\t\t\t\tdelegates: this.delegates,\n\t\t\t}\n\t\t})\n\t}\n\n\ttoJSON = (): SubcaucusJSON => {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tcount: this.count\n\t\t}\n\t}\n\n\tfromJSON = (json: SubcaucusJSON) => {\n\t\tconst decoded = Subcaucus.decoder.run(json)\n\n\t\tif (decoded.ok) {\n\t\t\tthis.name = decoded.result.name\n\t\t\tthis.count = decoded.result.count\n\t\t\tthis.delegates = decoded.result.delegates || 0\n\t\t} else {\n\t\t\t_u.debug(decoded.error)\n\t\t}\n\t}\n\n\tdefaultName = () => {\n\t\treturn `Subcaucus ${this.id}`\n\t}\n\n\tdisplayName = () => {\n\t\treturn this.name || this.defaultName()\n\t}\n\n\t/**\n\t * The viability number provided by the snapshot.\n\t * This is the `delegateViability` number.\n\t */\n\tviability = 0\n\n\t/**\n\t * The number of delegates based on the simple viability number,\n\t * before any remainders have been considered.\n\t */\n\tbaseDelegates = 0\n\n\t/**\n\t * The remainder left after apportioning base delegates.\n\t */\n\tremainder = 0\n\n\t/**\n\t * Reported coin toss results.\n\t */\n\tprivate _tosses: Array<{ won: boolean, against: Subcaucus }> = []\n\n\t/**\n\t * This will flag subcaucuses which should report out\n\t * the details of their coin tosses.\n\t */\n\treportTosses = false\n\n\t/**\n\t * Clear all delegate calculation-related variables\n\t * in preparation for a recalculation.\n\t */\n\tclearDelegateInfo = () => {\n\t\tthis.delegates = 0\n\t\tthis.viability = 0\n\t\tthis.baseDelegates = 0\n\t\tthis.remainder = 0\n\t\tthis.reportTosses = false\n\t\tthis._tosses = []\n\t}\n\n\t/**\n\t * Set the internal viability number and calculate base delegates\n\t * and remainder values.\n\t */\n\tsetViability = (viability: number) => {\n\t\tthis.viability = viability\n\t\tconst delegateScore = this.count / this.viability\n\t\tthis.baseDelegates = Math.floor(delegateScore)\n\t\tthis.delegates = this.baseDelegates\n\t\tthis.remainder = delegateScore - this.baseDelegates\n\t}\n\n\t/**\n\t * Report coin tosses to the subcaucus.\n\t */\n\tcoinToss = (won: boolean, against: Subcaucus) => {\n\t\tthis._tosses.push({ won: won, against: against })\n\t}\n\n\t/**\n\t * An array of the last toss exchanged with each opponent subcaucus.\n\t */\n\ttosses = (): Array<{ won: boolean, against: Subcaucus }> => {\n\t\t// return an empty array if we are not to be reporting any tosses\n\t\tif (!this.reportTosses) return []\n\n\t\t// we only want to convey the result of the last toss between two partners\n\t\tlet tosses: { [props: string]: { won: boolean, against: Subcaucus } } = {}\n\t\tthis._tosses.forEach((toss) => {\n\t\t\ttosses[String(toss.against.id)] = toss\n\t\t})\n\t\treturn Object.keys(tosses).map((key) => tosses[key])\n\t}\n\n\t/**\n\t * Add a delegate due to the remainder allocations.\n\t */\n\taddRemainderDelegate = () => {\n\t\tthis.delegates++\n\t}\n\n\t/**\n\t * A textual representation of the subcaucus.\n\t */\n\tasText = (): string => {\n\t\tlet text = ''\n\n\t\tif (!this.name && !this.count) return text\n\n\t\ttext += this.displayName() + \": \"\n\n\t\ttext += this.count.singularPlural(\"member\", \"members\")\n\n\t\tif (this.delegates === 0) {\n\t\t\ttext += \" in a non-viable subcaucus.\"\n\t\t\treturn text\n\t\t}\n\n\t\ttext += \" may elect \" + this.delegates.singularPlural(\"delegate\", \"delegates\")\n\n\t\tif (this.remainder) {\n\t\t\ttext += \" (\"\n\n\t\t\tif (this.remainder) {\n\t\t\t\ttext += \"remainder \" + this.remainder.decimalPlaces(3)\n\t\t\t}\n\n\t\t\tthis.tosses().forEach((toss) => {\n\t\t\t\ttext += \", \" + (toss.won ? \"won\" : \"lost\") + \" vs \" + toss.against.displayName()\n\t\t\t})\n\n\t\t\tif (this.delegates > this.baseDelegates) {\n\t\t\t\ttext += \", awarded a remainder delegate\"\n\t\t\t}\n\n\t\t\ttext += \")\"\n\t\t}\n\n\t\treturn text + \".\"\n\t}\n\n\t/**\n\t * A CSV representation of the subcaucus.\n\t */\n\tasCSV = (): string => {\n\t\tlet csv = this.displayName().csvQuoted()\n\n\t\tif (!this.name && !this.count) return ''\n\n\t\tcsv += ',' + this.count\n\t\tcsv += ',' + this.delegates\n\t\tcsv += ',' + this.remainder\n\t\tcsv += ',' + this.tosses().map((toss) => {\n\t\t\treturn (toss.won ? \"won\" : \"lost\") + \" vs \" + toss.against.displayName()\n\t\t}).join(', ').csvQuoted()\n\t\tcsv += ',' + (this.delegates - this.baseDelegates)\n\n\t\treturn csv\n\t}\n\n}","import { number } from \"@mojotech/json-type-validation\";\n\n/**\n * SubCalcPRNG.ts\n *\n * Manages the generation of random numbers.\n *\n * Our random numbers, like most computed random numbers,\n * are not actually random, but rather \"psedo-random\".\n * We just need numbers that are random enough to be a\n * fair approximation of the coin flips in the walking\n * subcaucus process.\n *\n * We do this ourselves so that we know exactly how the\n * numbers were generated and can replicate the exact same\n * \"random\" results on other platforms or when we retrieve\n * caucus information in the future. We do not actually store\n * the computed caucus results, after all, so we need to be\n * able to reliably reproduce them in the future. This means\n * our random numbers need to be predictable and reproducable.\n * \n * This class is based on http://stackoverflow.com/a/22313621/383737\n * but modified to accept strings and turn them into numbers.\n */;\n\n/**\n * Manages the generation of random numbers.\n */\nexport class SubCalcPRNG {\n\n\tmod1 = 4294967087\n\tmul1 = 65539\n\tmod2 = 4294965887\n\tmul2 = 65537\n\tstate1 = 0\n\tstate2 = 0\n\n\t/**\n\t * Can be called with no arguments in order to seed \n\t * the PRNG with the current time, or it can \n\t * be called with either 1 or 2 non-negative integers as arguments \n\t * in order to seed it with those integers. Due to float point \n\t * accuracy seeding with only 1 value will only allow the generator \n\t * to be initiated to one of 2^53 different states.\n\t * \n\t * For convenience, strings supplied to parameters will be \n\t * converted to numbers and all numbers will be converted to\n\t * positive integers.\n\t * \n\t * @param state1 will default to seconds since Unix epoch\n\t * @param state2 will default to value of seed1\n\t */\n\tconstructor(state1: string | number, state2?: string | number) {\n\n\t\tthis.state1 = Math.abs(Math.floor(Number(state1)))\n\t\tthis.state2 = Math.abs(Math.floor(Number(state2)))\n\n\t\tif (isNaN(this.state1) || this.state1 < 1) {\n\t\t\tthis.state1 = Number(new Date())\n\t\t}\n\t\tif (isNaN(this.state2) || this.state2 < 1) {\n\t\t\tthis.state2 = this.state1\n\t\t}\n\t\tthis.state1 = this.state1 % (this.mod1 - 1) + 1\n\t\tthis.state2 = this.state2 % (this.mod2 - 1) + 1\n\t}\n\n\trecord: Array<{ limit: number, result: number }> = []\n\n\t/**\n\t * This PRNG function takes 1 integer limit argument which\n\t * must be in the range 1 to 4294965886. It will return a \n\t * number in the range 0 to limit-1.\n\t * \n\t * For convenience, all numbers will be converted to\n\t * positive integers.\n\t * \n\t * @param limit constrains the result between 0 and limit-1\n\t */\n\trandomUpTo = (limit: number): number => {\n\n\t\tlimit = Math.abs(Math.floor(limit))\n\n\t\tthis.state1 = (this.state1 * this.mul1) % this.mod1\n\t\tthis.state2 = (this.state2 * this.mul2) % this.mod2\n\n\t\tif (\n\t\t\tthis.state1 < limit\n\t\t\t&& this.state2 < limit\n\t\t\t&& this.state1 < this.mod1 % limit\n\t\t\t&& this.state2 < this.mod2 % limit\n\t\t) {\n\t\t\treturn this.randomUpTo(limit)\n\t\t}\n\n\t\tconst result = (this.state1 + this.state2) % limit\n\t\tthis.record.push({ limit: limit, result: result })\n\t\treturn result\n\t}\n\n\t/**\n\t * Like Math.random, this returns a random number\n\t * between 0 and 1.\n\t */\n\trandom = (): number => {\n\t\tconst limit = 4294965885\n\t\treturn this.randomUpTo(limit) / limit\n\t}\n\n\t/**\n\t * This function \"flips a coin\" and returns either \n\t * heads (1) or tails (-1). It is designed for use\n\t * in sorting to produce a random order.\n\t */\n\trandomComparison = (): -1 | 1 => {\n\t\treturn this.randomUpTo(2) ? -1 : 1\n\t}\n\n\trecordSummary = (): { [limit: string]: { [result: string]: number } } => {\n\t\tconst summary: { [limit: string]: { [result: string]: number } } = {}\n\n\t\tthis.record.forEach((r) => {\n\t\t\tlet limit = summary[String(r.limit)]\n\t\t\tif (limit === undefined) {\n\t\t\t\tlimit = {}\n\t\t\t}\n\t\t\tif (limit[String(r.result)] === undefined) {\n\t\t\t\tlimit[String(r.result)] = 1\n\t\t\t} else {\n\t\t\t\tlimit[String(r.result)]++\n\t\t\t}\n\t\t\tsummary[String(r.limit)] = limit\n\t\t})\n\n\t\treturn summary\n\t}\n}","/**\n * Snapshot.ts\n * \n * Holds all the information for a single snapshot.\n * Handles the calculation of delegates for a snapshot.\n * Handles conversion to and from JSON.\n */\n\n// see https://github.com/ClickSimply/typescript-map\nimport { TSMap } from 'typescript-map'\n\n// see: https://github.com/mojotech/json-type-validation\nimport { Decoder, object, string, number, dict } from '@mojotech/json-type-validation'\n\n// local to this app\nimport * as _u from './Utilities'\nimport { Subcaucus } from './Subcaucus'\nimport { SubCalcPRNG } from './SubCalcPRNG'\n\ndeclare global {\n\n\tinterface SnapshotInitializer {\n\t\tdevice: number\n\t\tcreated: TimestampString\n\t\twith?: {\n\t\t\trevised?: TimestampString\n\t\t\trevision?: string\n\t\t\tname?: string\n\t\t\tallowed?: number\n\t\t\tseed?: number\n\t\t\tsubcaucuses?: TSMap<number, Subcaucus>\n\t\t},\n\t\tjson?: SnapshotJSON\n\t}\n\n\tinterface SnapshotJSON {\n\t\tdevice: number\n\t\tcreated: TimestampString\n\t\trevised: TimestampString\n\t\trevision: string\n\t\tname: string\n\t\tallowed: number\n\t\tseed: number\n\t\tsubcaucuses: { [id: string]: SubcaucusJSON }\n\t}\n\n}\n\nexport class Snapshot {\n\n\tdebugID = ` ------ ${_u.uniqueNumber()} ------ `\n\tdebug = (): string => {\n\t\treturn \"\\nSnapshot\" + this.debugID + \"\\n\"\n\t\t\t+ this.name + \"/\" + this.revision + \"/\" + this.allowed\n\t\t\t+ \" \" + this.subcaucuses.map((s) => s.debug()).join(\", \")\n\t}\n\tcreated: TimestampString\n\tdevice: number\n\trevised: TimestampString\n\trevision: string\n\tname: string\n\tallowed: number\n\tseed: number\n\tsubcaucuses: TSMap<number, Subcaucus>\n\n\tstatic decoder: Decoder<SnapshotJSON> = object({\n\t\tdevice: number(),\n\t\tcreated: string(),\n\t\trevised: string(),\n\t\trevision: string(),\n\t\tname: string(),\n\t\tallowed: number(),\n\t\tseed: number(),\n\t\tsubcaucuses: dict(Subcaucus.decoder)\n\t})\n\n\t/**\n\t * Creates a new snapshot instance.\n\t * \n```typescript\ninterface SnapshotInitializer {\n\tdevice: number\n\tcreated: TimestampString\n\twith?: {\n\t\trevised?: TimestampString\n\t\trevision?: string\n\t\tname?: string\n\t\tallowed?: number\n\t\tseed?: number\n\t\tsubcaucuses?: TSMap<number, Subcaucus>\n\t}\n\tjson?: SnapshotJSON\n}\n```\n\t * \n\t * @param {SnapshotInitializer} init\n\t */\n\tconstructor(init: SnapshotInitializer) {\n\t\tthis.created = init.created\n\t\tthis.device = init.device\n\t\tthis.revised = _u.now()\n\t\tthis.revision = ''\n\t\tthis.name = ''\n\t\tthis.allowed = 0\n\t\tthis.seed = _u.randomSeed()\n\t\tthis.subcaucuses = new TSMap<number, Subcaucus>()\n\n\t\tif (init.with) {\n\t\t\tthis.revised = init.with[\"revised\"] || this.revised\n\t\t\tthis.revision = init.with[\"revision\"] || this.revision\n\t\t\tthis.name = init.with[\"name\"] || this.name\n\t\t\tthis.allowed = init.with[\"allowed\"] || this.allowed\n\t\t\tthis.seed = init.with[\"seed\"] || this.seed\n\t\t\tif (init.with[\"subcaucuses\"]) {\n\t\t\t\tthis.subcaucuses = init.with[\"subcaucuses\"]\n\t\t\t}\n\t\t}\n\n\t\tif (init.json) {\n\t\t\tthis.fromJSON(init.json)\n\t\t}\n\n\t}\n\n\t/**\n\t * Provide a copy of this instance of a snapshot,\n\t * including deep copies of the subcaucuses.\n\t * \n\t * See: https://www.nickang.com/how-to-clone-class-instance-javascript/\n\t */\n\trecreate = (): Snapshot => {\n\t\t// TSMap clones break classes and don't go deep enough\n\t\t// so we loop through and recreate subcaucuses\n\t\tlet subcaucuses = new TSMap<number, Subcaucus>()\n\t\tthis.subcaucuses.forEach((subcaucus) => {\n\t\t\tsubcaucuses.set(subcaucus.id, subcaucus.recreate())\n\t\t})\n\t\treturn new Snapshot({\n\t\t\tdevice: this.device,\n\t\t\tcreated: this.created,\n\t\t\twith: {\n\t\t\t\trevised: this.revised,\n\t\t\t\trevision: this.revision,\n\t\t\t\tname: this.name,\n\t\t\t\tallowed: this.allowed,\n\t\t\t\tseed: this.seed,\n\t\t\t\tsubcaucuses: subcaucuses\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Return a JSON object version of the data in this\n\t * class wants to share.\n\t */\n\ttoJSON = (): {\n\t\tcreated: TimestampString\n\t\tdevice: number\n\t\trevised: TimestampString\n\t\trevision: string\n\t\tname: string\n\t\tallowed: number\n\t\tseed: number\n\t\tsubcaucuses: any\n\t} => {\n\t\treturn {\n\t\t\tcreated: this.created,\n\t\t\tdevice: this.device,\n\t\t\trevised: this.revised,\n\t\t\trevision: this.revision,\n\t\t\tname: this.name,\n\t\t\tallowed: this.allowed,\n\t\t\tseed: this.seed,\n\t\t\tsubcaucuses: this.subcaucuses.toJSON(),\n\t\t}\n\t}\n\n\tfromJSON = (json: SnapshotJSON) => {\n\t\tconst decoded = Snapshot.decoder.run(json)\n\n\t\tif (decoded.ok) {\n\t\t\tthis.created = decoded.result.created\n\t\t\tthis.device = decoded.result.device\n\t\t\tthis.revised = decoded.result.revised\n\t\t\tthis.revision = decoded.result.revision\n\t\t\tthis.name = decoded.result.name\n\t\t\tthis.allowed = decoded.result.allowed\n\t\t\tthis.seed = decoded.result.seed\n\t\t\tthis.subcaucuses = new TSMap<number, Subcaucus>()\n\t\t\tObject.keys(decoded.result.subcaucuses).forEach((key) => {\n\t\t\t\tconst jsub = decoded.result.subcaucuses[key]\n\t\t\t\tconst keyNum = Number(key)\n\t\t\t\tthis.subcaucuses.set(keyNum, new Subcaucus({\n\t\t\t\t\tid: keyNum,\n\t\t\t\t\tjson: jsub\n\t\t\t\t}))\n\t\t\t})\n\t\t} else {\n\t\t\t_u.debug(decoded.error)\n\t\t}\n\t}\n\n\t/**\n\t * Update the snapshot with new values. \n\t * If signalling a change to subcaucuses\n\t * just send without any update.\n\t * \n\t * Revising the snapshot forces a \n\t * redistribution of delegates.\n\t */\n\trevise = (update?: {\n\t\tname?: string,\n\t\tallowed?: number,\n\t\tseed?: number,\n\t}) => {\n\t\t// we mark the snapshot as revised even if no updates were sent\n\t\t// because it may be a signal that the subcaucuses changed\n\t\tthis.revised = _u.now()\n\t\tthis.revision = \"\"\n\t\tif (update) {\n\t\t\tif (update.name) {\n\t\t\t\tthis.name = update.name\n\t\t\t}\n\t\t\tif (update.allowed) {\n\t\t\t\tthis.allowed = update.allowed\n\t\t\t}\n\t\t\tif (update.seed) {\n\t\t\t\tthis.seed = update.seed\n\t\t\t}\n\t\t}\n\t\tthis.redistributeDelegates()\n\t}\n\n\tclearCounts = () => {\n\t\tthis.revised = _u.now()\n\t\tthis.revision = \"\"\n\t\tthis.subcaucuses.forEach((sub) => {\n\t\t\tsub.count = 0\n\t\t})\n\t\tthis.redistributeDelegates()\n\t}\n\n\t/**\n\t * The number of people \"in the room\"\n\t * (the total of subcaucus counts).\n\t */\n\tparticipants = 0\n\n\t/**\n\t * The total number of delegates allocated.\n\t */\n\ttotalDelegates = 0\n\n\t/**\n\t * The number of people in the room divided by the number of delegates allowed.\n\t */\n\tparticipantsPerDelegate = 0\n\n\t/**\n\t * The number of members a subcaucus must have to be viable.\n\t */\n\tviabilityNumber = 0\n\n\t/**\n\t * The number of people who are members of viable subcaucuses\n\t */\n\tviableParticipants = 0\n\n\t/**\n\t * The total number of people who are members of viable subcaucuses\n\t * divided by the number of delegates allowed.\n\t */\n\tdelegateDivisor = 0\n\n\t/**\n\t * Recalculate the delegate numbers for this snapshot.\n\t */\n\tredistributeDelegates = () => {\n\t\t_u.debug(\"Distributing delegates\");\n\n\t\tif (!this.allowed) return\n\n\t\tconst subs = this.subcaucuses.values()\n\n\t\tlet scIncludeRemainderStatement = false; // will be set true if there is a coin flip\n\n\t\t// first clear out all the delegate information\n\t\tsubs.forEach((s) => s.clearDelegateInfo())\n\n\t\t// \"Step No. 1: Add up the total number of members of all the subcaucuses.\" (participants)\n\t\tthis.participants = subs.reduce((acc, sub) => {\n\t\t\treturn acc + sub.count\n\t\t}, 0)\n\n\t\tif (!this.participants) return\n\n\t\t// \"Step No. 2: Divide the result of Step No. 1\" (participants)\n\t\t// \"by the total number of delegates to be elected,\" (allowed)\n\t\t// \"round the result up to the next whole number.\" (viabilityNumber)\n\t\t// \"This is the viability number.\" \n\t\t// (this contradicts the example, which uses viability rather than wholeViability)\n\n\t\tthis.participantsPerDelegate = this.participants / this.allowed\n\t\tthis.viabilityNumber = Math.ceil(this.participantsPerDelegate)\n\n\t\t// determine which subcaucuses are viable (viabilityScore >= 1)\n\t\t// and calculate the total number viable people in the room (viableParticipants)\n\n\t\tconst vSubs = subs.filter((s) => s.count >= this.viabilityNumber)\n\t\tthis.viableParticipants = vSubs.reduce((acc, sub) => {\n\t\t\treturn acc + sub.count\n\t\t}, 0)\n\n\t\tif (!this.viableParticipants) return\n\n\t\t// recalculate the viability number for the delegate allocation process\n\t\tthis.delegateDivisor = this.viableParticipants / this.allowed;\n\n\t\t// calculate how many delegates each viable subcaucus gets\n\t\tvSubs.forEach((s) => s.setViability(this.delegateDivisor))\n\n\t\t// and add up the number of delegates assigned\n\t\tthis.totalDelegates = vSubs.reduce((acc, sub) => {\n\t\t\treturn acc + sub.baseDelegates\n\t\t}, 0)\n\n\t\t// now sort and assign the remainders\n\n\t\t// seed a new random number generator so that we get consistent random results\n\t\tconst scRand = new SubCalcPRNG(this.seed)\n\n\t\tlet vSubRanks = vSubs.map((s) => s.id)\n\n\t\t// see: https://bost.ocks.org/mike/shuffle/\n\t\t// and: https://stackoverflow.com/a/2450976\n\t\tlet m = vSubRanks.length\n\n\t\t// While there remain elements to shuffle…\n\t\twhile (m) {\n\t\t\t// Pick a remaining element…\n\t\t\tconst i = scRand.randomUpTo(m--)\n\n\t\t\t// And swap it with the current element.\n\t\t\tconst temp = vSubRanks[m]\n\t\t\tvSubRanks[m] = vSubRanks[i]\n\t\t\tvSubRanks[i] = temp\n\t\t}\n\n\t\t// sort the subcaucuses into remainder order with highest remainders first\n\t\tvSubs.sort((a, b) => {\n\t\t\tif (a.remainder > b.remainder) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse if (a.remainder < b.remainder) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// at this point we have a tie of remainders, so we have to \"flip a coin\"\n\n\t\t\t/*\tA note about \"coin-flips\" or \"drawing lots\"...\n\t\t\n\t\t\t\tTraditionally, when there are delegates remaining to be assigned and\n\t\t\t\ttwo subcaucuses are \"tied\" with the same size delegations, the chair\n\t\t\t\tof the caucus will use some method of assigning those remaining delegates\n\t\t\t\tat random. These methods include coin-flips or drawing lots.\n\t\t\n\t\t\t\tIn this program we accomplish the same randomness, but we do so by first\n\t\t\t\tbuilding this \"rank order\" for remainders to be assigned. It is as though\n\t\t\t\twe flipped the coins before we had a tie and just said that in the event of\n\t\t\t\ta tie we will assign delegates in this (predetermined but random) order.\n\t\t\n\t\t\t\tHowever, since it is possible for this order to shift each time the calculation\n\t\t\t\tis run, it could be that the exact same set of counts for subcaucuses could result\n\t\t\t\tin slightly different delegate assignments from time to time.\n\t\t\t \n\t\t\t\tAt this point in the code, we've determined that two delegation have\n\t\t\t\tthe exact same amount of \"remainder\". The next line of code flips the\n\t\t\t\tcoin to predetermine the order in which these two delegations will be\n\t\t\t\tassigned delegates.\n\t\t\t*/\n\n\t\t\tconst coinFlip = vSubRanks.indexOf(a.id) < vSubRanks.indexOf(b.id) ? -1 : 1\n\n\t\t\t// report the coin flip to each subcaucus\n\t\t\ta.coinToss(coinFlip === -1, b)\n\t\t\tb.coinToss(coinFlip === 1, a)\n\n\t\t\t// return the coin flip as the result of this comparison\n\t\t\treturn (coinFlip);\n\t\t})\n\n\t\t// walk though the now-ranked subcaucuses to assign any remainders\n\t\t// this would be much simpler, exept we want to keep track of who\n\t\t// will really need to know details about tosses.\n\t\tlet remainder = -1\n\t\tlet reportingTo: Array<Subcaucus> = []\n\t\tlet justAddedRemainderDelegate = false\n\t\tvSubs.forEach((s) => {\n\t\t\tif (this.totalDelegates < this.allowed) {\n\t\t\t\tthis.totalDelegates++\n\t\t\t\ts.addRemainderDelegate()\n\t\t\t\tjustAddedRemainderDelegate = true\n\t\t\t\tif (remainder != s.remainder) {\n\t\t\t\t\t// this means that all of the previous\n\t\t\t\t\t// remainder were assigned remainder delegates\n\t\t\t\t\t// so we don't have to report coin tosses\n\t\t\t\t\treportingTo = []\n\t\t\t\t\tremainder = s.remainder\n\t\t\t\t}\n\t\t\t\treportingTo.push(s)\n\t\t\t} else {\n\t\t\t\tif (remainder == s.remainder) {\n\t\t\t\t\treportingTo.push(s)\n\t\t\t\t} else {\n\t\t\t\t\tif (justAddedRemainderDelegate) {\n\t\t\t\t\t\t// since the last remainder that got\n\t\t\t\t\t\t// a remainder delegate was not the same\n\t\t\t\t\t\t// as this remainder, it means there was\n\t\t\t\t\t\t// no contest between equal remainders,\n\t\t\t\t\t\t// so we don't have to report coin tosses\n\t\t\t\t\t\treportingTo = []\n\t\t\t\t\t}\n\t\t\t\t\tremainder = -1\n\t\t\t\t}\n\t\t\t\tjustAddedRemainderDelegate = false\n\t\t\t}\n\t\t})\n\t\t// those subcaucuses left in the report remainder list\n\t\t// should eventually report their coin tosses\n\t\treportingTo.forEach((s) => {\n\t\t\ts.reportTosses = true\n\t\t})\n\n\t\tconsole.log(\"random summary\", scRand.recordSummary())\n\n\t}\n\n\t/**\n\t * Derive the appropriate meeting key from\n\t * the data in this snapshot.\n\t */\n\tmeetingKey = (): string => {\n\t\treturn `${this.created} ${this.device}`\n\t}\n\n\t/**\n\t * Derive the appropriate snapshot key from\n\t * the data in this snapshot.\n\t */\n\tsnapshotKey = (): string => {\n\t\treturn `${this.created} ${this.device} ${this.revised}`\n\t}\n\n\t/**\n\t * The next ID in use for subcacuses in this snapshot.\n\t * \n\t * One more than the current maximum ID.\n\t */\n\tnextSubcaucusID = (): number => {\n\t\tif (this.subcaucuses.length === 0) {\n\t\t\treturn 1\n\t\t}\n\t\tconst max = Math.max(...this.subcaucuses.keys())\n\t\treturn max + 1\n\t}\n\n    /**\n     * Add a subcaucus (empty by default).\n     */\n\taddSubcaucus = (name = '', count = 0, delegates = 0) => {\n\t\tconst newID = this.nextSubcaucusID()\n\t\tthis.subcaucuses.set(newID, new Subcaucus({\n\t\t\tid: newID,\n\t\t\twith: {\n\t\t\t\tname: name,\n\t\t\t\tcount: count,\n\t\t\t\tdelegates: delegates\n\t\t\t}\n\t\t}))\n\t}\n\n\t/**\n\t * Delete a subcaucus from this snapshot.\n\t */\n\tdeleteSubcaucus = (id: number) => {\n\t\tthis.subcaucuses.delete(id)\n\t}\n\n\t/**\n\t * A textual representation of the state of this snapshot.\n\t */\n\tasText = (): string => {\n\t\tlet text = \"\"\n\n\t\ttext += `${this.name} ${this.revision ? `(${this.revision}) ` : ''}was allowed ${this.allowed.singularPlural(\"delegate\", \"delegates\")}.\\n\\n`\n\n\t\tif (this.participants > 0) {\n\n\t\t\tthis.subcaucuses.forEach((subcaucus) => {\n\t\t\t\tconst sText = subcaucus.asText()\n\t\t\t\ttext += sText ? sText + \"\\n\\n\" : ''\n\t\t\t})\n\n\t\t\ttext += `${this.participants.singularPlural(\"person was\", \"people were\")} participating, the initial viability number was ${this.viabilityNumber} (${this.participantsPerDelegate.decimalPlaces(3)} participants per delegate).\\n`\n\n\t\t\tif (this.participants > this.viableParticipants) {\n\t\t\t\ttext += `${(this.participants - this.viableParticipants).singularPlural(\"person was\", \"people were\")} in a non-viable caucus, you may want to consider another round of walking.\\n`\n\t\t\t\ttext += `The delegate divisor (number of members needed to allocate each delegate) was ${this.delegateDivisor.decimalPlaces(3)}.\\n`\n\t\t\t}\n\t\t\ttext += \"\\n\"\n\n\t\t} else {\n\t\t\ttext += \"Nobody was participating.\\n\\n\"\n\t\t}\n\n\n\t\tlet revised = new Date(Date.parse(this.revised))\n\n\t\ttext += `The coin had a random seed of ${this.seed}.\\n`\n\t\ttext += `Last revised ${revised.toLocaleString('en-US', { timeZoneName: 'short' })} \\n`\n\t\treturn text\n\t}\n\n\t/**\n\t * A CSV representation of the state of this snapshot.\n\t */\n\tasCSV = (): string => {\n\t\tlet csv: Array<string> = []\n\n\t\tcsv.push(\"Subcaucus,Members,Delegates,Remainder,Coin Tosses,Remainder Delegates\")\n\n\t\tthis.subcaucuses.forEach((subcaucus) => {\n\t\t\tconst row = subcaucus.asCSV()\n\t\t\tif (row) {\n\t\t\t\tcsv.push(row)\n\t\t\t}\n\t\t})\n\n\t\tcsv.push('')\n\n\t\tcsv.push(`Participants,${this.participants}`)\n\t\tcsv.push(`Delegates elected,,${this.totalDelegates}`)\n\t\tcsv.push(`Participants per delegate,${this.participantsPerDelegate}`)\n\t\tcsv.push(`Viability number,${this.viabilityNumber}`)\n\t\tcsv.push(`Participants in non-viable caucuses,${this.participants - this.viableParticipants}`)\n\t\tcsv.push(`Delegate divisor,${this.delegateDivisor}`)\n\t\tcsv.push(`Coin random seed,${this.seed}`)\n\n\t\tcsv.push('')\n\n\t\tcsv.push(`Meeting,${this.name.csvQuoted()}`)\n\t\tcsv.push(`Revision,${this.revision.csvQuoted()}`)\n\n\t\tlet revised = new Date(Date.parse(this.revised))\n\n\t\tcsv.push(`Revised,${revised.toLocaleString('en-US', { timeZoneName: 'short' }).csvQuoted()}`)\n\n\n\t\treturn csv.join(\"\\r\\n\")\n\t}\n\n}","/**\n * SubCalcOne.ts\n * \n * Manages retrieval of old subcalc v. 1 data from storage.\n */\n\n// see: https://github.com/mojotech/json-type-validation\nimport { Decoder, object, string, number, array, dict } from '@mojotech/json-type-validation'\n\n// local to this app\nimport * as _u from './Utilities'\nimport { Snapshot } from './Snapshot'\n\n/**\n * JSON representation of subcalc1 in storage\n */\ninterface SubCalcOneJSON {\n\tcurrent: SubCalcOneCaucusJSON\n\tsaved: {\n\t\t[key: string]: {\n\t\t\tcaucus: SubCalcOneCaucusJSON\n\t\t\tsaved: number\n\t\t}\n\t}\n}\n\n/**\n * JSON representation of subcalc1 caucus in storage\n */\ninterface SubCalcOneCaucusJSON {\n\tallowed: number\n\tmembers: { [key: string]: number }\n\tnames: { [key: string]: string }\n\tprecinct: string\n\tseed: number\n}\n\n/**\n * Manages retrieval of old subcalc v. 1 data from storage.\n */\nexport class SubCalcOne {\n\n\t/**\n\t * The json-type-validation decoder for subcalc v. 1 caucus JSON.\n\t */\n\tstatic caucusDecoder: Decoder<SubCalcOneCaucusJSON> = object({\n\t\tallowed: number(),\n\t\tprecinct: string(),\n\t\tseed: number(),\n\t\tnames: dict(string()),\n\t\tmembers: dict(number())\n\t})\n\n\t/**\n\t * The json-type-validation decoder for subcalc v. 1 JSON.\n\t */\n\tstatic decoder: Decoder<SubCalcOneJSON> = object({\n\t\tcurrent: SubCalcOne.caucusDecoder,\n\t\tsaved: dict(\n\t\t\tobject({\n\t\t\t\tcaucus: SubCalcOne.caucusDecoder,\n\t\t\t\tsaved: number()\n\t\t\t})\n\t\t)\n\t})\n\n\t/**\n\t * The updated version of the subcalc v. 1 current caucus.\n\t */\n\tsnapshot?: Snapshot\n\n\t/**\n\t * An array of saved caucuses from the subcalc v. 1 data.\n\t */\n\tsaved: Array<Snapshot> = []\n\n\t/**\n\t *  Device number (passed in at time of construction).\n\t */\n\tdevice: number\n\n\t/**\n\t * Create an instance of a storage object to manage local storage.\n\t */\n\tconstructor(device: number, storageKey = \"subcalc\") {\n\n\t\tthis.device = device\n\n\t\tthis.read(storageKey)\n\n\t}\n\n\t/**\n\t * An awful synchronous sleep function. Only used to delay for initial migration.\n\t */\n\tsleep = (ms: number) => {\n\t\t// see: https://stackoverflow.com/a/17936490/383737\n\t\tvar now = new Date().getTime();\n\t\twhile (new Date().getTime() < now + ms) { /* do nothing */ }\n\t}\n\n\t/**\n\t * Try to populate this instance with subcalc v. 1 data from local storage.\n\t */\n\tread = (storageKey: string) => {\n\t\tlet json: SubCalcOneJSON\n\n\t\t// if we are running in the phone app, wait a few seconds\n\t\t// for the app to get a chance to stuff subcalc data into local storage\n\t\tif (_u.isApp()) {\n\t\t\tthis.sleep(2000) // hack hack hack... very flimsy\n\t\t}\n\n\t\ttry {\n\t\t\tjson = JSON.parse(localStorage.getItem(storageKey) || 'false')\n\t\t} catch (e) {\n\t\t\t_u.debug(e)\n\t\t\treturn\n\t\t}\n\n\t\tif (json) {\n\n\t\t\t// the decoding process validates the JSON and imbues it with types\n\t\t\tlet decoded = SubCalcOne.decoder.run(json)\n\n\t\t\tif (decoded.ok) {\n\t\t\t\t// since the JSON looks good, we can use it to create our current snapshot\n\t\t\t\tthis.snapshot = this.snapshotFromCaucus(decoded.result.current)\n\t\t\t\tthis.snapshot.revision = \"Latest\"\n\t\t\t\tthis.saved.push(this.snapshot)\n\n\t\t\t\t// we also create an array of modern snapshots that can later be written to local storage\n\t\t\t\tObject.keys(decoded.result.saved).forEach((key) => {\n\t\t\t\t\tif (decoded.ok) { // this reassures the compiler since we are in an anonymous function\n\t\t\t\t\t\tthis.saved.push(\n\t\t\t\t\t\t\tthis.snapshotFromCaucus(\n\t\t\t\t\t\t\t\tdecoded.result.saved[key].caucus,\n\t\t\t\t\t\t\t\tdecoded.result.saved[key].saved\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t} else {\n\t\t\t\t_u.debug(decoded.error)\n\t\t\t}\n\n\t\t} else {\n\t\t\t_u.debug(\"No subcalc 1 data found\")\n\t\t}\n\t}\n\n\tsnapshotFromCaucus = (caucus: SubCalcOneCaucusJSON, saved?: number): Snapshot => {\n\t\tconst revised = saved\n\t\t\t? new Date(saved).toTimestampString()\n\t\t\t: new Date(caucus.seed).toTimestampString()\n\n\t\tconst snapshot = new Snapshot({\n\t\t\tdevice: this.device,\n\t\t\tcreated: new Date(caucus.seed).toTimestampString(),\n\t\t\twith: {\n\t\t\t\tname: \"Imported from \" + (new Date(caucus.seed)).toLocaleDateString(),\n\t\t\t\tallowed: caucus.allowed,\n\t\t\t\trevised: revised,\n\t\t\t\trevision: caucus.precinct\n\t\t\t}\n\t\t})\n\n\t\tObject.keys(caucus.members).forEach((key) => {\n\t\t\tsnapshot.addSubcaucus(caucus.names[key], caucus.members[key])\n\t\t})\n\n\t\treturn snapshot\n\t}\n\n}","/**\n * SubCalcStorage.ts\n * \n * Manages storage in app or localStorage.\n * Handles conversion to and from JSON.\n */\n\n// see: https://github.com/mojotech/json-type-validation\nimport { Decoder, object, number } from '@mojotech/json-type-validation'\n\n// local to this app\nimport * as _u from './Utilities'\nimport { Snapshot } from './Snapshot'\nimport { SubCalcOne } from './SubCalcOne';\nimport { isArray } from 'util';\n\ndeclare global {\n\n\t/**\n\t * JSON representation of subcalc2 in storage.\n\t */\n\tinterface SubCalcJSON {\n\t\tv: number\n\t\tdevice: number\n\t\tsnapshot: SnapshotJSON\n\t}\n\n}\n\n/**\n * Manages storage in app or localStorage.\n * Handles conversion to and from JSON.\n */\nexport class SubCalc {\n\n\tdebug = (): string => {\n\t\treturn this.snapshot.debug()\n\t}\n\n\t/**\n\t * Version helps to future-proof the stored JSON.\n\t */\n\tversion = 2\n\n\t/**\n\t * This device is just a random number that will help\n\t * distinguish meeting identifiers if they start to be\n\t * shared among devices. Hopefully a combination of \n\t * device and meeting creation date won't collide.\n\t */\n\tdevice: number\n\n\t/**\n\t * This is the snapshot that is currently being\n\t * edited. The unique creator and device combo \n\t * will make it part of a \"meeting\".\n\t * \n\t * This snapshot will always be its own unique object,\n\t * separate from the saved snapshots. The saved snapshots\n\t * are only used to \"load up\" this one. This is the only\n\t * one the App ever tries to change.\n\t */\n\tsnapshot: Snapshot\n\n\t/**\n\t * This is where we save snapshots awaiting import.\n\t * \n\t * If there is more than one in the array, then the \n\t * first would be come the current snapshot and the\n\t * remainder would be saved.\n\t */\n\tincoming: Array<Snapshot> = []\n\n\t/**\n\t * A prefix to be used when creating local storage items\n\t * for each snapshot.\n\t */\n\tstoredSnapshotPrefix = \"sc-save\"\n\n\t/**\n\t * A prefix for snapshots in local storage trash.\n\t */\n\ttrashedSnapshotPrefix = \"sc-trash\"\n\n\t/**\n\t * The json-type-validation decoder for this class.\n\t */\n\tstatic decoder: Decoder<SubCalcJSON> = object({\n\t\tv: number(),\n\t\tdevice: number(),\n\t\tsnapshot: Snapshot.decoder,\n\t})\n\n\t/**\n\t * Create an instance of a storage object to manage local storage.\n\t */\n\tconstructor() {\n\n\t\t// no device means that subcalc has never run in this browser\n\t\t// so we gather together some basics about this instance\n\n\t\tthis.device = _u.randomSeed()\n\n\t\t// a poorly formed snapshot to mark failure of the read\n\t\tthis.snapshot = new Snapshot({ device: 0, created: \"\" })\n\n\t\t// store any incoming query items into the incoming variable\n\t\tthis.query()\n\n\t\t// look for local data\n\t\t// if found, it will override the values above\n\n\t\tthis.read()\n\n\t\t// check to see if the read succeeded\n\t\tif (!this.snapshot.created) {\n\n\t\t\t// since no actual snapshot was assigned\n\t\t\t// we will get a real one now\n\n\t\t\tthis.snapshot = this.newSnapshot()\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a string to be used to retrive a snapshot from local storage.\n\t * \n\t * Returns the key for the current shapshot by default.\n\t */\n\tstoredSnapshotKey = (snapshot?: Snapshot) => {\n\t\tif (snapshot === undefined) {\n\t\t\tsnapshot = this.snapshot\n\t\t}\n\t\treturn `${this.storedSnapshotPrefix} ${snapshot.snapshotKey()}`\n\t}\n\n\t/**\n\t * Return an array of all the snapshots found in local storage.\n\t */\n\tsnapshots = (status: 'saved' | 'trashed' = 'saved'): Array<Snapshot> => {\n\t\tlet snapshots: Array<Snapshot> = []\n\n\t\tconst length = localStorage.length\n\t\tconst prefix = status === 'saved'\n\t\t\t? this.storedSnapshotPrefix\n\t\t\t: this.trashedSnapshotPrefix\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst storedKey = localStorage.key(i)\n\t\t\tif (!storedKey) break\n\t\t\tif (storedKey.startsWith(prefix)) {\n\t\t\t\tconst snapshot = this.readSnapshot(storedKey)\n\t\t\t\tif (snapshot) {\n\t\t\t\t\tsnapshots.push(snapshot)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn snapshots\n\t}\n\n\t/**\n\t * Ensures that not only is the current meeting set properly,\n\t * but that this change is reflected in local storage as well.\n\t * Returns the new copy of the snapshot now considered current.\n\t * \n\t * NOTE: This method recreates the snapshot as the current\n\t * snapshot so that all connections to the orginal are broken.\n\t */\n\tsetSnapshot = (snapshot: Snapshot): Snapshot => {\n\t\tthis.snapshot = snapshot.recreate()\n\t\tthis.write()\n\t\treturn this.snapshot\n\t}\n\n\t/**\n\t * Creates a new snapshot, amounting to a new meeting.\n\t */\n\tnewSnapshot = (): Snapshot => {\n\t\tconst created = _u.now()\n\n\t\t// first create a new snapshot and make it current\n\t\tconst snapshot = new Snapshot({\n\t\t\tdevice: this.device,\n\t\t\tcreated: created\n\t\t})\n\n\t\t// add three subcaucuses to give the user a clue\n\t\tsnapshot.addSubcaucus()\n\t\tsnapshot.addSubcaucus()\n\t\tsnapshot.addSubcaucus()\n\n\t\t// make this the current snapshot\n\t\tthis.setSnapshot(snapshot)\n\n\t\t// note, we return the copy of the snapshot we\n\t\t// want used, which is this.snapshot, not snapshot\n\t\treturn this.snapshot\n\t}\n\n\t/**\n\t * Creates a duplicate of the current snapshot, \n\t * giving it a new created date and new name,\n\t * amounting to a new meeting.\n\t * \n\t * Note, it will keep the same random seed (\"coin\")\n\t * as the original.\n\t */\n\tduplicateSnapshot = (): Snapshot => {\n\t\t// first create a new snapshot and make it current\n\t\tthis.snapshot.created = _u.now()\n\t\tthis.snapshot.name = `Copy of ${this.snapshot.name}`\n\t\tthis.snapshot.revised = this.snapshot.created\n\t\tthis.snapshot.revision = \"\"\n\n\t\t// make this the current snapshot\n\t\tthis.setSnapshot(this.snapshot)\n\n\t\t// note, we return the copy of the snapshot we\n\t\t// want used, which is this.snapshot, not snapshot\n\t\treturn this.snapshot\n\t}\n\n\t/**\n\t * Write the current subcalc2 item out to local storage.\n\t * \n\t * This includes writing the current snapshot out.\n\t */\n\twrite = () => {\n\t\tconst jsonSubCalc = {\n\t\t\tv: this.version,\n\t\t\tdevice: this.device,\n\t\t\tsnapshot: this.snapshot.toJSON()\n\t\t}\n\t\ttry {\n\t\t\tconst jsonSubCalcString = JSON.stringify(jsonSubCalc)\n\t\t\t_u.debug(\"storing subcalc2\", jsonSubCalcString)\n\t\t\tlocalStorage.setItem(\"subcalc2\", jsonSubCalcString)\n\t\t} catch (e) {\n\t\t\t_u.alertUser(new Error(\"Failed to save subcalc2 to local storage\"), e)\n\t\t}\n\t}\n\n\t/**\n\t * Write a single snapshot to local storage.\n\t * \n\t * Defaults to writing the current snapshot.\n\t */\n\twriteSnapshot = (snapshot?: Snapshot) => {\n\t\t// default to this.snapshot and if it is this.snapshot then write the subcalc2 record\n\t\tif (!snapshot) {\n\t\t\tsnapshot = this.snapshot\n\t\t}\n\t\tif (snapshot === this.snapshot) {\n\t\t\tthis.write()\n\t\t}\n\t\t// if the snapshot is a revision, then save it in its own place as well\n\t\tif (snapshot.revision) {\n\t\t\tconst storedSnapshotKey = this.storedSnapshotKey(snapshot)\n\t\t\tconst jsnap = snapshot.toJSON()\n\t\t\ttry {\n\t\t\t\tconst jsnapString = JSON.stringify(jsnap)\n\t\t\t\t_u.debug(`storing ${storedSnapshotKey}`, jsnapString)\n\t\t\t\tlocalStorage.setItem(storedSnapshotKey, jsnapString)\n\t\t\t} catch (e) {\n\t\t\t\t_u.alertUser(new Error(`Error saving ${storedSnapshotKey} to local storage`), e)\n\t\t\t\treturn\n\t\t\t}\n\t\t} else if (snapshot != this.snapshot) {\n\t\t\t_u.alertUser(new Error(\"Snapshot was not saved.\"), snapshot)\n\t\t}\n\t}\n\n\t/**\n\t * Pass along a revision to the snapshot,\n\t * then write the snapshot to local storage.\n\t */\n\treviseSnapshot = (update?: {\n\t\tname?: string,\n\t\tallowed?: number,\n\t\tseed?: number,\n\t}, snapshot?: Snapshot) => {\n\t\tif (!snapshot) {\n\t\t\tsnapshot = this.snapshot\n\t\t}\n\t\tsnapshot.revise(update)\n\t\tthis.writeSnapshot()\n\t}\n\n\tzeroSubcaucuses = () => {\n\t\tthis.snapshot.clearCounts()\n\t\tthis.writeSnapshot()\n\t}\n\n\t/**\n\t * Saves a snapshot with the given revision name.\n\t */\n\tsaveSnapshot = (revision: string) => {\n\t\tthis.snapshot.revision = revision\n\t\tthis.writeSnapshot()\n\t}\n\n\t/**\n\t * Uses the current snapshot to rename the meeting by propagating\n\t * that change to all the other snapshots in the meeting.\n\t */\n\trenameMeeting = (name: string) => {\n\t\t// rename the current snapshot\n\t\tthis.snapshot.name = name\n\t\tthis.write()\n\t\tconst meetingKey = this.snapshot.meetingKey()\n\t\tthis.snapshots().forEach((snapshot) => {\n\t\t\tif (snapshot.meetingKey() === meetingKey) {\n\t\t\t\tsnapshot.name = name\n\t\t\t\tthis.writeSnapshot(snapshot)\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Remove a snapshot from local storage. If this is the last\n\t * snapshot in a meeting, this will also remove the meeting.\n\t * \n\t * NOTE: This method will not remove the \"current\" snapshot.\n\t */\n\ttrashSnapshot = (snapshot: Snapshot) => {\n\t\tconst snapshotKey = snapshot.snapshotKey()\n\t\tconst keyContent = localStorage.getItem(`${this.storedSnapshotPrefix} ${snapshotKey}`)\n\t\tif (keyContent) {\n\t\t\tlocalStorage.removeItem(`${this.storedSnapshotPrefix} ${snapshotKey}`)\n\t\t\tlocalStorage.setItem(`${this.trashedSnapshotPrefix} ${snapshotKey}`, keyContent)\n\t\t} else {\n\t\t\t_u.alertUser(new Error(`Could not find ${this.storedSnapshotPrefix} ${snapshotKey}`))\n\t\t}\n\t}\n\n\t/**\n\t * Delete all the trashed snapshots from local storage.\n\t */\n\temptyTrash = () => {\n\t\tthis.snapshots(\"trashed\").forEach((snapshot) => {\n\t\t\tconst snapshotKey = snapshot.snapshotKey()\n\t\t\tlocalStorage.removeItem(`${this.trashedSnapshotPrefix} ${snapshotKey}`)\n\t\t})\n\t}\n\n\n\t/**\n\t * Try to populate this instance with subcalc2 data from local storage.\n\t */\n\tread = () => {\n\t\tlet json: SubCalcJSON\n\n\t\ttry {\n\t\t\tjson = JSON.parse(localStorage.getItem(\"subcalc2\") || 'false')\n\t\t} catch (e) {\n\t\t\t_u.debug(e)\n\t\t\treturn\n\t\t}\n\n\t\tif (json) {\n\n\t\t\tlet decoded = SubCalc.decoder.run(json)\n\n\t\t\tif (decoded.ok) {\n\t\t\t\tif (this.version !== decoded.result.v) {\n\t\t\t\t\t_u.debug(`Expected subcalc version ${this.version}, got ${decoded.result.v}`)\n\t\t\t\t}\n\t\t\t\tthis.device = decoded.result.device\n\t\t\t\tthis.snapshot = new Snapshot({\n\t\t\t\t\tdevice: decoded.result.snapshot.device,\n\t\t\t\t\tcreated: decoded.result.snapshot.created,\n\t\t\t\t\tjson: decoded.result.snapshot\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t_u.debug(decoded.error)\n\t\t\t}\n\n\t\t} else {\n\t\t\t// try to populate this instance with subcalc1 data\n\t\t\tconst subcalcOne = new SubCalcOne(this.device)\n\t\t\tif (subcalcOne.snapshot) {\n\t\t\t\tthis.snapshot = subcalcOne.snapshot\n\t\t\t\tthis.write()\n\t\t\t\tsubcalcOne.saved.forEach((snapshot) => {\n\t\t\t\t\tthis.writeSnapshot(snapshot)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// still nothing, look for incoming query data\n\t\t\tif (!this.snapshot && this.incoming.length > 0) {\n\t\t\t\tthis.completeIncoming()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Given a snapshot key, this method looks for that meeting in\n\t * local storage and returns a new meeting object to holding that information.\n\t */\n\treadSnapshot = (storedSnapshotKey: string): Snapshot | undefined => {\n\n\t\treturn this.decodeSnapshot(localStorage.getItem(storedSnapshotKey) || 'false')\n\n\t}\n\n\t/**\n\t * Given a jsonString, this method tries to decode it into a Snapshot.\n\t */\n\tdecodeSnapshot = (jsonString: string): Snapshot | undefined => {\n\t\tlet json: SnapshotJSON\n\n\t\ttry {\n\t\t\tjson = JSON.parse(jsonString)\n\t\t} catch (e) {\n\t\t\t_u.debug(e)\n\t\t\treturn undefined\n\t\t}\n\n\t\tconst decoded = Snapshot.decoder.run(json)\n\n\t\tif (decoded.ok) {\n\t\t\treturn new Snapshot({\n\t\t\t\tcreated: decoded.result.created,\n\t\t\t\tdevice: decoded.result.device,\n\t\t\t\tjson: decoded.result\n\t\t\t})\n\t\t} else {\n\t\t\t_u.debug(decoded.error)\n\t\t}\n\n\t\treturn undefined\n\t}\n\n\t/**\n\t * Given a jsonString, this method tries to decode it into an array of Snapshots.\n\t */\n\tdecodeSnapshots = (jsonString: string): Array<Snapshot> => {\n\t\tconst result: Array<Snapshot> = []\n\n\t\tlet json: any\n\n\t\ttry {\n\t\t\tjson = JSON.parse(jsonString)\n\t\t} catch (e) {\n\t\t\t_u.debug(e)\n\t\t}\n\n\t\tif (isArray(json)) {\n\t\t\tjson.forEach((jsnap) => {\n\t\t\t\tconst decoded = Snapshot.decoder.run(jsnap)\n\n\t\t\t\tif (decoded.ok) {\n\t\t\t\t\tresult.push(new Snapshot({\n\t\t\t\t\t\tcreated: decoded.result.created,\n\t\t\t\t\t\tdevice: decoded.result.device,\n\t\t\t\t\t\tjson: decoded.result\n\t\t\t\t\t}))\n\t\t\t\t} else {\n\t\t\t\t\t_u.debug(decoded.error)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Given a jsonString, this method tries to decode it into a Snapshot.\n\t */\n\tdecodeCaucus = (jsonString: string): Snapshot | undefined => {\n\t\tlet json: SnapshotJSON\n\n\t\ttry {\n\t\t\tjson = JSON.parse(jsonString)\n\t\t} catch (e) {\n\t\t\t_u.debug(e)\n\t\t\treturn undefined\n\t\t}\n\n\t\tconst decoded = SubCalcOne.caucusDecoder.run(json)\n\n\t\tif (decoded.ok) {\n\t\t\tconst created = new Date(decoded.result.seed)\n\t\t\tconst snapshot = new Snapshot({\n\t\t\t\tdevice: this.device,\n\t\t\t\tcreated: created.toTimestampString(),\n\t\t\t\twith: {\n\t\t\t\t\tname: \"Imported from \" + created.toLocaleDateString(),\n\t\t\t\t\tallowed: decoded.result.allowed,\n\t\t\t\t\trevised: created.toTimestampString(),\n\t\t\t\t\trevision: decoded.result.precinct || \"via link\"\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tObject.keys(decoded.result.members).forEach((key) => {\n\t\t\t\tsnapshot.addSubcaucus(decoded.result.names[key], decoded.result.members[key])\n\t\t\t})\n\n\t\t\treturn snapshot\n\n\t\t} else {\n\t\t\t_u.debug(decoded.error)\n\t\t}\n\n\t\treturn undefined\n\t}\n\n\t/**\n\t * Finish importing from the query parameters.\n\t */\n\tcompleteIncoming = () => {\n\t\tthis.snapshot = this.incoming[0]\n\t\tthis.write()\n\t\tthis.incoming.forEach((snapshot) => {\n\t\t\tthis.writeSnapshot(snapshot)\n\t\t})\n\t\tthis.incoming = []\n\t}\n\n\t/**\n\t * Clear local storage and our own copies.\n\t */\n\tclear = () => {\n\t\tlocalStorage.clear()\n\t\tthis.newSnapshot()\n\t\tthis.write()\n\t}\n\n\t/**\n\t * Check the query for snapshots to import.\n\t * \n\t * The query was already moved from the URL to local storage,\n\t * this function will use the local storage version and then\n\t * remove the query from local storage.\n\t */\n\tquery = () => {\n\t\tconst query = localStorage.getItem(\"query\")\n\n\t\tif (!query) return\n\n\t\t_u.debug(\"found query\")\n\n\t\tconst params = new URLSearchParams(query)\n\n\t\tconst caucus = decodeURIComponent(params.get(\"caucus\") || '')\n\t\tconst subcalc1 = decodeURIComponent(params.get(\"subcalc1\") || '')\n\t\tconst snap = decodeURIComponent(params.get(\"snapshot\") || '')\n\t\tconst subcalc2 = decodeURIComponent(params.get(\"subcalc2\") || '')\n\n\t\tconst app = decodeURIComponent(params.get(\"app\") || '')\n\t\tconst version = decodeURIComponent(params.get(\"version\") || '')\n\t\tconst build = decodeURIComponent(params.get(\"build\") || '')\n\t\tconst debug = decodeURIComponent(params.get(\"debug\") || '')\n\n\t\tif (subcalc2) {\n\t\t\t_u.debug(\"query subcalc2\", subcalc2)\n\t\t\tconst snapshots = this.decodeSnapshots(subcalc2)\n\t\t\tthis.incoming.push(...snapshots)\n\t\t}\n\n\t\tif (snap) {\n\t\t\t_u.debug(\"query snapshot\", snap)\n\t\t\tconst snapshot = this.decodeSnapshot(snap)\n\t\t\tif (snapshot) this.incoming.push(snapshot)\n\t\t}\n\n\t\tif (subcalc1) {\n\t\t\t_u.debug(\"query subcalc1\", subcalc1)\n\t\t\tlocalStorage.setItem(\"incoming\", subcalc1)\n\t\t\tconst incoming = new SubCalcOne(this.device, \"incoming\")\n\t\t\tlocalStorage.removeItem(\"incoming\")\n\t\t\tthis.incoming.push(...incoming.saved)\n\t\t}\n\n\t\tif (caucus) {\n\t\t\t_u.debug(\"query caucus\", caucus)\n\t\t\tconst snapshot = this.decodeCaucus(caucus)\n\t\t\tif (snapshot) this.incoming.push(snapshot)\n\t\t}\n\n\t\tif (app) {\n\t\t\t_u.setApp(app, version, build)\n\t\t}\n\n\t\tif (debug) {\n\t\t\twindow['_tg_debug'] = true\n\t\t}\n\n\t\tlocalStorage.removeItem(\"query\")\n\t}\n\n}","import * as React from 'react'\n// see https://github.com/ClickSimply/typescript-map\nimport { TSMap } from 'typescript-map'\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { Menubar } from 'primereact/menubar'\nimport { Accordion, AccordionTab } from 'primereact/accordion';\n// local to this app\nimport * as _u from './Utilities'\nimport { SubCalc } from './SubCalc'\nimport { Snapshot } from './Snapshot'\nimport { ValueCard } from './ValueCard'\n\n/**\n * Facilitates sorting up or down (or not at all), as needed.\n */\nenum SortOrder {\n    Descending = -1,\n    None = 0,\n    Ascending = 1,\n}\n\ninterface Props {\n    subcalc: SubCalc\n    onLoad: ((snapshot?: Snapshot) => void)\n    onNew: (() => void)\n}\ninterface State {\n    sortBy: 'name' | 'date'\n    showing: 'saved' | 'trashed'\n}\n\nexport class Loader extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            sortBy: \"date\",\n            showing: \"saved\"\n        }\n    }\n\n    /**\n     * Returns JSX for the menubar.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderMenu = (): JSX.Element => {\n        const items: any = []\n        items.push({\n            label: \"Back to the calculator\",\n            icon: \"pi pi-fw pi-caret-left\",\n            command: () => this.props.onLoad()\n        })\n        return <Menubar key=\"loader-menu\" model={items} id=\"app-main-menu\" />\n    }\n\n    /**\n     * Returns an icon to represent the button.\n     */\n    sortOrderIcon = (button: 'name' | 'date'): string => {\n        return button === 'name'\n            ? this.state.sortBy === \"name\"\n                ? \"pi pi-chevron-circle-up\"\n                : \"pi pi-chevron-circle-off\"\n            : this.state.sortBy === \"date\"\n                ? \"pi pi-chevron-circle-down\"\n                : \"pi pi-chevron-circle-off\"\n    }\n\n    toggleSortOrder = () => {\n        this.setState({\n            sortBy: this.state.sortBy === \"name\"\n                ? \"date\"\n                : \"name\"\n        })\n    }\n\n    deleteSnapshot = (snapshot: Snapshot) => {\n        this.props.subcalc.trashSnapshot(snapshot)\n        this.forceUpdate()\n    }\n\n    renderSnapshot = (snapshot: Snapshot): JSX.Element => {\n        const created = new Date(Date.parse(snapshot.created))\n        const createdDate = created.toLocaleString(undefined, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n        })\n        const revised = new Date(Date.parse(snapshot.revised))\n        const revisedDate = revised.toLocaleString(undefined, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n        })\n        const revisedString = createdDate === revisedDate\n            ? revised.toLocaleString(undefined, {\n                hour: 'numeric',\n                minute: '2-digit',\n                second: undefined,\n            })\n            : revised.toLocaleString(undefined, {\n                year: 'numeric',\n                month: 'numeric',\n                day: 'numeric',\n                hour: 'numeric',\n                minute: '2-digit',\n                second: undefined,\n            })\n\n        return (\n            <div key={`loader-snapshot-${snapshot.revised}-${snapshot.device}`} className={`loader-snapshot`}>\n                <div className=\"loader-snapshot-button button\"\n                    onClick={() => this.props.onLoad(snapshot)}\n                >\n                    <div className=\"loader-snapshot-revised\">\n                        {revisedString}\n                    </div>\n                    <div className=\"loader-snapshot-name\">\n                        <span className={\"pi pi-clock\"}>&nbsp;</span>\n                        {snapshot.revision}\n                    </div>\n                </div>\n                {this.state.showing === \"saved\"\n                    ? <div className=\"loader-snapshot-actions\">\n                        <Button\n                            icon=\"pi pi-trash\"\n                            className=\"p-button-danger\"\n                            onClick={() => this.deleteSnapshot(snapshot)}\n                        />\n\n                    </div>\n                    : ''\n                }\n            </div>\n        )\n    }\n\n    renderSnapshots = (snapshots: TSMap<string, Snapshot>): JSX.Element => {\n        return (\n            <>\n                {snapshots.map((snapshot) => {\n                    return this.renderSnapshot(snapshot)\n                })}\n            </>\n        )\n    }\n\n    /**\n     * A method to sort snapshots by date.\n     */\n    sortBySnapshotRevision = (a: Snapshot, b: Snapshot): number => {\n        let comparison = 0\n        const revA = `${a.created} ${a.device} ${a.revised}`\n        const revB = `${b.created} ${b.device} ${b.revised}`\n        if (revA < revB) {\n            comparison = 1;\n        }\n        if (revA > revB) {\n            comparison = -1;\n        }\n        return comparison\n    }\n\n    /**\n     * A method to sort snapshots by name.\n     */\n    sortBySnapshotName = (a: Snapshot, b: Snapshot): number => {\n        let comparison = 0\n        const revA = `${a.name} ${a.created} ${a.device} ${a.revision}`.toUpperCase()\n        const revB = `${b.name} ${b.created} ${b.device} ${b.revision}`.toUpperCase()\n        if (revA < revB) {\n            comparison = -1;\n        }\n        if (revA > revB) {\n            comparison = 1;\n        }\n        return comparison\n    }\n\n    renderMeeting = (snapshots: Array<Snapshot>): JSX.Element => {\n        const snap = snapshots[0]\n        const snapshotsJSX = snapshots.map((snapshot) => this.renderSnapshot(snapshot))\n\n        const created = new Date(Date.parse(snap.created))\n        const createdDate = created.toLocaleString(undefined, {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: '2-digit',\n            second: undefined,\n        })\n\n        return (\n            <AccordionTab key={`loader-meeting-${snap.meetingKey()} ${this.state.sortBy} ${this.state.showing}`}\n                headerClassName={`loader-meeting-accordion-header ${this.state.showing}`}\n                contentClassName=\"loader-meeting-accordion-content\"\n                header={\n                    <div className={`loader-meeting-header`}>\n                        <div className=\"loader-meeting-name\">{snap.name}</div>\n                        <div className=\"loader-meeting-timestamp\">{createdDate}</div>\n                    </div>\n                }\n            >\n                {snapshotsJSX}\n            </AccordionTab>\n        )\n\n    }\n\n    renderMeetings = (): JSX.Element => {\n        const snapshots = this.props.subcalc.snapshots(this.state.showing)\n\n        if (snapshots.length === 0) {\n            return this.state.showing === \"saved\"\n                ? <ValueCard key=\"nothing-to-load\"\n                    title=\"No snapshots yet\"\n                    description=\"You will have to save a snapshot before you can open one!\"\n                    footer={\n                        <Button key=\"nothing-to-load-button\"\n                            label=\"OK\"\n                            icon=\"pi pi-check\"\n                            onClick={() => this.props.onLoad()}\n                        />\n                    }\n                />\n                : <ValueCard key=\"nothing-to-load\"\n                    title=\"Nothing in the trash\"\n                    description=\"The trash is empty.\"\n                    footer={\n                        <Button key=\"nothing-to-load-button\"\n                            label=\"OK\"\n                            icon=\"pi pi-check\"\n                            onClick={() => this.setState({ showing: \"saved\" })}\n                        />\n                    }\n                />\n        }\n\n        const currentMeetingKey = this.props.subcalc.snapshot.meetingKey()\n\n        // loop thought the snapshots, sorting them and splitting them\n        // into meetings and creating a JSX array to return\n        let tabs: Array<JSX.Element> = []\n        let meetingKey = \"\"\n        let meetingIndex = 0\n        let indexOfCurrent = 0\n        let meetingSnapshots: Array<Snapshot> = []\n        const sort = this.state.sortBy === \"name\"\n            ? this.sortBySnapshotName\n            : this.sortBySnapshotRevision\n\n        snapshots.sort(sort).forEach((snapshot) => {\n            if (meetingKey !== snapshot.meetingKey()) {\n                meetingKey = snapshot.meetingKey()\n                if (meetingKey === currentMeetingKey) {\n                    indexOfCurrent = meetingIndex\n                }\n                meetingIndex++\n                if (meetingSnapshots.length > 0) {\n                    tabs.push(this.renderMeeting(meetingSnapshots))\n                }\n                meetingSnapshots = []\n            }\n            meetingSnapshots.push(snapshot)\n        })\n\n        tabs.push(this.renderMeeting(meetingSnapshots))\n\n        return (\n            <div key={`loader-meetings`} className=\"loader-meetings\">\n                <Accordion key={`${this.state.sortBy}`}\n                    activeIndex={indexOfCurrent}\n                >\n                    {tabs}\n                </Accordion>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"loader\">\n                {this.renderMenu()}\n                <div id=\"meeting-info\">\n                    <div id=\"meeting-name\" className=\"not-button\">\n                        Pick a snapshot below to open it...\n                    </div>\n                </div>\n                <div id=\"loader-container\">\n                    <div id=\"loader-header\">\n                        <Button id=\"loader-name-head\"\n                            label=\"Name\"\n                            icon={this.sortOrderIcon(\"name\")}\n                            onClick={() => this.toggleSortOrder()}\n                        />\n                        <Button id=\"loader-timestamp-head\"\n                            label=\"Last Revised\"\n                            iconPos=\"right\"\n                            icon={this.sortOrderIcon(\"date\")}\n                            onClick={() => this.toggleSortOrder()}\n                        />\n                    </div>\n                    {this.renderMeetings()}\n                    <div id=\"subcaucus-footer\">\n                        {this.state.showing === 'saved'\n                            ? <Button id=\"add-meeting-button\"\n                                label=\"Add new meeting\"\n                                icon=\"pi pi-calendar-plus\"\n                                onClick={() => this.props.onNew()}\n                            />\n                            : <Button id=\"empty-trash-button\"\n                                label=\"Empty trash\"\n                                icon=\"pi pi-trash\"\n                                onClick={() => {\n                                    this.props.subcalc.emptyTrash()\n                                    this.setState({ showing: \"saved\" })\n                                }}\n                            />\n                        }\n                        {this.state.showing === 'saved'\n                            ? <Button id=\"show-trashed-button\"\n                                label=\"Show trash\"\n                                icon=\"pi pi-trash\"\n                                className=\"p-button-secondary\"\n                                onClick={() => this.setState({ showing: \"trashed\" })}\n                            />\n                            : <Button id=\"show-saved-button\"\n                                label=\"Show saved\"\n                                icon=\"pi pi-calendar\"\n                                className=\"p-button-secondary\"\n                                onClick={() => this.setState({ showing: \"saved\" })}\n                            />\n                        }\n                        <Button id=\"cancel-loader-button\"\n                            label=\"Cancel\"\n                            icon=\"pi pi-times\"\n                            className=\"p-button-secondary\"\n                            onClick={() => this.props.onLoad()}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { Card } from 'primereact/card'\nimport { InputText } from 'primereact/inputtext'\n// local to this app\nimport * as _u from './Utilities'\n\ntype KindOfValue = 'text' | 'positive integer'\n\ninterface Props {\n    id?: string\n    title: string\n    description?: string\n    image?: string\n    alt?: string\n    extraButtons?: JSX.Element\n    footer?: JSX.Element\n    type?: KindOfValue\n    value?: string\n    defaultValue?: string\n    allowEmpty?: boolean\n    onSave?: ((value?: string) => void)\n}\ninterface State {\n    value: string\n}\n\nexport class ValueCard extends React.Component<Props, State> {\n\n    isPositiveInteger = false\n\n    constructor(props: Props) {\n        super(props)\n        this.isPositiveInteger = this.props.type === 'positive integer'\n        let initialValue = _u.unwrapString(this.props.value)\n        if (!this.props.allowEmpty && this.isEmpty(initialValue)) {\n            initialValue = _u.unwrapString(this.props.defaultValue)\n        }\n        this.state = {\n            value: initialValue,\n        }\n    }\n\n    originalValue = (): string => {\n        return _u.unwrapString(this.props.value)\n    }\n\n    defaultValue = (): string => {\n        return _u.unwrapString(this.props.defaultValue)\n    }\n\n    handleChange = () => (event: React.FormEvent<HTMLInputElement>) => {\n        _u.debug(\"change\", event.currentTarget.value)\n        if (this.isPositiveInteger) {\n            var num = Number(event.currentTarget.value)\n            if (num < 0) {\n                num = 0\n            }\n            this.setState({ value: String(num) })\n        } else {\n            this.setState({ value: event.currentTarget.value })\n        }\n    }\n\n    handleKey = () => (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            if (this.props.onSave) {\n                this.props.onSave(this.state.value.trim())\n            }\n        }\n    }\n\n    focusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n        // event properties must be copied to use async\n        const target = event.currentTarget\n        // do this async to try to make Safari behave\n        setTimeout(() => target.setSelectionRange(0, 9999), 0)\n    }\n\n    isEmpty = (value?: string): boolean => {\n        var empty = (value === '') || (value === undefined)\n        if (this.isPositiveInteger) {\n            empty = (empty || value === '0')\n        }\n        return empty\n    }\n\n    save = (value?: string) => (event: React.MouseEvent<HTMLButtonElement | HTMLDivElement>) => {\n        if (this.props.onSave) {\n            if (value === undefined) {\n                this.props.onSave()\n            } else if (this.isEmpty(value) && !this.props.allowEmpty) {\n                if (!this.isEmpty(this.props.defaultValue)) {\n                    this.props.onSave(this.props.defaultValue)\n                }\n            } else {\n                this.props.onSave(value.trim())\n            }\n        }\n    }\n\n    idPlus = (suffix: string): string | undefined => {\n        return this.props.id ? `${this.props.id}-${suffix}` : undefined\n    }\n\n    render() {\n\n        const { value } = this.state\n        const isPositiveInteger = this.isPositiveInteger\n\n        let cardFooter = <></>\n\n        if (this.props.footer == undefined) {\n            const illegallyEmpty = (this.isEmpty(value) && this.isEmpty(this.defaultValue()) && this.props.allowEmpty === false)\n            const originalIllegallyEmpty = (this.isEmpty(this.originalValue()) && this.props.allowEmpty === false)\n\n            // don't show a save button at all if there is no save function\n            // and if there is no value property, then call the save button \"close\" instead\n            const saveButton = (this.props.onSave\n                ? ((this.props.value != undefined)\n                    ? <Button id={this.idPlus(\"save-button\")}\n                        label=\"Save\"\n                        icon=\"pi pi-check\"\n                        disabled={illegallyEmpty}\n                        onClick={this.save(_u.unwrapString(value, this.defaultValue()))}\n                    />\n                    : <Button id={this.idPlus(\"close-button\")}\n                        label=\"Close\"\n                        icon=\"pi pi-times\"\n                        onClick={this.save()}\n                    />\n                )\n                : <></>\n            )\n\n            const cancelButton = originalIllegallyEmpty || this.props.value === undefined\n                ? ''\n                : <Button id={this.idPlus(\"cancel-button\")}\n                    label=\"Cancel\"\n                    icon=\"pi pi-times\"\n                    className=\"p-button-secondary\"\n                    onClick={this.save()}\n                />\n\n            cardFooter = <>{saveButton}{this.props.extraButtons}{cancelButton}</>\n        } else {\n            cardFooter = this.props.footer\n        }\n\n        return (\n            <div className=\"valuecard-wrapper\">\n                <div className=\"background-blocker\"\n                    onClick={this.save()}\n                >\n                </div>\n                <Card id={this.idPlus(\"valuecard\")}\n                    className={`valuecard ${this.idPlus(\"valuecard\")}`}\n                    title={this.props.title}\n                    header={this.props.image\n                        ? <div id={this.idPlus(\"picture-container\")}\n                            className=\"picture-container\"\n                        >\n                            <img\n                                alt={`${this.props.alt}`}\n                                src={`${this.props.image}`}\n                            />\n                            {this.props.onSave && this.props.value == undefined\n                                ? <Button\n                                    id={this.idPlus(\"picture-close-button\")}\n                                    icon=\"pi pi-times\"\n                                    onClick={this.save()}\n                                />\n                                : <></>\n                            }\n                        </div>\n                        : undefined\n                    }\n                    footer={cardFooter}\n                >\n                    {this.props.children\n                        ? <div id={this.idPlus(\"valuecard-children\")} className=\"valuecard-children\">\n                            {this.props.children}\n                        </div>\n                        : ''}\n                    {this.props.description\n                        ? <div id={this.idPlus(\"valuecard-description\")} className=\"valuecard-description\">\n                            <p>{this.props.description}</p>\n                        </div>\n                        : ''}\n                    {this.props.value != undefined\n                        ? <InputText id={this.idPlus(\"card-field\")}\n                            className={isPositiveInteger ? \"number\" : \"text\"}\n                            autoComplete=\"off\"\n                            keyfilter={isPositiveInteger ? \"pint\" : \"\"}\n                            type=\"text\"\n                            pattern={isPositiveInteger ? \"\\\\d*\" : undefined}\n                            value={isPositiveInteger ? (value === '0' ? '' : value) : value} // show 0 as blank for positive integers\n                            placeholder={this.props.defaultValue}\n                            onChange={this.handleChange()}\n                            // onFocus={this.isPositiveInt ? this.focusOnWholeText() : undefined}\n                            onKeyUp={this.handleKey()}\n                            autoFocus\n                        />\n                        : ''\n                    }\n                </Card>\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from './Utilities'\nimport { Subcaucus } from './Subcaucus'\nimport { ValueCard } from './ValueCard'\n\ninterface Props {\n\tsubcaucus: Subcaucus\n\tdismiss: (() => void)\n}\n\ninterface State { }\n\n/**\n * Component to show a subcaucus row info cards.\n */\nexport class SubcaucusRowInfoCard extends React.Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tthis.state = {}\n\t}\n\n\trender() {\n\t\t_u.debug(\"render info card\", this.props.subcaucus.id)\n\n\t\tconst { subcaucus: s, dismiss } = this.props\n\n\t\treturn (\n\t\t\t<ValueCard\n\t\t\t\ttitle={s.displayName()}\n\t\t\t\tfooter={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tlabel=\"OK\"\n\t\t\t\t\t\tonClick={dismiss}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{s.delegates\n\t\t\t\t\t? <p>The <strong>{s.count.singularPlural(\"member\", \"members\")}</strong> of this subcaucus may elect <strong>{s.delegates.singularPlural(\"delegate\", \"delegates\")}</strong>.</p>\n\t\t\t\t\t: <p>This subcaucus did not attract enough members to be viable. It may not elect any delegates. Members of this subcaucus should consider joining other subcaucuses in order to have some say in the delegates elected.</p>\n\t\t\t\t}\n\t\t\t\t<p>{s.remainder === 0 ? '' : <span>This subcaucus had a remainder of <strong>{s.remainder.decimalPlaces(3)}</strong>. </span>}\n\t\t\t\t\t{s.delegates > s.baseDelegates ? <span>It was awarded a <strong>remainder delegate</strong> because it had one of the higher remainders. </span> : ''}\n\t\t\t\t\t{s.tosses().map((toss) => {\n\t\t\t\t\t\treturn <span>It {toss.won ? \"won\" : \"lost\"} a coin toss against {toss.against.displayName()}. </span>\n\t\t\t\t\t})}\n\t\t\t\t</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n}\n","import * as React from 'react'\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { InputText } from 'primereact/inputtext'\nimport { InputTextarea } from 'primereact/inputtextarea'\n// local to this app\nimport * as _u from './Utilities'\nimport { Subcaucus } from './Subcaucus'\nimport { SubcaucusRowInfoCard } from './SubcaucusRowInfoCard'\n\nexport type SubcaucusRowAction = 'recalc' | 'enter'\n\ninterface Props {\n\tsubcaucus: Subcaucus\n\tindex: number\n\trows: number\n\texchange: ((subcaucus: Subcaucus, action: SubcaucusRowAction, index?: number, callback?: () => void) => void)\n}\n\ninterface State {\n\tname: string\n\tcount: number\n\tdelegates: number\n\tshowInfo: boolean\n}\n\n/**\n * Component to show a single subcaucus row.\n * Also controls subcaucus row info cards.\n */\nexport class SubcaucusRow extends React.Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tname: this.props.subcaucus.name,\n\t\t\tcount: this.props.subcaucus.count,\n\t\t\tdelegates: this.props.subcaucus.delegates,\n\t\t\tshowInfo: false\n\t\t}\n\t}\n\n\thandleName = () => (event: React.FormEvent<HTMLTextAreaElement>) => {\n\t\tconst currentTabIndex = event.currentTarget.tabIndex\n\t\tvar value = event.currentTarget.value\n\t\t_u.debug(\"handle name index\", currentTabIndex, \"is\", value)\n\t\tthis.setState({ name: value })\n\t}\n\n\thandleCount = () => (event: React.FormEvent<HTMLInputElement>) => {\n\t\tconst currentTabIndex = event.currentTarget.tabIndex\n\t\tvar num = Number(event.currentTarget.value)\n\t\t_u.debug(\"handle count index\", currentTabIndex, \"is\", num)\n\t\tif (num < 0) {\n\t\t\tnum = 0\n\t\t}\n\t\tthis.setState({ count: num })\n\t}\n\n\thandleBlur = () => (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tconst { subcaucus } = this.props\n\t\tconst currentTabIndex = event.currentTarget.tabIndex\n\t\t_u.debug(\"handle blur index\", currentTabIndex)\n\t\tif (subcaucus.name !== this.state.name || subcaucus.count !== this.state.count) {\n\t\t\tsubcaucus.name = this.state.name\n\t\t\tsubcaucus.count = this.state.count\n\t\t\tthis.props.exchange(subcaucus, 'recalc')\n\t\t}\n\t}\n\n\thandleKey = () => (event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tconst { rows, subcaucus } = this.props\n\t\tconst currentTabIndex = event.currentTarget.tabIndex\n\t\t_u.debug(\"handle key index\", currentTabIndex, \"got\", event.key, \"for\", subcaucus.id, subcaucus.debug())\n\t\tif (event.key === 'Enter' || event.key === 'Tab') {\n\t\t\tevent.preventDefault()\n\t\t\tsubcaucus.name = this.state.name\n\t\t\tsubcaucus.count = this.state.count\n\t\t\t// enters will not normally select the next row\n\t\t\t// so we have to force it with a callback that happens after the add subcaucus\n\t\t\tthis.props.exchange(subcaucus, 'enter', currentTabIndex, () => {\n\t\t\t\t// if we are in the last position of the count column,\n\t\t\t\t// then the next position after adding a subcaucus will be 2 ahead\n\t\t\t\tconst next = currentTabIndex == rows * 2 ? 2 : 1\n\t\t\t\t// walk through all the subcaucus fields looking for the next one\n\t\t\t\tdocument.querySelectorAll(\".subcaucus-field\").forEach((e) => {\n\t\t\t\t\tconst element = e as HTMLElement\n\t\t\t\t\tif (element.tabIndex === currentTabIndex + next) {\n\t\t\t\t\t\t// then force the focus to this field\n\t\t\t\t\t\telement.focus()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tfocusOnWholeText = () => (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\t// event properties must be copied to use async\n\t\tconst target = event.currentTarget\n\t\t// do this async to try to make Safari behave\n\t\tsetTimeout(() => target.setSelectionRange(0, 9999), 0)\n\t}\n\n\tidPlus = (suffix: string): string | undefined => {\n\t\treturn `subcaucus-${this.props.subcaucus.id}-${suffix}`\n\t}\n\n\trender() {\n\t\tconst { subcaucus: s } = this.props\n\n\t\t_u.debug(\"render row\", s.id, this.state)\n\n\t\tconst { name, count, showInfo } = this.state\n\n\t\tconst infoCard = showInfo\n\t\t\t? <SubcaucusRowInfoCard\n\t\t\t\tsubcaucus={s}\n\t\t\t\tdismiss={() => this.setState({ showInfo: false })}\n\t\t\t/>\n\t\t\t: ''\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div id={this.idPlus(\"row\")}\n\t\t\t\t\tclassName={`subcaucus-row ${s.delegates > 0 ? \"has-delegates\" : (count > 0 ? \"no-delegates\" : \"\")}`}\n\t\t\t\t>\n\t\t\t\t\t{_u.isDebugging() ? <div className=\"subcaucus-id\">{s.id}</div> : ''}\n\t\t\t\t\t<InputTextarea id={this.idPlus(\"row-name\")}\n\t\t\t\t\t\tclassName=\"subcaucus-field subcaucus-name\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\ttabIndex={this.props.index}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\trows={1}\n\t\t\t\t\t\tcols={1}\n\t\t\t\t\t\t// PrimeReact has a bug with the InputTextarea placeholder\n\t\t\t\t\t\t// for now, it will not update this placeholder\n\t\t\t\t\t\t// see: https://github.com/primefaces/primereact/issues/747\n\t\t\t\t\t\tplaceholder={s.defaultName()}\n\t\t\t\t\t\tonChange={this.handleName()}\n\t\t\t\t\t\tonKeyDown={this.handleKey()}\n\t\t\t\t\t\tonBlur={this.handleBlur()}\n\t\t\t\t\t\tonFocus={this.focusOnWholeText()}\n\t\t\t\t\t/>\n\t\t\t\t\t<InputText id={this.idPlus(\"row-count\")}\n\t\t\t\t\t\tclassName=\"subcaucus-field subcaucus-count\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\ttabIndex={this.props.index + this.props.rows}\n\t\t\t\t\t\tkeyfilter=\"pint\"\n\t\t\t\t\t\ttype=\"text\" // number does not support selection of the whole text on\n\t\t\t\t\t\tpattern=\"\\d*\"\n\t\t\t\t\t\tvalue={count ? count : ''}\n\t\t\t\t\t\tplaceholder={`—`}\n\t\t\t\t\t\tonChange={this.handleCount()}\n\t\t\t\t\t\tonKeyDown={this.handleKey()}\n\t\t\t\t\t\tonBlur={this.handleBlur()}\n\t\t\t\t\t\t// forcing the selction of the whole text seems to lead to problems\n\t\t\t\t\t\t// see https://grand.clst.org:3000/tenseg/subcalc-pr/issues/3\n\t\t\t\t\t\tonFocus={this.focusOnWholeText()}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button id={this.idPlus(\"row-delegates\")}\n\t\t\t\t\t\tclassName={`subcaucus-delegates-button ${s.delegates > 0 ? \"p-button-success\" : \"p-button-secondary\"}`}\n\t\t\t\t\t\tlabel={s.delegates ? `${s.delegates}` : undefined}\n\t\t\t\t\t\ticon={s.delegates ? undefined : (count ? 'pi pi-ban' : 'pi')}\n\t\t\t\t\t\tonClick={() => this.setState({ showInfo: true })}\n\t\t\t\t\t\tdisabled={count === 0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={\n\t\t\t\t\t\t\ts.reportTosses\n\t\t\t\t\t\t\t\t? s.delegates > s.baseDelegates\n\t\t\t\t\t\t\t\t\t? \"coin won\"\n\t\t\t\t\t\t\t\t\t: \"coin lost\"\n\t\t\t\t\t\t\t\t: \"coin\"\n\t\t\t\t\t\t}></div>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t{infoCard}\n\t\t\t</>\n\t\t)\n\t}\n}\n","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { Menubar } from 'primereact/menubar'\nimport { Growl } from 'primereact/growl'\nimport 'primereact/resources/primereact.min.css'\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primeicons/primeicons.css'\n\n// see https://github.com/kennethjiang/js-file-download\nimport fileDownload from 'js-file-download'\n\n// local to this app\nimport './App.scss'\nimport * as _u from './Utilities'\nimport { SubCalc } from './SubCalc'\nimport { Snapshot } from './Snapshot'\nimport { Subcaucus } from './Subcaucus'\nimport { SubcaucusRow, SubcaucusRowAction } from './SubcaucusRow'\nimport { ValueCard } from './ValueCard'\nimport { Loader } from './Loader'\nimport { ShowJSON } from './ShowJSON'\n\n// cards\nimport { RemovingEmptiesCard } from './Cards/RemovingEmptiesCard';\nimport { ChangingCoinCard } from './Cards/ChangingCoinCard';\nimport { ChangingDelegatesAllowedCard } from './Cards/ChangingDelegatesAllowedCard';\nimport { ChangingNameCard } from './Cards/ChangingNameCard';\nimport { SavingSnapshotCard } from './Cards/SavingSnapshotCard';\nimport { SavingSnapshotBeforeCard } from './Cards/SavingSnapshotBeforeCard';\nimport { WelcomeAndSetNameCard } from './Cards/WelcomeAndSetNameCard';\nimport { InstructionsCard } from './Cards/InstructionsCard';\nimport { AboutCard } from './Cards/AboutCard';\nimport { CreditCard } from './Cards/CreditCard';\nimport { SecurityCard } from './Cards/SecurityCard';\nimport { ViabilityCard } from './Cards/ViabilityCard';\n\n/**\n * Facilitates sorting up or down (or not at all), as needed.\n */\nenum SortOrder {\n    Descending = -1,\n    None = 0,\n    Ascending = 1,\n}\n\n/**\n * Includes the modal cards we can display.\n * When more than one card is waiting to be viewed,\n * they will be presented in the order listed in\n * this enumerator.\n * \n * NOTE: If you add a value you must also add a case\n * to the `renderNextCard()` method for the card to\n * ever be seen.\n */\nenum CardFor {\n    Nothing = 0,\n    WelcomeAndSetName,\n    ChangingName,\n    ChangingDelegates,\n    ChangingCoin,\n    SavingSnapshot,\n    SavingSnapshotBefore,\n    RemovingEmpties,\n    ShowingAbout,\n    ShowingBy,\n    ShowingInstructions,\n    ShowingSecurity,\n    Viability,\n}\n\nenum Presenting {\n    Calculator,\n    Loading,\n}\n\n/**\n * Details that our calculations need to share out\n * to the user.\n */\ninterface SummaryInfo {\n    count: number\n    delegates: number\n    viability: number\n    revisedViability: number\n    minimumCountForViability: number\n    nonViableCount: number\n}\n\ninterface Props { }\n\n/**\n * React state for the SubCalc App.\n */\ninterface State {\n    // modal interactions\n    cards: Array<CardFor>\n    before?: string\n    afterBefore?: () => void\n    present: Presenting\n    // sorting info\n    sortName: SortOrder\n    sortCount: SortOrder\n}\n\nexport class App extends React.Component<Props, State> {\n\n    /**\n     * An instance of `SubCalc` that we use to\n     * read and write data from and to local storage.\n     */\n    private subcalc = new SubCalc()\n\n    /**\n     * To be included with component key whenever you want\n     * to be sure that component will _not_ be reused\n     * when the App refreshes with a new snapshot.\n     * \n     * Change this value whenever you need to force\n     * the subcaucus lines to reset:\n     * \n```typescript\nthis.keySuffix = String(_u.randomSeed())\n```\n     */\n    private keySuffix = String(_u.randomSeed())\n\n    /**\n     * This set of cards is to be presented whenever\n     * the user loads a new meeting. It forces them to\n     * create a meeting name and disclose the number of\n     * delegates to be allowed from this meeting.\n     */\n    initialCardState: Array<CardFor> = [\n        CardFor.WelcomeAndSetName,\n        CardFor.ChangingDelegates,\n        // CardFor.ShowingInstructions\n    ]\n\n    /**\n     * A reference to the  PrimeReact growl notifier \n     * used to share alerts with the user. This reference\n     * is set during the `render()` stage.\n     */\n    growl: Growl | null = null\n\n    /**\n     * Default settings for our tooltips.\n     */\n    tooltipOptions = {\n        showDelay: 1500, // 1.5 seconds\n        hideDelay: 333, // 1/3 second\n        position: 'top',\n    }\n\n    /**\n     * Creates the new SubCalc App.\n     */\n    constructor(props: Props) {\n        super(props)\n\n        _u.setAlertFunction(this.growlAlert)\n\n        this.subcalc.snapshot.redistributeDelegates()\n\n        let cards: Array<CardFor> = this.subcalc.snapshot.allowed ? [] : this.initialCardState\n        let before: string | undefined = undefined\n        let afterBefore: (() => void) | undefined = undefined\n\n        if (this.subcalc.incoming.length > 0) {\n            if (this.subcalc.snapshot.revision === '') {\n                cards = [CardFor.SavingSnapshotBefore]\n                afterBefore = this.completeIncoming\n            } else {\n                this.completeIncoming()\n            }\n        }\n\n        this.state = {\n            // card status\n            cards: cards,\n            present: Presenting.Calculator,\n            before: before,\n            afterBefore: afterBefore,\n            // sorting info\n            sortName: SortOrder.None,\n            sortCount: SortOrder.None,\n        }\n    }\n\n    /**\n     * Either load the snapshot or return to the calculator.\n     * This is used as a callback from the loading component.\n     */\n    loadSnapshot = (snapshot?: Snapshot) => {\n        if (snapshot) {\n            this.subcalc.setSnapshot(snapshot)\n            this.subcalc.snapshot.redistributeDelegates()\n        }\n        this.setState({ present: Presenting.Calculator })\n    }\n\n    /**\n     * Change the meeting name here and in storage.\n     * \n     * NOTE: This is _not_ considered a revision of the snapshot\n     * since the meeting name will apply to all snapshots from this meeting.\n     */\n    setStateName = (name: string) => {\n        this.subcalc.renameMeeting(name)\n        this.forceUpdate()\n    }\n\n    /**\n     * Change the number of delegates allowed here and in storage.\n     */\n    setStateAllowed = (allowed: number) => {\n        this.subcalc.reviseSnapshot({ allowed: allowed })\n        this.forceUpdate()\n    }\n\n    /**\n     * Change the random seed (the \"coin\") here and in storage.\n     */\n    setStateSeed = (seed: number) => {\n        this.subcalc.reviseSnapshot({ seed: seed })\n        this.forceUpdate()\n    }\n\n    /**\n     * Change force and update of the interface and storage\n     * due to changes in the subcaucuses.\n     */\n    setStateSubcaucuses = () => {\n        this.subcalc.reviseSnapshot()\n        this.forceUpdate()\n    }\n\n    /**\n     * Request the storage manager to finish importing from the query parameters.\n     */\n    completeIncoming = () => {\n        this.subcalc.completeIncoming()\n        if (this.state) {\n            this.forceUpdate()\n        }\n    }\n\n    /**\n     * Request a new meeting from the storage manager and\n     * set our state to reflect the new meeting.\n     */\n    newMeeting = () => {\n        this.subcalc.newSnapshot()\n        this.keySuffix = String(_u.randomSeed())\n        this.setState({\n            present: Presenting.Calculator,\n            cards: this.initialCardState\n        })\n    }\n\n    /**\n     * Request a new meeting from the storage manager and\n     * set our state to reflect the new meeting.\n     */\n    duplicateMeeting = () => {\n        this.subcalc.duplicateSnapshot()\n        this.growlAlert(this.subcalc.snapshot.name, 'success', 'Snapshot Duplicated')\n        this.keySuffix = String(_u.randomSeed())\n        this.forceUpdate()\n    }\n\n    /**\n     * Request a new meeting from the storage manager and\n     * set our state to reflect the new meeting.\n     */\n    saveSnapshot = (revision?: string, remove: CardFor = CardFor.SavingSnapshot) => {\n        if (revision) {\n            this.subcalc.saveSnapshot(revision)\n            this.growlAlert(revision, 'success', 'Snapshot Saved')\n        }\n        this.removeCardState(remove)\n    }\n\n    emailSnapshot = () => {\n        const snapshot = this.subcalc.snapshot\n\n        const url = `${location.protocol}//${location.host}${location.pathname}` + \"?caucus=\" + encodeURIComponent(JSON.stringify(snapshot.toJSON()))\n\n        let body = snapshot.asText()\n\n        body += \"\\nOpen this snapshot yourself by clicking on this very long and ugly link:\\n\\n\" + url + \"\\n\"\n\n        let subject = \"Subcaucus Report for \";\n        subject += snapshot.name\n        subject += snapshot.revision ? ` (${snapshot.revision})` : ''\n\n        const mailto = \"mailto:?subject=\" + encodeURIComponent(subject) + \"&body=\" + encodeURIComponent(body)\n\n        location.href = mailto\n    }\n\n    /**\n     * Provide a default name for this meeting, including today's date.\n     */\n    defaultName = (): string => {\n        return \"Meeting on \" + this.subcalc.snapshot.created.toDate().toLocaleDateString(\"en-US\")\n    }\n\n    /**\n     * Provide a friendly string explaining the `allowed` number.\n     */\n    allowedString = (): string => {\n        return `${this.subcalc.snapshot.allowed} delegates to be elected`\n    }\n\n    /**\n     * Add a card to an array of cards (or to the current state cards\n     * if no array is provided). Note that we do not need to deduplicate\n     * this array since our `removeCard()` method will remove all copies\n     * of the same card anyway.\n     */\n    addCard = (cardFor: CardFor, to?: Array<CardFor>): Array<CardFor> => {\n        if (to === undefined) {\n            to = this.state.cards\n        }\n        return [...to, cardFor]\n    }\n\n    /**\n     * Adds a card to the cards state.\n     */\n    addCardState = (cardFor: CardFor) => {\n        this.setState({ cards: this.addCard(cardFor) })\n    }\n\n    /**\n     * Remove all copies of the given card from the array of cards\n     * (or from the current state cards if not array is provided).\n     */\n    removeCard = (seekingCardFor: CardFor, from?: Array<CardFor>): Array<CardFor> => {\n        if (from === undefined) {\n            from = this.state.cards\n        }\n        return from.filter(foundCardFor => foundCardFor != seekingCardFor)\n    }\n\n    /**\n     * Removes a card from the cards state.\n     */\n    removeCardState = (cardFor: CardFor) => {\n        if (cardFor === CardFor.Nothing) return\n        this.setState({ cards: this.removeCard(cardFor) })\n    }\n\n    /**\n     * Swaps a card in for another card in the cards state.\n     * This can be used to make one card invoke another card.\n     */\n    switchCardState = (fromCardFor: CardFor, toCardFor: CardFor) => {\n        let newCards = this.removeCard(fromCardFor)\n        newCards = this.addCard(toCardFor, newCards)\n        this.setState({ cards: newCards })\n    }\n\n    /**\n     * Returns `true` if the given card is in the cards state.\n     * \n     * NOTE: The card may be one of many waiting to be displayed,\n     * so this may return `true` even when the card is not visible.\n     */\n    showingCard = (cardFor: CardFor): boolean => {\n        return this.state.cards.indexOf(cardFor) > -1\n    }\n\n    /**\n     * Handles changes to the `allowed` and `name` state, but \n     * nothing else. Expects to be called from an input form element.\n     */\n    handleChange = (name: string) => (event: React.FormEvent<HTMLInputElement>) => {\n        switch (name) {\n            case 'allowed':\n                var allowed = Number(event.currentTarget.value)\n                if (allowed < 0) {\n                    allowed = 0\n                }\n                this.setStateAllowed(allowed)\n                break\n            case 'name':\n                this.setStateName(event.currentTarget.value)\n                break\n        }\n    }\n\n    /**\n     * Intended to facilitate focussing on the full text, even on iOS.\n     * However, this was proving problematic and is not currently in use.\n     */\n    focusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.currentTarget // event properties must be copied to use async\n        setTimeout(() => target.setSelectionRange(0, 9999), 0) // do this async to try to make Safari behave\n    }\n\n    /**\n     * Used by the `SubcaucusRow` via a callback to update the \n     * subcaucus array here in the app. \n     */\n    handleSubcaucusChange = (subcaucus: Subcaucus, action: SubcaucusRowAction, index?: number, callback?: () => void) => {\n        _u.debug(\"subcaucus changed\", subcaucus.id, subcaucus.debug(), action)\n        switch (action) {\n            case 'enter':\n                if (index) {\n                    _u.debug(\"enter index\", index, \"length\", this.subcalc.snapshot.subcaucuses.length)\n                    if (index === this.subcalc.snapshot.subcaucuses.length\n                        || index === this.subcalc.snapshot.subcaucuses.length * 2) {\n                        this.subcalc.snapshot.addSubcaucus()\n                    }\n                    this.setStateSubcaucuses()\n                    if (callback) {\n                        callback()\n                    }\n\n                }\n                return\n            case 'recalc':\n                // this is a signal to recalculate\n                this.setStateSubcaucuses()\n                return\n        }\n    }\n\n    /**\n     * Removes all empty subcaucuses or just those that are not named.\n     */\n    removeEmpties = (subset: 'all' | 'unnamed' = 'all') => {\n        if (subset == 'all') {\n            this.subcalc.snapshot.subcaucuses.filter((subcaucus, key) => {\n                return subcaucus.count > 0\n            })\n            this.subcalc.reviseSnapshot()\n        }\n        if (subset == 'unnamed') {\n            this.subcalc.snapshot.subcaucuses.filter((subcaucus, k, i) => {\n                _u.debug(\"remove?\", subcaucus.id, subcaucus.count, subcaucus.name, subcaucus.count > 0 || subcaucus.name != '', \"key\", k, \"index\", i)\n                return subcaucus.count > 0 || subcaucus.name != ''\n            })\n        }\n        this.removeCardState(CardFor.RemovingEmpties)\n        this.subcalc.reviseSnapshot()\n    }\n\n    /**\n     * Returns an icon to represent the supplied `SortOrder`.\n     */\n    sortOrderIcon = (order: SortOrder): string => {\n        return [\"pi pi-chevron-circle-down\", \"pi pi-circle-off\", \"pi pi-chevron-circle-up\"][order + 1]\n    }\n\n    /**\n     * Cycles through the sort orders and returns the next one.\n     */\n    nextSortOrder = (currentOrder: SortOrder, direction = 1): SortOrder => {\n        // shifting over with +1 to nudge values over to where modulo is happy\n        let nextOrder = ((currentOrder + direction + 1) % 3)\n        if (nextOrder < 0) {\n            nextOrder += 3 // needed to cycle backwards\n        }\n        // shift back over -1 to align with our sort orders again\n        return nextOrder - 1\n    }\n\n    /**\n     * If the snapshot has been revised, offers a chance to save\n     * the changes before proceeding with the action in the callback.\n     * The title will be used on the card that suggests saving.\n     */\n    checkForRevisionBefore = (callback: () => void, title?: string) => {\n        if (this.subcalc.snapshot.revision == \"\") {\n            this.setState({ afterBefore: callback, before: title })\n            this.addCardState(CardFor.SavingSnapshotBefore)\n        } else {\n            callback()\n        }\n    }\n\n    /**\n     * Returns JSX for the menubar.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderMenu = (): JSX.Element => {\n        const items = [\n            {\n                label: \"About\",\n                icon: \"pi pi-fw pi-info-circle\",\n                items: [\n                    {\n                        label: \"Minnesota DFL Subcaucus Calculator\",\n                        command: () => this.addCardState(CardFor.ShowingAbout),\n                    },\n                    {\n                        label: \"Instructions\",\n                        command: () => this.addCardState(CardFor.ShowingInstructions),\n                    },\n                    {\n                        label: \"Data Security\",\n                        command: () => this.addCardState(CardFor.ShowingSecurity),\n                    },\n                ]\n            },\n            {\n                label: \"Meetings\",\n                icon: \"pi pi-fw pi-calendar\",\n                items: [\n                    {\n                        label: \"New meeting\",\n                        icon: \"pi pi-fw pi-calendar-plus\",\n                        command: () => this.checkForRevisionBefore(this.newMeeting, \"Before creating a new meeting...\")\n                    },\n                    {\n                        label: \"Open snapshot\",\n                        icon: \"pi pi-fw pi-folder-open\",\n                        command: () => this.checkForRevisionBefore(() => this.setState({ present: Presenting.Loading }), \"Before opening a snapshot...\")\n                    },\n                    {\n                        label: \"Save snapshot\",\n                        icon: \"pi pi-fw pi-clock\",\n                        command: () => this.addCardState(CardFor.SavingSnapshot),\n                    },\n                    {\n                        label: \"Duplicate meeting\",\n                        icon: \"pi pi-fw pi-clone\",\n                        command: () => this.checkForRevisionBefore(this.duplicateMeeting, \"Before duplicating the meeting...\")\n                    },\n                    {\n                        label: \"Change the coin\",\n                        icon: \"pi pi-fw pi-refresh\",\n                        command: () => this.addCardState(CardFor.ChangingCoin)\n                    },\n                ]\n            },\n            {\n                label: \"Share\",\n                icon: \"pi pi-fw pi-share-alt\",\n                items: [\n                    {\n                        label: \"Email report\",\n                        icon: \"pi pi-fw pi-envelope\",\n                        command: this.emailSnapshot\n                    },\n                    {\n                        label: \"Download text\",\n                        icon: \"pi pi-fw pi-align-left\",\n                        command: () => {\n                            if (_u.isApp()) {\n                                location.href = \"subcalc://share-text/\" + encodeURIComponent(this.subcalc.snapshot.asText())\n                            } else {\n                                _u.download(this.subcalc.snapshot.asText(), 'subcalc.txt')\n                            }\n                        }\n                    },\n                    {\n                        label: \"Download CSV\",\n                        icon: \"pi pi-fw pi-table\",\n                        command: () => {\n                            if (_u.isApp()) {\n                                location.href = \"subcalc://share-csv/\" + encodeURIComponent(this.subcalc.snapshot.asCSV()) + \"?filename=subcalc\"\n                            } else {\n                                _u.download(this.subcalc.snapshot.asCSV(), 'subcalc.csv', 'text/csv')\n                            }\n                        }\n                    },\n                    {\n                        label: \"Download code\",\n                        icon: \"pi pi-fw pi-save\",\n                        command: () => {\n                            const jsnap = this.subcalc.snapshot.toJSON()\n                            if (_u.isApp()) {\n                                location.href = \"subcalc://share-text/\" + encodeURIComponent(JSON.stringify(jsnap, null, 2))\n                            } else {\n                                _u.download(JSON.stringify(jsnap, null, 2), 'subcalc.json', 'application/json')\n                            }\n                        }\n                    },\n                ]\n            },\n        ]\n        return <Menubar key=\"calculator-menu\" model={items} id=\"app-main-menu\" />\n    }\n\n    /**\n     * Returns JSX next card to be displayed from the cards state.\n     * Returns and empty JSX element if there are no cards waiting.\n     * \n     * This function sorts the cards array so that highest priority\n     * cards are displayed first.\n     * \n     * NOTE: Please be sure to add any new `CardFor` values as \n     * cases in this function. Do not `setState()` in this method.\n     */\n    renderNextCard = (): JSX.Element => {\n        return this.state.cards.sort((a, b) => b - a).reduce((accumulator: JSX.Element, cardFor: CardFor): JSX.Element => {\n            _u.debug(\"filtering cards\", accumulator, cardFor)\n            switch (cardFor) {\n                case CardFor.WelcomeAndSetName: return <WelcomeAndSetNameCard\n                    name={this.subcalc.snapshot.name}\n                    defaultName={this.defaultName()}\n                    save={this.saveName}\n                />\n                case CardFor.ShowingInstructions: return <InstructionsCard\n                    save={() => this.removeCardState(CardFor.ShowingInstructions)}\n                />\n                case CardFor.ShowingAbout: return <AboutCard\n                    save={() => this.removeCardState(CardFor.ShowingAbout)}\n                    showCredits={() => this.switchCardState(CardFor.ShowingAbout, CardFor.ShowingBy)}\n                />\n                case CardFor.ShowingBy: return <CreditCard\n                    save={() => this.removeCardState(CardFor.ShowingBy)}\n                />\n                case CardFor.SavingSnapshotBefore: return <SavingSnapshotBeforeCard\n                    name={this.subcalc.snapshot.name}\n                    save={this.saveSnapshotBefore}\n                    title={this.state.before}\n                />\n                case CardFor.SavingSnapshot: return <SavingSnapshotCard\n                    name={this.subcalc.snapshot.name}\n                    save={this.saveSnapshot}\n                />\n                case CardFor.ChangingName: return <ChangingNameCard\n                    name={this.subcalc.snapshot.name}\n                    defaultName={this.defaultName()}\n                    save={this.saveName}\n                    newMeeting={this.newMeeting}\n                />\n                case CardFor.ChangingDelegates: return <ChangingDelegatesAllowedCard\n                    allowed={this.subcalc.snapshot.allowed}\n                    save={this.saveDelegatesAllowed}\n                    newMeeting={this.newMeeting}\n                />\n                case CardFor.ChangingCoin: return <ChangingCoinCard\n                    value={this.subcalc.snapshot.seed.toString()}\n                    allowed={this.subcalc.snapshot.allowed}\n                    save={this.saveRandomSeed}\n                    generate={this.generateRandomSeed}\n                />\n                case CardFor.RemovingEmpties: return <RemovingEmptiesCard\n                    removeEmpties={this.removeEmpties}\n                    cancel={() => this.removeCardState(CardFor.RemovingEmpties)}\n                />\n                case CardFor.ShowingSecurity: return <SecurityCard\n                    save={() => this.removeCardState(CardFor.ShowingSecurity)}\n                    clearData={() => {\n                        this.subcalc.clear()\n                        this.keySuffix = String(_u.randomSeed())\n                        this.setState({ cards: this.initialCardState })\n                        this.growlAlert(\"Starting again from scratch!\", 'warn', 'Storage Cleared')\n                    }}\n                />\n                case CardFor.Viability: return <ViabilityCard\n                    save={() => this.removeCardState(CardFor.Viability)}\n                    snapshot={this.subcalc.snapshot}\n                />\n            }\n            return accumulator\n        }, <></>)\n    }\n\n    /**\n     * Callback for the card that allows for a snapshot to be saved before doing something else.\n     */\n    saveSnapshotBefore = (value?: string) => {\n        _u.debug(\"sSnapBefore\", this.state.cards)\n        this.removeCardState(CardFor.SavingSnapshotBefore)\n        if (value !== undefined) {\n            this.saveSnapshot(value, CardFor.Nothing)\n            if (this.state.afterBefore) {\n                this.state.afterBefore()\n            }\n        }\n    }\n\n    /**\n     * Callback for the changing name card to shave a new meeting name.\n     */\n    saveName = (value?: string) => {\n        if (value == undefined) {\n            this.removeCardState(CardFor.ChangingName)\n        } else {\n            this.setState({ cards: this.removeCard(CardFor.WelcomeAndSetName, this.removeCard(CardFor.ChangingName)) })\n            this.setStateName(value)\n        }\n    }\n\n    /**\n     * Callback for the delegates allowed card to shave a new number of delegates.\n     */\n    saveDelegatesAllowed = (value?: string) => {\n        if (value == undefined) {\n            this.removeCardState(CardFor.ChangingDelegates)\n        } else {\n            this.setState({ cards: this.removeCard(CardFor.ChangingDelegates) })\n            this.setStateAllowed(Number(value))\n        }\n    }\n\n    /**\n     * Callback for the changing coin card to generate a new random seed.\n     */\n    generateRandomSeed = () => {\n        this.subcalc.reviseSnapshot({ seed: _u.randomSeed() })\n        this.growlAlert(`Random seed is now ${this.subcalc.snapshot.seed}.`, 'success', 'New Random Coin')\n        this.removeCardState(CardFor.ChangingCoin)\n    }\n\n    /**\n     * Callback for the changing coin card to save a specified random seed.\n     */\n    saveRandomSeed = (value?: string) => {\n        if (value == undefined) {\n            this.removeCardState(CardFor.ChangingCoin)\n        } else {\n            const seed = Number(value)\n            if (seed === this.subcalc.snapshot.seed) {\n                this.growlAlert(`Random seed is still ${this.subcalc.snapshot.seed}.`, 'info', 'Coin not changed')\n            } else {\n                this.subcalc.reviseSnapshot({ seed: seed })\n                this.growlAlert(`Random seed is now ${this.subcalc.snapshot.seed}.`, 'success', 'New Chosen Coin')\n            }\n            this.removeCardState(CardFor.ChangingCoin)\n        }\n    }\n\n    /**\n     * A method to sort subcaucuses by name.\n     * \n     * NOTE: This depends on the `sortName` state to determine\n     * whether the result will be ascending or descending.\n     */\n    sortBySubcaucusName = (a: Subcaucus, b: Subcaucus): number => {\n\n        // fall back to order of entry\n        let comparison = a.id - b.id\n        const nameA = a.displayName().toUpperCase()\n        const nameB = b.displayName().toUpperCase()\n        if (nameA < nameB) {\n            comparison = -1\n        }\n        if (nameA > nameB) {\n            comparison = 1\n        }\n        return comparison * this.state.sortName\n    }\n\n    /**\n     * A method to sort subcaucuses by count.\n     * This method sorts first by count, then subsorts by\n     * the number of delegates, and then sorts by name\n     * (names will always be ascending). It also makes sure\n     * that subcaucuses without any members will sort to\n     * the bottom regardless of the chosen sort order.\n     * \n     * NOTE: This depends on the `sortCount` state to determine\n     * whether the result will be ascending or descending.\n     */\n    sortBySubcaucusCounts = (a: Subcaucus, b: Subcaucus): number => {\n\n        // start with delegates, then check on count, then fall back if needed\n        const delegateComparison = (a.delegates - b.delegates).comparisonValue()\n\n        let ac = a.count ? a.count : this.state.sortCount * Infinity\n        let bc = b.count ? b.count : this.state.sortCount * Infinity\n        const countComparison = (ac - bc).comparisonValue()\n\n\n        const weightedComparison = (0.1 * delegateComparison) + countComparison\n\n        let comparison = weightedComparison\n\n        if (comparison == 0) {\n            // we want the names to always sort in descending order\n            // during count comparisons, so we undo the effect of direction\n            // (both 1 * 1 and -1 * -1 equal 1) and then force a -1 direction \n            comparison = this.sortBySubcaucusName(a, b) * this.state.sortName * -1\n        }\n\n        return comparison * this.state.sortCount\n    }\n\n    /**\n     * Returns JSX for the subcaucus rows.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderSubcaucusRows = (): JSX.Element[] => {\n        // sort subcaucuses by id number by default\n        let sort = (a: Subcaucus, b: Subcaucus) => {\n            return a.id - b.id\n        }\n\n        if (this.state.sortName != SortOrder.None) {\n            sort = this.sortBySubcaucusName\n        }\n\n        if (this.state.sortCount != SortOrder.None) {\n            sort = this.sortBySubcaucusCounts\n        }\n\n        return this.subcalc.snapshot.subcaucuses.values().sort(sort).map((subcaucus, index, array): JSX.Element => {\n            return (\n                <SubcaucusRow key={`${subcaucus.id} ${this.keySuffix}`}\n                    subcaucus={subcaucus}\n                    index={index + 1}\n                    rows={array.length}\n                    exchange={this.handleSubcaucusChange}\n                />\n            )\n        })\n    }\n\n    /**\n     * Returns JSX for the summary section of the SubCalc App.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderSummary = (): JSX.Element => {\n        return ((this.subcalc.snapshot.participants > 0)\n            ? <div id=\"summary-container\"\n                onClick={() => this.addCardState(CardFor.Viability)}\n            >\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        Total participants and delegates elected\n                    </div>\n                    <div className=\"summary-count\">\n                        <strong>\n                            {this.subcalc.snapshot.participants.toCommaString()}\n                        </strong>\n                    </div>\n                    <div className=\"summary-delegates\">\n                        {this.subcalc.snapshot.totalDelegates.toCommaString()}\n                    </div>\n                </div>\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        <strong>Viability number</strong><br />(members needed for viable subcaucus)\n                    </div>\n                    <div className=\"summary-count\">\n                        <strong>\n                            {this.subcalc.snapshot.viabilityNumber}\n                        </strong>\n                    </div>\n                </div>\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        Delegate divisor<br />(members needed for each delegate)\n                    </div>\n                    <div className=\"summary-count\">\n                        {this.subcalc.snapshot.delegateDivisor.decimalPlaces(3)}\n                    </div>\n                </div>\n                {\n                    this.subcalc.snapshot.viableParticipants < this.subcalc.snapshot.participants\n                        ? <div className=\"summary-row\">\n                            <div className=\"summary-label\">\n                                {(this.subcalc.snapshot.participants - this.subcalc.snapshot.viableParticipants).singularPlural(\"person\", \"people\")} in a non-viable subcaucus, you may want to consider another round of walking\n                            </div>\n                        </div>\n                        : ''\n                }\n            </div >\n            : <div id=\"summary-container\">\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        To get an initial \"viability number\" just make all the people in the room members of a single subcaucus.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    /**\n     * Returns JSX for the whole calculator.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderCalculator = (): JSX.Element => {\n        const { sortName, sortCount } = this.state\n        const snapshot = this.subcalc.snapshot\n        const { name, revision } = snapshot\n\n        return (\n            <div id=\"calculator\">\n                {this.renderMenu()}\n                <div id=\"meeting-info\">\n                    <div id=\"meeting-name\" className=\"button\"\n                        onClick={() => this.addCardState(CardFor.ChangingName)}\n                    >\n                        {name ? name : this.defaultName()}\n                        {revision != ''\n                            ? <span className=\"snapshot\">\n                                {revision}\n                            </span>\n                            : ''\n                        }\n                    </div>\n                    <div id=\"delegates-allowed\" className=\"button\"\n                        onClick={() => this.addCardState(CardFor.ChangingDelegates)}\n                    >{this.allowedString()}</div>\n                </div>\n                <div id=\"subcaucus-container\">\n                    <div id=\"subcaucus-header\">\n                        <Button id=\"subcaucus-name-head\"\n                            label=\"Subcaucuses\"\n                            icon={this.sortOrderIcon(sortName)}\n                            onClick={() => this.setState({\n                                sortName: this.state.sortName ? SortOrder.None : SortOrder.Ascending,\n                                sortCount: SortOrder.None\n                            })}\n                        />\n                        <Button id=\"subcaucus-count-head\"\n                            label=\"Members\"\n                            iconPos=\"right\"\n                            icon={this.sortOrderIcon(sortCount)}\n                            onClick={() => this.setState({\n                                sortName: SortOrder.None,\n                                sortCount: this.nextSortOrder(sortCount, -1)\n                            })}\n                        />\n                        <Button id=\"subcaucus-delegate-head\"\n                            label=\"Dels\"\n                        />\n                    </div>\n                    <div id=\"subcaucus-list\">\n                        {this.renderSubcaucusRows()}\n                    </div>\n                    <div id=\"subcaucus-footer\">\n                        <Button id=\"add-subcaucus-button\"\n                            label=\"Add Subcaucus\"\n                            icon=\"pi pi-plus\"\n                            onClick={() => {\n                                snapshot.addSubcaucus()\n                                this.setStateSubcaucuses()\n                            }}\n                        />\n                        <Button id=\"remove-empty-subcaucuses-button\"\n                            label=\"Empties\"\n                            icon=\"pi pi-trash\"\n                            tooltip=\"Remove subcaucuses that have no members\"\n                            tooltipOptions={this.tooltipOptions}\n                            onClick={() => this.addCardState(CardFor.RemovingEmpties)}\n                        />\n                        <Button id=\"clear-counts-button\"\n                            icon=\"pi pi-minus-circle\"\n                            tooltip=\"Zero out the members of each subcaucus\"\n                            tooltipOptions={this.tooltipOptions}\n                            onClick={() => this.checkForRevisionBefore(() => {\n                                this.subcalc.zeroSubcaucuses()\n                                this.keySuffix = String(_u.randomSeed())\n                                this.forceUpdate()\n                            }, \"Before zeroing out the subcaucuses...\")}\n                        />\n                        {_u.isDebugging()\n                            ? <Button id=\"random-coin-button\"\n                                icon=\"pi pi-refresh\"\n                                className=\"p-button-success\"\n                                tooltip=\"Get new random seed for the coin\"\n                                tooltipOptions={this.tooltipOptions}\n                                onClick={() => {\n                                    this.subcalc.reviseSnapshot({ seed: _u.randomSeed() })\n                                    this.growlAlert(`Random seed is now ${this.subcalc.snapshot.seed}.`, 'success', 'New Random Coin')\n                                    this.keySuffix = String(_u.randomSeed())\n                                    this.forceUpdate()\n                                }}\n                            />\n                            : ''\n                        }\n                    </div>\n                </div>\n                {this.renderSummary()}\n            </div>\n        )\n    }\n\n    /**\n     * Returns the JSX for the footer elements of the app.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderByline = (): JSX.Element => {\n        return (\n            <Button id=\"app-byline\"\n                label=\"Brought to you by Tenseg LLC\"\n                href=\"https://tenseg.net\"\n                onClick={() => this.addCardState(CardFor.ShowingBy)}\n            />\n        )\n    }\n\n    /**\n     * Returns the JSX for debugging elements. These should not be\n     * displayed when compiled for production.\n     * \n     * NOTE: Do not `setState()` in this method.\n     */\n    renderDebuggingInfo = (): JSX.Element => {\n\n        if (!_u.isDebugging()) return <></>\n\n        return (\n            <div key={_u.randomSeed()} className=\"debugging\">\n                <p>This is debugging info for <a href=\"https://grand.clst.org:3000/tenseg/subcalc-pr/issues\" target=\"_repository\">subcalc-pr</a> (with <a href=\"https://reactjs.org/docs/react-component.html\" target=\"_react\">ReactJS</a>, <a href=\"https://www.primefaces.org/primereact/\" target=\"_primereact\">PrimeReact</a>, <a href=\"https://www.primefaces.org/primeng/#/icons\" target=\"_primeicons\">PrimeIcons</a>) derrived from <a href=\"https://bitbucket.org/tenseg/subcalc-js/src\" target=\"_bitbucket\">subcalc-js</a>.\n                </p>\n                <pre>{this.subcalc.snapshot.asText()}</pre>\n                <div className=\"columns\">\n                    <div className=\"column\">\n                        <pre>{\"rendered App \" + (new Date()).toLocaleTimeString()}</pre>\n                        <pre>{\"app: \" + JSON.stringify(_u.getApp())}</pre>\n                        <pre>{\"subcalc: \" + this.subcalc.debug()}</pre>\n                        <ShowJSON name=\"this.state\" data={this.state} /><br />\n                    </div>\n                    <div className=\"column\">\n                        <ShowJSON name=\"this.subcalc\" data={this.subcalc} />\n                    </div>\n                </div>\n                <p style={{ clear: \"both\" }}>Done.</p>\n            </div>\n        )\n    }\n\n    /**\n     * Shows an alert using PrimeReact `Growl` if it is available,\n     * or simply as an alert if there is not growl instance yet.\n     */\n    growlAlert = (message: string, severity: 'error' | 'warn' | 'success' | 'info' = 'error', summary = '') => {\n        if (!summary && message) {\n            summary = message\n            message = ''\n        }\n        if (this.growl) {\n            this.growl.show({\n                severity: severity,\n                summary: summary,\n                closable: false,\n                detail: message\n            });\n        } else {\n            alert(message)\n        }\n    }\n\n    /**\n     * Returns the JSX for the whole SubCalc App.\n     */\n    render() {\n\n        _u.debug(\"rendering\", this.subcalc.snapshot)\n\n        return (\n            <div id=\"app\">\n                <div id=\"app-content\">\n                    {this.state.present == Presenting.Calculator\n                        ? this.renderCalculator()\n                        : ''}\n                    {this.state.present == Presenting.Loading\n                        ? <Loader\n                            subcalc={this.subcalc}\n                            onLoad={this.loadSnapshot}\n                            onNew={this.newMeeting}\n                        />\n                        : ''}\n                    {this.renderByline()}\n                    {this.renderNextCard()}\n                    <Growl ref={(el) => this.growl = el} />\n                </div>\n                {this.renderDebuggingInfo()}\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\n// see https://www.npmjs.com/package/react-json-view\n// import ReactJson from 'react-json-view'\n// see: https://www.npmjs.com/package/react-json-tree\n// import JSONTree from 'react-json-tree'\n// local to this app\nimport * as _u from './Utilities'\n\ninterface Props {\n\tname?: string\n\tdata: any\n}\n\ninterface State {\n}\n\nexport class ShowJSON extends React.Component<Props, State> {\n\n\trender() {\n\t\t// react-json-view version, buggy after recalculations\n\t\t// return (\n\t\t// \t<ReactJson\n\t\t// \t\tsrc={this.props.data}\n\t\t// \t\tname={this.props.name}\n\t\t// \t\tenableClipboard={false}\n\t\t// \t\tindentWidth={2}\n\t\t// \t/>\n\t\t// )\n\t\t// simple version...\n\t\tconst jsonString = JSON.stringify(this.props.data, null, 2)\n\t\treturn (\n\t\t\t<div className=\"show-json\">\n\t\t\t\t<pre>\n\t\t\t\t\t{this.props.name ? `${this.props.name} = ` : ''}\n\t\t\t\t\t{jsonString}\n\t\t\t\t</pre>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tremoveEmpties: (subset?: 'all' | 'unnamed') => void\n\tcancel: () => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to back out of removing empty subcaucuses.\n */\nexport class RemovingEmptiesCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"remove-empties-card\" id=\"remove-empties-card\"\n\t\t\t\ttitle=\"Remove empty subcaucuses\"\n\t\t\t\tfooter={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button id=\"remove-all-empties-button\"\n\t\t\t\t\t\t\tlabel=\"Remove All Empties\"\n\t\t\t\t\t\t\ticon=\"pi pi-trash\"\n\t\t\t\t\t\t\tonClick={() => this.props.removeEmpties()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button id=\"remove-some-empties-button\"\n\t\t\t\t\t\t\tlabel=\"Remove Only Unnamed\"\n\t\t\t\t\t\t\ticon=\"pi pi-trash\"\n\t\t\t\t\t\t\tclassName=\"p-button-warning\"\n\t\t\t\t\t\t\tonClick={() => this.props.removeEmpties('unnamed')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button id=\"cancel-remove-button\"\n\t\t\t\t\t\t\tlabel=\"Cancel\"\n\t\t\t\t\t\t\ticon=\"pi pi-times\"\n\t\t\t\t\t\t\tclassName=\"p-button-secondary\"\n\t\t\t\t\t\t\tonClick={() => this.props.cancel()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<p>An \"empty\" subcaucus is one with no participants &mdash; a zero count.</p>\n\t\t\t\t<p>You can choose to remove all empty subcaucuses, or only those which also have no names.</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tvalue: string\n\tallowed: number\n\tsave: (value?: string) => void\n\tgenerate: () => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the random seed of the coin used to break ties.\n */\nexport class ChangingCoinCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"coin-value\" id=\"coin-value\"\n\t\t\t\ttitle={\"Change the coin\"}\n\t\t\t\ttype=\"positive integer\"\n\t\t\t\tvalue={this.props.value}\n\t\t\t\tallowEmpty={false}\n\t\t\t\textraButtons={this.props.allowed\n\t\t\t\t\t? <Button id=\"random-coin-button\"\n\t\t\t\t\t\tlabel=\"Generate random coin\"\n\t\t\t\t\t\ticon=\"pi pi-refresh\"\n\t\t\t\t\t\tclassName=\"p-button-success\"\n\t\t\t\t\t\tonClick={this.props.generate}\n\t\t\t\t\t/>\n\t\t\t\t\t: <></>\n\t\t\t\t}\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>\n\t\t\t\t\tTraditionally, when there are delegates remaining to be assigned and\n\t\t\t\t\ttwo subcaucuses are \"tied\" with the same size delegations, the chair\n\t\t\t\t\tof the caucus will use some method of assigning those remaining delegates\n\t\t\t\t\tat random. These methods include coin-flips or drawing lots.\n\t\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIn this calculator we accomplish the same randomness, but we do so by\n\t\t\t\t\tin essence, flipping a coin in secret ahead of time. The \"coin\" is\n\t\t\t\t\treally a \"random seed\" that ensures fair but unpredictable results.\n\t\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf you change the coin, this pattern of random flips will also change.\n\t\t\t\t\tIf want the same results as someone else is getting in their copy of\n\t\t\t\t\tthe calculator, then you must share the same coin value.\n\t\t\t\t\t</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tallowed: number\n\tsave: (value?: string) => void\n\tnewMeeting: () => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the number of delegates a meeting is allowed.\n */\nexport class ChangingDelegatesAllowedCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"delegate-value\" id=\"delegate-value\"\n\t\t\t\ttitle=\"Number of delegates allowed?\"\n\t\t\t\ttype=\"positive integer\"\n\t\t\t\tvalue={this.props.allowed.toString()}\n\t\t\t\tallowEmpty={false}\n\t\t\t\textraButtons={this.props.allowed\n\t\t\t\t\t? <Button id=\"new-meeting-button\"\n\t\t\t\t\t\tlabel=\"New meeting\"\n\t\t\t\t\t\ticon=\"pi pi-calendar-plus\"\n\t\t\t\t\t\tclassName=\"p-button-secondary\"\n\t\t\t\t\t\tonClick={this.props.newMeeting}\n\t\t\t\t\t/>\n\t\t\t\t\t: <></>\n\t\t\t\t}\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>Specify the number of delegates that your meeting or caucus is allowed to send on to the next level. This is the number of delegates to be elected by your meeting.\n                {this.props.allowed\n\t\t\t\t\t\t? <span> If this is actually a new event, you may want to start a new meeting instead</span>\n\t\t\t\t\t\t: <></>\n\t\t\t\t\t}\n\t\t\t\t</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tname: string\n\tdefaultName: string\n\tsave: (value?: string) => void\n\tnewMeeting: () => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class ChangingNameCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"name-value\" id=\"name-value\"\n\t\t\t\ttitle=\"Meeting name?\"\n\t\t\t\tvalue={this.props.name}\n\t\t\t\tdefaultValue={this.props.defaultName}\n\t\t\t\tallowEmpty={false}\n\t\t\t\textraButtons={this.props.name\n\t\t\t\t\t? <Button id=\"new-meeting-button\"\n\t\t\t\t\t\tlabel=\"New meeting\"\n\t\t\t\t\t\ticon=\"pi pi-calendar-plus\"\n\t\t\t\t\t\tclassName=\"p-button-secondary\"\n\t\t\t\t\t\tonClick={this.props.newMeeting}\n\t\t\t\t\t/>\n\t\t\t\t\t: <></>\n\t\t\t\t}\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>You can save a new name for this meeting or, if this is really a new event, you may want to start a new meeting altogether.</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tname: string\n\tsave: (value?: string) => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card to save a snapshot of the current state of the\n * calculator.\n */\nexport class SavingSnapshotCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"snapshot-value\" id=\"snapshot-value\"\n\t\t\t\ttitle=\"Name for the snapshot?\"\n\t\t\t\tvalue=\"\"\n\t\t\t\tdefaultValue={`Revision of ${this.props.name}`}\n\t\t\t\tallowEmpty={false}\n\t\t\t\textraButtons={\n\t\t\t\t\t<Button id=\"cancel-save-snapshot-button\"\n\t\t\t\t\t\tlabel=\"Cancel\"\n\t\t\t\t\t\ticon=\"pi pi-times\"\n\t\t\t\t\t\tclassName=\"p-button-secondary\"\n\t\t\t\t\t\tonClick={() => this.props.save()}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>Consider names like \"First walk\" or \"Final result\".</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tname: string\n\ttitle?: string\n\tsave: (value?: string) => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card to save a snapshot of the current state of the\n * calculator before loading another snapshot.\n */\nexport class SavingSnapshotBeforeCard extends React.Component<Props, State> {\n\n\tsave = (value?: string) => (event: React.MouseEvent<HTMLButtonElement>) => {\n\t\tthis.props.save(value)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"snapshot-value\" id=\"snapshot-value\"\n\t\t\t\ttitle={this.props.title || \"Save changes?\"}\n\t\t\t\tvalue=\"\"\n\t\t\t\tdefaultValue={`Revision of ${this.props.name}`}\n\t\t\t\tallowEmpty={false}\n\t\t\t\textraButtons={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button id=\"just-load-snapshot-button\"\n\t\t\t\t\t\t\tlabel=\"Don't save\"\n\t\t\t\t\t\t\ticon=\"pi pi-folder-open\"\n\t\t\t\t\t\t\tclassName=\"p-button-warning\"\n\t\t\t\t\t\t\tonClick={this.save(\"\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button id=\"cancel-save-and-load-snapshot-button\"\n\t\t\t\t\t\t\tlabel=\"Cancel\"\n\t\t\t\t\t\t\ticon=\"pi pi-times\"\n\t\t\t\t\t\t\tclassName=\"p-button-secondary\"\n\t\t\t\t\t\t\tonClick={this.save()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>It looks like you have unsaved changes in the calculator. Do you want to save a snapshot? If so, provide a name like \"First walk\" or \"Final result\". If you don't save a snapshot, your changes may be lost when you continue.\n                </p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tname: string\n\tdefaultName: string\n\tsave: (value?: string) => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class WelcomeAndSetNameCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"welcome-card\" id=\"welcome-card\"\n\t\t\t\ttitle=\"Welcome to the Minnesota DFL Subcacus Calculator\"\n\t\t\t\timage=\"dfl.jpg\"\n\t\t\t\tdescription='Please start by specifying the name of your meeting here. Most meetings have a name, like the \"Ward 4 Precinct 7 Caucus\" or the \"Saint Paul City Convention\".'\n\t\t\t\tvalue={this.props.name}\n\t\t\t\tdefaultValue={this.props.defaultName}\n\t\t\t\tallowEmpty={false}\n\t\t\t\tonSave={this.props.save}\n\t\t\t/>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tsave: (value?: string) => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class InstructionsCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"instructions-card\" id=\"instructions-card\"\n\t\t\t\ttitle=\"Fill in the subcaucuses\"\n\t\t\t\timage=\"walking.jpg\"\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>Now it is time to fill in the subcaucus information. Just add each subcaucus name and the count of participants. Usually a convention or cacucus will solicit the names of subcaucuses first, feel free to enter them right away without a count. Then people will be encouraged to walk around the room and congregate with the subcaucus that most closely represents their views. When each subcacus reports how many members they attracted, you can enter that as the count for that subcaucus.</p>\n\t\t\t\t<p>As soon as you start entering subcaucus counts, the calculator will go to work determining how many delegates each subcaucus will be assigned. You can ignore those numbers until you have finished entering and confirming all the subcaucus counts. When you are done, the delegate numbers can be reported to the chair of your convention or caucus.</p>\n\t\t\t\t<p>Since most conventions or caucuses will go through more than one round of \"walking\", you can just keep reusing your subcaucus list for each round. However, you might want to consider these steps at the end of each round:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Use the \"Meetings\" menu at the top to save a snapshot after each round of caucusing. This will give you a good record of the whole process.</li>\n\t\t\t\t\t<li>Use the \"Share\" menu to email a report about each round to the chair of the meeting just so they also have a clear record of the process.</li>\n\t\t\t\t</ul>\n\t\t\t\t<p>You can always get these instructions back under the \"About\" menu at the top. Have fun!</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tsave: (value?: string) => void\n\tshowCredits: () => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class AboutCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"about-card\" id=\"about-card\"\n\t\t\t\ttitle=\"Minnesota DFL Subcaucus Calculator\"\n\t\t\t\timage=\"dfl.jpg\"\n\t\t\t\tonSave={this.props.save}\n\t\t\t\textraButtons={\n\t\t\t\t\t<Button id=\"show-credits-button\"\n\t\t\t\t\t\tlabel=\"Credits\"\n\t\t\t\t\t\ticon=\"pi pi-user\"\n\t\t\t\t\t\tclassName=\"p-button-secondary\"\n\t\t\t\t\t\tonClick={this.props.showCredits}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<p>Originally written for <a href=\"http://sd64dfl.org\">SD64 DFL</a>, this app assists convenors of precinct caucuses and conventions in Minnesota. The Minnesota Democratic Farmer Labor (DFL) party uses a wonderful, but bit arcane, “walking subcaucus” process that is simple enough to do, but rather difficult to tabulate.</p>\n\t\t\t\t<p>Given the number of delegates your meeting or caucus is allowed to send forward and the count of members of each subcaucus, this calculator determines how many of those delegates each subcaucus will elect. The rules it follows appeared on page 4 of the <a href=\"http://www.sd64dfl.org/more/caucus2014printing/2014-Official-Call.pdf\">DFL 2014 Official Call</a>, including the proper treatment of remainders. It makes the math involved in a walking subcaucus disappear.</p>\n\t\t\t\t<p>The app could be used to facilitate a “walking subcaucus” or “<a href=\"https://en.wikipedia.org/wiki/Proportional_representation\">proportional representation</a>” system for any group.</p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\nimport packageJson from '../../package.json'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tsave: (value?: string) => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class CreditCard extends React.Component<Props, State> {\n\n\trender() {\n\t\tconst app = _u.getApp()\n\t\treturn (\n\t\t\t<ValueCard key=\"by-card\" id=\"by-card\"\n\t\t\t\ttitle=\"Brought to you by Tenseg LLC\"\n\t\t\t\timage=\"tenseg.jpg\"\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p>We love the walking subcaucus process and it makes us a bit sad that the squirrelly math required to calculate who gets how many delegate discourages meetings and caucuses from using the process. We hope this calculator makes it easier for you to get to know your neighbors as you work together to change the world!</p>\n\t\t\t\t<p>Please check us out at <a href=\"https://tenseg.net\">tenseg.net</a> if you need help building a website or making appropriate use of technology.</p>\n\t\t\t\t<h3>Licenses</h3>\n\t\t\t\t<p>This calculator's code is available under the MIT License at Bitbucket.</p>\n\t\t\t\t<p>It makes use of <a href=\"https://reactjs.org/\">ReactJS</a>, <a href=\"https://www.typescriptlang.org/\">TypeScript</a>, <a href=\"https://www.primefaces.org/primereact\">PrimeReact</a>, <a href=\"https://www.primefaces.org/primeng/#/icons\">PrimeIcons</a>, <a href=\"https://github.com/mojotech/json-type-validation\">JSON Type Validation</a>, <a href=\"https://github.com/ClickSimply/typescript-map\">typescript-map</a>, and many other open source projects.\n\t\t\t\t</p>\n\t\t\t\t<div className=\"fineprint\">\n\t\t\t\t\t<>v {packageJson.version}</>\n\t\t\t\t\t{_u.isApp()\n\t\t\t\t\t\t? <> a {app.version}</>\n\t\t\t\t\t\t: ''\n\t\t\t\t\t}\n\t\t\t\t\t{_u.isDebugging()\n\t\t\t\t\t\t? <> d {app.build}</>\n\t\t\t\t\t\t: ''\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tsave: (value?: string) => void\n\tclearData: () => void\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class SecurityCard extends React.Component<Props, State> {\n\n\trender() {\n\t\treturn (\n\t\t\t<ValueCard key=\"security-card\" id=\"security-card\"\n\t\t\t\ttitle=\"Data security\"\n\t\t\t\timage=\"security.jpg\"\n\t\t\t\textraButtons={\n\t\t\t\t\t<Button id=\"clear-data -button\"\n\t\t\t\t\t\tlabel=\"Clear All Data\"\n\t\t\t\t\t\ticon=\"pi pi-exclamation-triangle\"\n\t\t\t\t\t\tclassName=\"p-button-danger\"\n\t\t\t\t\t\tonClick={this.props.clearData}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t{_u.isApp()\n\t\t\t\t\t? <>\n\t\t\t\t\t\t<p>SubCalc stores all of the data you enter on your device. None of your data is shared with other apps or sent off your device unless you choose to share it.</p>\n\t\t\t\t\t\t<p>One thing to be aware of is that anyone who can unlock this device will be able to use this app to see your meeting information, including saved snapshots and past meetings. While your device is locked the data is protected with your passcode.</p>\n\t\t\t\t\t\t<p>Since the data is stored on your device, also be aware that you will not be able to see your meeting information from any other device or on the web version of this calculator. This means that you won't be able to get at this data from other devices or browsers unless you use the sharing features.</p>\n\t\t\t\t\t</>\n\t\t\t\t\t: <>\n\t\t\t\t\t\t<p>The subcaucus calculator stores all of the data you enter on your own device. It uses a feature of web browsers called \"local storage\" to save all your meeting information within your web browser. None of your data gets off your device unless you choose to share it.</p>\n\t\t\t\t\t\t<p>Do note that this app is running on a web server, though, and that server will keep all the logs typical of web servers. This includes logs of your IP address and the documents you retrieve from the server. None of these logs will include your specific meeting information.</p>\n\t\t\t\t\t\t<p>One thing to be aware of is that anyone using this same browser on this same device will be able to see your meeting information, including saved snapshots and past meetings, when they come to this web site.</p>\n\t\t\t\t\t\t<p>Since the data is stored with your browser on this device, also be aware that you will not be able to see your meeting information from any other browser. This means that you won't be able to get at this data from other devices or browsers unless you use the sharing features.</p>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t<p>You can use the \"Share\" menu to get data off your device when you need to do so. Once you share your meeting information this calculator is no longer in control of that data. Make good choices about sharing.</p>\n\t\t\t\t<p>The good news is that there really isn't any private information in the calculator in the first place. Most meetings that use the walking subcacus process are public meetings and the data you store in this calculator is not sensitive. Still, we thought you'd like to know we treat it as <em>your</em> data and do not share it unless you ask us to.</p>\n\t\t\t\t<p>If you want to erase all data the calculator has stored tap the “Clear All Data” button. <em>This action is irreversable.</em></p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","import * as React from 'react'\n\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\n\n// local to this app\nimport * as _u from '../Utilities'\nimport { ValueCard } from '../ValueCard'\nimport { Snapshot } from '../Snapshot'\n\n/**\n * React props for the card.\n */\ninterface Props {\n\tsave: (value?: string) => void\n\tsnapshot: Snapshot\n}\n\n/**\n * React state for the card.\n */\ninterface State {\n\tvalue: string\n}\n\n\n/**\n * A card that allows the user to change the meeting name.\n */\nexport class ViabilityCard extends React.Component<Props, State> {\n\n\trender() {\n\t\tconst s = this.props.snapshot\n\t\treturn (\n\t\t\t<ValueCard key=\"about-card\" id=\"about-card\"\n\t\t\t\ttitle=\"Explaining the numbers\"\n\t\t\t\tonSave={this.props.save}\n\t\t\t>\n\t\t\t\t<p><em>The text below comes from page 4 of the <a href=\"https://www.dfl.org/wp-content/uploads/2018/04/2017-12-14-Call-Amended-2-December-2017-Final2c-Rev-B.pdf\">2018-2019 Official Call of the DFL</a>. The numbers are from the current calculator values.</em></p>\n\n\t\t\t\t<p>The threshold for subcaucus viability is the number of persons needed to elect one delegate. Viability is determined in the following manner:</p>\n\n\t\t\t\t<p><strong>Step No. 1:</strong> Add up the total number of members of all the subcaucuses. [{s.participants}]</p>\n\n\t\t\t\t<p><strong>Step No. 2:</strong> Divide the result of Step No. 1 by the total number of delegates to be elected [<strong>{s.participantsPerDelegate.decimalPlaces(3)}</strong>]. If there is a remainder, round the result up to the next whole number. This is the viability number [<strong>{s.viabilityNumber}</strong>].</p>\n\n\t\t\t\t<p>If all remaining subcaucuses are viable on the first count, then there shall be no second count. Any subcaucus which has fewer delegates than the initial viability number is informed that it is not viable and members must join a viable subcaucus to continue participating in subcaucusing. [<strong>{\n\t\t\t\t\ts.participants === s.viableParticipants\n\t\t\t\t\t\t? \"Subcaucuses are all viable.\"\n\t\t\t\t\t\t: \"Some subcaucuses are not viable.\"\n\t\t\t\t}</strong>]</p>\n\n\t\t\t\t<p>A time is specified (by majority vote of the precinct caucus or in the convention rules) for the second and final count. Prior to this time, individuals may move among the subcaucuses. At the specified time all movement ceases and the members of each subcaucus are counted by the convention tellers. Results of that count are reported to the chair. Delegate allocation is then determined by the chair as follows:</p>\n\n\t\t\t\t<p><strong>First:</strong> Add up the total number of members of all the viable subcaucuses [<strong>{s.viableParticipants}</strong>].</p>\n\n\t\t\t\t<p><strong>Second:</strong> Divide the result of the first step by the total number of delegates to be elected. Carry this division out to at least three decimal places [<strong>{s.delegateDivisor.decimalPlaces(3)}</strong>].</p>\n\n\t\t\t\t<p><strong>Finally:</strong> Divide the number of members of each subcaucus by the result of the second step. The whole number result is the minimum number of delegates allotted to that subcaucus.</p>\n\n\t\t\t\t<p>After allotting delegates in this manner, allot any remaining delegates to subcaucuses in the order of the largest remainder to the smallest remainder. (A subcaucus whose number is less than \"1\" on the final count will not be allotted any delegates or alternates.)</p>\n\n\t\t\t\t<p><em>You can click on the number of delegates for any subcaucus to see this breakdown of \"minimal number of delegates\" and \"remaining delegates\".</em></p>\n\t\t\t</ValueCard>\n\t\t)\n\t}\n\n}","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\n// if a query is found, only store it and restart\n// this will allow the query to be pulled and deleted\n// from local storage by our components\nif (window.location.search) {\n\n    localStorage.setItem(\"query\", window.location.search)\n    window.location.search = \"\"\n\n} else {\n\n    ReactDOM.render(\n        <App />,\n        document.getElementById('root') as HTMLElement\n    );\n    registerServiceWorker();\n\n}"],"sourceRoot":""}