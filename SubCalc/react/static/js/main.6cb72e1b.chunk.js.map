{"version":3,"sources":["Utilities.ts","App.tsx","SubCalcStorage.ts","Subcaucus.tsx","SubcaucusRow.tsx","ValueCard.tsx","registerServiceWorker.ts","index.tsx"],"names":["debug","message","isDebugging","_console","_len","arguments","length","optionalParams","Array","_key","console","log","apply","concat","variable","vars","window","location","search","substring","split","i","pair","decodeURIComponent","getQueryVariable","unwrapString","maybeString","empty","undefined","randomSeed","Math","floor","random","String","prototype","trim","str","this","replace","test","charAt","hashCode","hash","charCodeAt","toDate","Date","Number","toCommaString","toString","singularPlural","singular","plural","pushUnique","something","indexOf","push","SortOrder","CardFor","SubCalcStorage","_this","Object","classCallCheck","version","author","currentMeetingKey","meetings","TSMap","meetingKey","created","newMeetingSnapshot","toJSON","revised","snapName","name","allowed","seed","_u","subcacucuses","writeLocalStorage","meeting","get","jsonSubCalc","v","current","keys","jsonSubCalcString","JSON","stringify","localStorage","setItem","e","alert","jsonMeeting","jsonForMeetingSnapshot","snapshots","map","snapshot","jsonMeetingString","o","objectSpread","jsonSubcaucuses","forEach","subcaucus","id","count","importSubCalc1Data","importSubCalc2Data","getSnapshot","timestamp","Error","currentSnapshot","set","storeMeetingSnapshot","createClass","key","value","Subcaucus","withID","delegates","SubcaucusRow","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","handleName","event","currentTarget","setState","exchange","state","handleCount","num","notify","handleKey","focusOnWholeText","target","setTimeout","setSelectionRange","idPlus","suffix","inherits","_this$state","react","className","inputtextarea","type","rows","cols","placeholder","onChange","onKeyUp","inputtext","keyfilter","pattern","onBlur","primereact_button","label","React","ValueCard","isPositiveInteger","originalValue","defaultValue","handleChange","onSave","isEmpty","save","allowEmpty","initialValue","cardFooter","footer","illegallyEmpty","originalIllegallyEmpty","saveButton","icon","disabled","onClick","cancelButton","extraButtons","primereact_card","title","header","image","alt","src","children","description","autoFocus","App","storage","subcaucuses","initialCardState","WelcomeAndSetName","ChangingDelegates","ShowingInstructions","_currentSubcaucusID","nextSubcaucusID","addSubcaucus","forceUpdate","newSubcaucus","defaultName","toLocaleDateString","allowedString","addCard","cardFor","to","cards","toConsumableArray","addCardState","removeCard","seekingCardFor","from","filter","foundCardFor","removeCardState","switchCardState","fromCardFor","toCardFor","newCards","showingCard","handleSubcaucusChange","subcaucusID","action","removeEmpties","subset","k","RemovingEmpties","sortOrderIcon","order","nextSortOrder","currentOrder","nextOrder","renderMenu","items","command","ShowingAbout","ShowingSecurity","menubar","model","renderAbout","ValueCard_ValueCard","ShowingBy","href","renderInstructions","renderSecurity","renderBy","renderWelcomeAndSetName","renderChangingName","ChangingName","renderChangingDelegates","renderRemovingEmpties","renderNextCard","sort","a","b","reduce","accumulator","renderSubcaucusRows","sortName","None","direction","Ascending","comparison","nameA","toUpperCase","nameB","sortCount","countComparison","values","SubcaucusRow_SubcaucusRow","renderSummary","summary","minimumCountForViability","round","viability","nonViableCount","revisedViability","_this2","menu","subcaucusRows","card","iconPos","toLocaleTimeString","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6cb72e1b.chunk.js","sourcesContent":["// Utilities.tsx\n//\n// A number of helpful functions used throughout the app.\n//\n// Recommend this file be imported as:\n// import * as _u from './Utilities'\n//\n// We use the name \"_u\" so that tslint won't complain if we\n// do not actually use any _u functions in our file. This way\n// we still can import the prototype extensions.\n\n// Prototype extensions\n\ndeclare global {\n\n\tinterface String {\n\t\ttrim(): string\n\t\thashCode(): number\n\t\ttoDate(): Date\n\t}\n\n\tinterface Number {\n\t\ttoCommaString(): string\n\t\tsingularPlural(singular: string, plural: string): string\n\t}\n\n\tinterface Array<T> {\n\t\tpushUnique(something: T): Array<T>\n\t}\n\n\tvar isInApp: boolean\n\n}\n\n// see http://blog.stevenlevithan.com/archives/faster-trim-javascript\nString.prototype.trim = function (): string {\n\tvar str = this.replace(/^\\s+/, '')\n\tfor (var i = str.length - 1; i >= 0; i--) {\n\t\tif (/\\S/.test(str.charAt(i))) {\n\t\t\tstr = str.substring(0, i + 1)\n\t\t\tbreak\n\t\t}\n\t}\n\treturn str\n}\n\n// https://stackoverflow.com/a/7616484\nString.prototype.hashCode = function (): number {\n\tlet hash = 0\n\tif (this.length === 0) return hash;\n\tfor (let i = 0; i < this.length; i++) {\n\t\tlet chr = this.charCodeAt(i);\n\t\thash = ((hash << 5) - hash) + chr;\n\t\thash |= 0; // Convert to 32bit integer\n\t}\n\treturn hash;\n}\n\nString.prototype.toDate = function (): Date {\n\treturn new Date(String(this))\n}\n\n// see: https://stackoverflow.com/a/2901298\nNumber.prototype.toCommaString = function (): string {\n\treturn this.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nNumber.prototype.singularPlural = function (singular: string, plural: string): string {\n\treturn `${this} ${this == 1 ? singular : plural}`\n}\n\n// see: https://stackoverflow.com/a/12803141\nArray.prototype.pushUnique = function (something) {\n\tif (this.indexOf(something) === -1) {\n\t\tthis.push(something)\n\t}\n\treturn this\n}\n\n// _u functions\n\n/**\n * _u.debug\n * \n * Pass along message and optionalParams to console.log\n * only if we are in a development environment.\n * \n */\nexport function debug(message?: any, ...optionalParams: any[]) {\n\tif (isDebugging()) {\n\t\tconsole.log(message, ...optionalParams)\n\t}\n}\n\nexport function isDebugging(): boolean {\n\treturn !process.env.NODE_ENV || process.env.NODE_ENV === \"development\" || getQueryVariable(\"debug\") === \"yes\"\n}\n\nexport function getQueryVariable(variable: string) {\n\tvar query = window.location.search.substring(1);\n\tvar vars = query.split('&');\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=');\n\t\tif (decodeURIComponent(pair[0]) == variable) {\n\t\t\treturn decodeURIComponent(pair[1]);\n\t\t}\n\t}\n\treturn undefined\n}\n\n/**\n * Unwrap the optional string, returning '' if it was undefined.\n * \n * @param {string | undefined} maybeString\n * @param {string} empty An alternative string to return if the input was undefined.\n */\nexport function unwrapString(maybeString?: string, empty = ''): string {\n\tif (maybeString == undefined) return empty\n\treturn maybeString\n}\n\n/**\n * Unwrap the optional number, returning 0 if it was undefined.\n * \n * @param {string | undefined} maybeNumber\n * @param {string} empty An alternative number to return if the input was undefined.\n */\nexport function unwrapNumber(maybeNumber?: number, empty = 0): number {\n\tif (maybeNumber == undefined) return empty\n\treturn maybeNumber\n}\n\n/**\n * Unwrap the optional boolean, returning false if it was undefined.\n * \n * @param {string | undefined} maybeBoolean\n * @param {string} empty An alternative boolean value to return if the input was undefined.\n */\nexport function unwrapBoolean(maybeBoolean?: boolean, empty = false): boolean {\n\tif (maybeBoolean == undefined) return empty\n\treturn maybeBoolean\n}\n\n/**\n * A random number provided by Math.random() to use as a seed\n * for our own random number sequences.\n * \n * Note that in SubCalc1 we used seconds from Unix epoch as seeds,\n * but that makes it somewhat confusing by implying a connection between\n * the time and the seed. There really is no such connection.\n */\nexport function randomSeed(): number {\n\treturn Math.floor(Math.random() * 1000000)\n}","import * as React from 'react'\n// see https://github.com/ClickSimply/typescript-map\nimport { TSMap } from 'typescript-map'\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { Menubar } from 'primereact/menubar';\nimport 'primereact/resources/primereact.min.css'\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primeicons/primeicons.css'\n// local to this app\nimport './App.scss'\nimport * as _u from './Utilities'\nimport { SubCalcStorage } from './SubCalcStorage'\nimport { Subcaucus } from './Subcaucus'\nimport { SubcaucusRow, SubcaucusRowAction } from './SubcaucusRow'\nimport { ValueCard } from './ValueCard'\n\nenum SortOrder {\n    None = 0,\n    Ascending,\n    Descending,\n}\n\nenum CardFor {\n    // these cards should be defined in priority order\n    // if stacked, the ones toward the top will be shown first\n    WelcomeAndSetName,\n    ChangingName,\n    ChangingDelegates,\n    RemovingEmpties,\n    ShowingAbout,\n    ShowingBy,\n    ShowingInstructions,\n    ShowingSecurity,\n}\n\ninterface SummaryInfo {\n    count: number\n    delegates: number\n    viability: number\n    revisedViability: number\n    minimumCountForViability: number\n    nonViableCount: number\n}\n\ninterface Props { }\ninterface State {\n    created: string\n    revised: string\n    snapshot: string\n    name: string\n    allowed: number\n    // card status\n    cards: Array<CardFor>\n    // sorting info\n    sortName: SortOrder\n    sortCount: SortOrder\n    // summary info\n    summary?: SummaryInfo\n}\n\nexport class App extends React.Component<Props, State> {\n\n    storage: SubCalcStorage\n    subcaucuses: TSMap<number, Subcaucus>\n\n    initialCardState: Array<CardFor> = [\n        CardFor.WelcomeAndSetName,\n        CardFor.ChangingDelegates,\n        CardFor.ShowingInstructions\n    ]\n\n    constructor(props: Props) {\n        super(props)\n\n        this.storage = new SubCalcStorage()\n        this.subcaucuses = new TSMap<number, Subcaucus>()\n\n        const timestamp = (new Date()).toJSON()\n        this.state = {\n            created: timestamp,\n            revised: timestamp,\n            snapshot: '',\n            name: '',\n            allowed: 0,\n            // card status\n            cards: this.initialCardState,\n            // sorting info\n            sortName: SortOrder.None,\n            sortCount: SortOrder.None,\n        }\n        if (_u.isDebugging()) {\n            this.addSubcaucus(false, \"C\", 10, 0)\n            this.addSubcaucus(false, \"A\", 0, 0)\n            this.addSubcaucus(false, \"B\", 100, 5)\n            this.addSubcaucus(false, \"D\", 1, 0)\n            this.addSubcaucus(false)\n            this.state = {\n                created: timestamp,\n                revised: timestamp,\n                snapshot: 'Revised',\n                name: 'Debugging',\n                allowed: 10,\n                // card status\n                cards: [],\n                // sorting info\n                sortName: SortOrder.None,\n                sortCount: SortOrder.None,\n                // summary info\n                summary: {\n                    count: 1234,\n                    delegates: 256,\n                    viability: 2.124132,\n                    revisedViability: 1.92123,\n                    minimumCountForViability: 3,\n                    nonViableCount: 3,\n                }\n            }\n        } else {\n            this.addSubcaucus(false)\n            this.addSubcaucus(false)\n            this.addSubcaucus(false)\n        }\n    }\n\n    private _currentSubcaucusID = 1\n    nextSubcaucusID = () => this._currentSubcaucusID++\n\n    addSubcaucus = (forceUpdate = true, name = '', count = 0, delegates = 0) => {\n        const newSubcaucus = new Subcaucus(this.nextSubcaucusID(), name, count, delegates)\n        this.subcaucuses.set(newSubcaucus.id, newSubcaucus)\n        if (forceUpdate) this.forceUpdate()\n    }\n\n    defaultName = (): string => {\n        return \"Meeting on \" + this.state.created.toDate().toLocaleDateString(\"en-US\")\n    }\n\n    allowedString = (): string => {\n        return `${this.state.allowed} delegates to be elected`\n    }\n\n    addCard = (cardFor: CardFor, to?: Array<CardFor>): Array<CardFor> => {\n        if (to === undefined) {\n            to = this.state.cards\n        }\n        return [...to, cardFor]\n    }\n\n    addCardState = (cardFor: CardFor) => {\n        this.setState({ cards: this.addCard(cardFor) })\n    }\n\n    removeCard = (seekingCardFor: CardFor, from?: Array<CardFor>): Array<CardFor> => {\n        if (from === undefined) {\n            from = this.state.cards\n        }\n        return from.filter(foundCardFor => foundCardFor != seekingCardFor)\n    }\n\n    removeCardState = (cardFor: CardFor) => {\n        this.setState({ cards: this.removeCard(cardFor) })\n    }\n\n    switchCardState = (fromCardFor: CardFor, toCardFor: CardFor) => {\n        let newCards = this.removeCard(fromCardFor)\n        newCards = this.addCard(toCardFor, newCards)\n        this.setState({ cards: newCards })\n    }\n\n    showingCard = (cardFor: CardFor): boolean => {\n        return this.state.cards.indexOf(cardFor) > -1\n    }\n\n    handleChange = (name: string) => (event: React.FormEvent<HTMLInputElement>) => {\n        switch (name) {\n            case 'allowed':\n                var allowed = Number(event.currentTarget.value)\n                if (allowed < 0) {\n                    allowed = 0\n                }\n                this.setState({ allowed: allowed })\n                break\n            case 'name':\n                this.setState({ name: event.currentTarget.value })\n                break\n        }\n    }\n\n    focusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.currentTarget // event properties must be copied to use async\n        setTimeout(() => target.setSelectionRange(0, 9999), 0) // do this async to try to make Safari behave\n    }\n\n    handleSubcaucusChange = (subcaucusID: number, action: SubcaucusRowAction) => {\n        _u.debug(\"subcaucus changed\", subcaucusID, action)\n        switch (action) {\n            case 'remove':\n                this.subcaucuses.filter((subcaucus, key) => {\n                    return key != subcaucusID\n                })\n                this.forceUpdate()\n                return\n            case 'enter':\n                return\n            case 'sync':\n                return this.subcaucuses.get(subcaucusID)\n            default:\n                // this.subcaucuses[id] = changedSubcaucus\n                const subcaucus = this.subcaucuses.get(subcaucusID)\n                subcaucus.name = action.name\n                subcaucus.count = action.count\n                this.forceUpdate()\n                return\n        }\n    }\n\n    removeEmpties = (subset = 'all') => {\n        if (subset == 'all') {\n            this.subcaucuses.filter((subcaucus, key) => {\n                return subcaucus.count > 0\n            })\n        }\n        if (subset == 'unnamed') {\n            this.subcaucuses.filter((subcaucus, k, i) => {\n                _u.debug(\"remove?\", subcaucus.id, subcaucus.count, subcaucus.name, subcaucus.count > 0 || subcaucus.name != '', \"key\", k, \"index\", i)\n                return subcaucus.count > 0 || subcaucus.name != ''\n            })\n        }\n        this.removeCardState(CardFor.RemovingEmpties)\n    }\n\n    sortOrderIcon = (order: SortOrder): string => {\n        return [\"pi pi-circle-off\", \"pi pi-chevron-circle-up\", \"pi pi-chevron-circle-down\"][order]\n    }\n\n    nextSortOrder = (currentOrder: SortOrder, direction = 1): SortOrder => {\n        let nextOrder = (currentOrder + direction) % 3\n        if (nextOrder < 0) {\n            nextOrder += 3 // needed to cycle backwards\n        }\n        return nextOrder\n    }\n\n    renderMenu = (): JSX.Element => {\n        const items = [\n            {\n                label: \"About\",\n                icon: \"pi pi-fw pi-info-circle\",\n                items: [\n                    {\n                        label: \"Minnesota DFL Subcaucus Calculator\",\n                        command: () => this.addCardState(CardFor.ShowingAbout),\n                    },\n                    {\n                        label: \"Instructions\",\n                        command: () => this.addCardState(CardFor.ShowingInstructions),\n                    },\n                    {\n                        label: \"Data Security\",\n                        command: () => this.addCardState(CardFor.ShowingSecurity),\n                    },\n                ]\n            },\n            {\n                label: \"Meetings\",\n                icon: \"pi pi-fw pi-calendar\",\n                items: [\n                    {\n                        label: \"Save snapshot\",\n                        icon: \"pi pi-fw pi-clock\",\n                        command: () => alert(\"TODO: create save snapshot function.\")\n                    },\n                    {\n                        label: \"New meeting\",\n                        icon: \"pi pi-fw pi-calendar-plus\",\n                        command: () => alert(\"TODO: create new meeting function.\")\n                    },\n                    {\n                        label: \"Duplicate meeting\",\n                        icon: \"pi pi-fw pi-clone\",\n                        command: () => alert(\"TODO: create duplicate meeting function.\")\n                    },\n                    {\n                        label: \"Load meeting\",\n                        icon: \"pi pi-fw pi-folder-open\",\n                        command: () => alert(\"TODO: create load meeting function.\")\n                    },\n                    {\n                        label: \"Flip the coin\",\n                        icon: \"pi pi-fw pi-refresh\",\n                        command: () => alert(\"TODO: create coin flip function.\")\n                    },\n                ]\n            },\n            {\n                label: \"Share\",\n                icon: \"pi pi-fw pi-share-alt\",\n                items: [\n                    {\n                        label: \"Email report\",\n                        icon: \"pi pi-fw pi-envelope\",\n                        command: () => alert(\"TODO: create email function.\")\n                    },\n                    {\n                        label: \"Download text\",\n                        icon: \"pi pi-fw pi-align-left\",\n                        command: () => alert(\"TODO: create download text function.\")\n                    },\n                    {\n                        label: \"Download CSV\",\n                        icon: \"pi pi-fw pi-table\",\n                        command: () => alert(\"TODO: create download csv function.\")\n                    },\n                    {\n                        label: \"Download code\",\n                        icon: \"pi pi-fw pi-save\",\n                        command: () => alert(\"TODO: create download code function.\")\n                    },\n                ]\n            },\n        ]\n        return <Menubar model={items} id=\"app-main-menu\" />\n    }\n\n    renderAbout = (): JSX.Element => {\n        return (\n            <ValueCard key=\"about-card\" id=\"about-card\"\n                title=\"Minnesota DFL Subcaucus Calculator\"\n                image=\"dfl.jpg\"\n                onSave={() => this.removeCardState(CardFor.ShowingAbout)}\n                extraButtons={\n                    <Button id=\"show-credits-button\"\n                        label=\"Credits\"\n                        icon=\"pi pi-user\"\n                        className=\"p-button-secondary\"\n                        onClick={() => this.switchCardState(CardFor.ShowingAbout, CardFor.ShowingBy)}\n                    />\n                }\n            >\n                <p>Originally written for <a href=\"http://sd64dfl.org\">SD64 DFL</a>, this app assists convenors of precinct caucuses and conventions in Minnesota. The Minnesota Democratic Farmer Labor (DFL) party uses a wonderful, but bit arcane, “walking subcaucus” process that is simple enough to do, but rather difficult to tabulate.</p>\n                <p>Given the number of delegates your meeting or caucus is allowed to send forward and the number of people in each subcaucus, this calculator determines how many of those delegates each subcaucus will elect. The rules it follows appeared on page 4 of the <a href=\"http://www.sd64dfl.org/more/caucus2014printing/2014-Official-Call.pdf\">DFL 2014 Official Call</a>, including the proper treatment of remainders. It makes the math involved in a walking subcaucus disappear.</p>\n                <p>The app could be used to facilitate a “walking subcaucus” or “<a href=\"https://en.wikipedia.org/wiki/Proportional_representation\">proportional representation</a>” system for any group.</p>\n            </ValueCard>\n        )\n    }\n\n    renderInstructions = (): JSX.Element => {\n        return (\n            <ValueCard key=\"instructions-card\" id=\"instructions-card\"\n                title=\"Fill in the subcaucuses\"\n                image=\"walking.jpg\"\n                onSave={() => this.removeCardState(CardFor.ShowingInstructions)}\n            >\n                <p>Now it is time to fill in the subcaucus information. Just add each subcaucus name and the count of participants. Usually a convention or cacucus will solicit the names of subcaucuses first, feel free to enter them right away without a count. Then people will be encouraged to walk around the room and congregate with the subcaucus that most closely represents their views. When each subcacus reports how many people they attracted, you can enter that as the count for that subcaucus.</p>\n                <p>As soon as you start entering subcaucus counts, the calculator will go to work determining how many delegates each subcaucus will be assigned. You can ignore those numbers until you have finished entering and confirming all the subcaucus counts. When you are done, the delegate numbers can be reported to the chair of your convention or caucus.</p>\n                <p>Since most conventions or caucuses will go through more than one round of \"walking\", you can just keep reusing your subcaucus list for each round. However, you might want to consider these steps at the end of each round:</p>\n                <ul>\n                    <li>Use the \"Meetings\" menu at the top to save a snapshot after each round of caucusing. This will give you a good record of the whole process.</li>\n                    <li>Use the \"Share\" menu to email a report about each round to the chair of the meeting just so they also have a clear record of the process.</li>\n                </ul>\n                <p>You can always get these instructions back under the \"About\" menu at the top. Have fun!</p>\n            </ValueCard>\n        )\n    }\n\n    renderSecurity = (): JSX.Element => {\n        return (\n            <ValueCard key=\"security-card\" id=\"security-card\"\n                title=\"Data security\"\n                image=\"security.jpg\"\n                extraButtons={\n                    <Button id=\"clear-data -button\"\n                        label=\"Clear All Data\"\n                        icon=\"pi pi-exclamation-triangle\"\n                        className=\"p-button-danger\"\n                        onClick={() => alert(\"TODO: create clear data function.\")}\n                    />\n                }\n                onSave={() => this.removeCardState(CardFor.ShowingSecurity)}\n            >\n                <p>The subcaucus calculator stores all of the data you enter on your own device. It uses a feature of web browsers called \"local storage\" to save all your meeting information within your web browser. None of your data gets off your device unless you choose to share it.</p>\n                <p>Do note that this app is running on a web server, though, and that server will keep all the logs typical of web servers. This includes logs of your IP address and the documents you retrieve from the server. None of these logs will include your specific meeting information.</p>\n                <p>One thing to be aware of is that anyone using this same browser on this same device will be able to see your meeting information, including saved snapshots and past meetings, when they come to this web site. If this is a public device and you want to clear out all the data the calculator has stored, click the \"Clear All Data\" button.</p>\n                <p>Since the data is stored with your browser on this device, also be aware that you will not be able to see your meeting information from any other browser. This means that even you won't be able to get at this data unless you use the sharing features.</p> {/* TODO: create a transfer data feature */}\n                <p>You can use the \"Share\" menu to get data off your device when you need to do so. Once you share your meeting information this calculator is no longer in control of that data. Make good choices about sharing.</p>\n                <p>The good news is that there really isn't any private information in the calculator in the first place. Most meetings that use the walking subcacus process are public meetings and the data you store in this calculator is not sensitive. Still, we thought you'd like to know we treat it as <em>your</em> data and do not share it unless you ask us to.</p>\n            </ValueCard>\n        )\n    }\n\n    renderBy = (): JSX.Element => {\n        return (\n            <ValueCard key=\"by-card\" id=\"by-card\"\n                title=\"Brought to you by Tenseg LLC\"\n                image=\"tenseg.jpg\"\n                onSave={() => this.removeCardState(CardFor.ShowingBy)}\n            >\n                <p>We love the walking subcaucus process and it makes us a bit sad that the squirrelly math required to calculate who gets how many delegate discourages meetings and caucuses from using the process. We hope this calculator makes it easier for you to get to know your neighbors as you work together to change the world!</p>\n                <p>Please check us out at <a href=\"https://tenseg.net\">tenseg.net</a> if you need help building a website or making appropriate use of technology.</p>\n            </ValueCard>\n        )\n    }\n\n    renderWelcomeAndSetName = (): JSX.Element => {\n        return (\n            <ValueCard key=\"welcome-card\" id=\"welcome-card\"\n                title=\"Welcome to the Minnesota DFL Subcacus Calculator\"\n                image=\"dfl.jpg\"\n                description='Please start by specifying the name of your meeting here. Most meetings have a name, like the \"Ward 4 Precinct 7 Caucus\" or the \"Saint Paul City Convention\".'\n                value={this.state.name}\n                defaultValue={this.defaultName()}\n                allowEmpty={false}\n                onSave={(value?: string) => {\n                    if (value == undefined) {\n                        this.removeCardState(CardFor.WelcomeAndSetName)\n                    } else {\n                        this.setState({\n                            name: value,\n                            cards: this.removeCard(CardFor.WelcomeAndSetName),\n                        })\n                    }\n                }}\n            />\n        )\n    }\n\n    renderChangingName = (): JSX.Element => {\n        return (\n            <ValueCard key=\"name-value\" id=\"name-value\"\n                title=\"Meeting name?\"\n                value={this.state.name}\n                defaultValue={this.defaultName()}\n                allowEmpty={false}\n                extraButtons={this.state.name\n                    ? <Button id=\"new-meeting-button\"\n                        label=\"New meeting\"\n                        icon=\"pi pi-calendar-plus\"\n                        className=\"p-button-secondary\"\n                        onClick={() => alert(\"TODO: create new meeting function.\")}\n                    />\n                    : <></>\n                }\n                onSave={(value?: string) => {\n                    if (value == undefined) {\n                        this.removeCardState(CardFor.ChangingName)\n                    } else {\n                        this.setState({\n                            name: value,\n                            cards: this.removeCard(CardFor.ChangingName),\n                        })\n                    }\n                }}\n            >\n                <p>You can save a new name for this meeting or, if this is really a new event, you may want to start a new meeting altogether.</p>\n            </ValueCard>\n        )\n    }\n\n    renderChangingDelegates = (): JSX.Element => {\n        return (\n            <ValueCard key=\"delegate-value\" id=\"delegate-value\"\n                title=\"Number of delegates allowed?\"\n                type=\"positive integer\"\n                value={this.state.allowed.toString()}\n                allowEmpty={false}\n                extraButtons={this.state.allowed\n                    ? <Button id=\"new-meeting-button\"\n                        label=\"New meeting\"\n                        icon=\"pi pi-calendar-plus\"\n                        className=\"p-button-secondary\"\n                        onClick={() => alert(\"TODO: create new meeting function.\")}\n                    />\n                    : <></>\n                }\n                onSave={(value?: string) => {\n                    if (value == undefined) {\n                        this.removeCardState(CardFor.ChangingDelegates)\n                    } else {\n                        this.setState({\n                            allowed: Number(value),\n                            cards: this.removeCard(CardFor.ChangingDelegates),\n                        })\n                    }\n                }}\n            >\n                <p>Specify the number of delegates that your meeting or caucus is allowed to send on to the next level. This is the number of delegates to be elected by your meeting.\n                {this.state.allowed\n                        ? <span> If this is actually a new event, you may want to start a new meeting instead</span>\n                        : <></>\n                    }\n                </p>\n            </ValueCard>\n        )\n    }\n\n    renderRemovingEmpties = (): JSX.Element => {\n        return (\n            <ValueCard key=\"remove-empties-card\" id=\"remove-empties-card\"\n                title=\"Remove empty subcaucuses\"\n                footer={\n                    <>\n                        <Button id=\"remove-all-empties-button\"\n                            label=\"Remove All Empties\"\n                            icon=\"pi pi-trash\"\n                            onClick={() => this.removeEmpties()}\n                        />\n                        <Button id=\"remove-some-empties-button\"\n                            label=\"Remove Only Unnamed\"\n                            icon=\"pi pi-trash\"\n                            className=\"p-button-warning\"\n                            onClick={() => this.removeEmpties('unnamed')}\n                        />\n                        <Button id=\"cancel-remove-button\"\n                            label=\"Cancel\"\n                            icon=\"pi pi-times\"\n                            className=\"p-button-secondary\"\n                            onClick={() => this.removeCardState(CardFor.RemovingEmpties)}\n                        />\n                    </>\n                }\n            >\n                <p>An \"empty\" subcaucus is one with no participants &mdash; a zero count.</p>\n                <p>You can choose to remove all empty subcaucuses, or only those which also have no names.</p>\n            </ValueCard>\n        )\n    }\n\n    renderNextCard = (): JSX.Element => {\n        return this.state.cards.sort((a, b) => b - a).reduce((accumulator: JSX.Element, cardFor: CardFor): JSX.Element => {\n            _u.debug(\"filtering cards\", accumulator, cardFor)\n            switch (cardFor) {\n                case CardFor.WelcomeAndSetName: return this.renderWelcomeAndSetName()\n                case CardFor.ShowingInstructions: return this.renderInstructions()\n                case CardFor.ShowingAbout: return this.renderAbout()\n                case CardFor.ShowingBy: return this.renderBy()\n                case CardFor.ChangingName: return this.renderChangingName()\n                case CardFor.ChangingDelegates: return this.renderChangingDelegates()\n                case CardFor.RemovingEmpties: return this.renderRemovingEmpties()\n                case CardFor.ShowingSecurity: return this.renderSecurity()\n            }\n            return accumulator\n        }, <></>)\n    }\n\n    renderSubcaucusRows = (): JSX.Element[] => {\n        // determine how the subcaucus rows should be sorted\n        let sort = (a: Subcaucus, b: Subcaucus) => {\n            return a.id - b.id\n        }\n\n        if (this.state.sortName != SortOrder.None) {\n            sort = (a: Subcaucus, b: Subcaucus) => {\n                const direction = this.state.sortName == SortOrder.Ascending ? 1 : -1\n                // fall back to order of entry\n                let comparison = a.id - b.id\n                const nameA = a.name ? a.name.toUpperCase() : `SUBCAUCUS ${a.id}`;\n                const nameB = b.name ? b.name.toUpperCase() : `SUBCAUCUS ${b.id}`;\n                if (nameA < nameB) {\n                    comparison = -1;\n                }\n                if (nameA > nameB) {\n                    comparison = 1;\n                }\n                return comparison * direction\n            }\n        }\n\n        if (this.state.sortCount != SortOrder.None) {\n            sort = (a: Subcaucus, b: Subcaucus) => {\n                const direction = this.state.sortCount == SortOrder.Ascending ? 1 : -1\n                // fall back to order of entry or names\n                let comparison = a.id - b.id\n                const nameA = a.name ? a.name.toUpperCase() : `SUBCAUCUS ${a.id}`;\n                const nameB = b.name ? b.name.toUpperCase() : `SUBCAUCUS ${b.id}`;\n                if (nameA < nameB) {\n                    comparison = -1;\n                }\n                if (nameA > nameB) {\n                    comparison = 1;\n                }\n                // start with delegates, then check on count, then fall back if needed\n                let countComparison = a.delegates - b.delegates\n                if (countComparison == 0) {\n                    countComparison = a.count - b.count\n                }\n                if (countComparison == 0) {\n                    return comparison\n                }\n                return countComparison * direction\n            }\n        }\n\n        return this.subcaucuses.values().sort(sort).map((subcaucus): JSX.Element => {\n            return (\n                <SubcaucusRow key={subcaucus.id}\n                    id={subcaucus.id}\n                    exchange={this.handleSubcaucusChange}\n                />\n            )\n        })\n    }\n\n    renderSummary = (): JSX.Element => {\n        const { summary } = this.state\n\n        return ((summary)\n            ? <div id=\"summary-container\">\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        Total participants and delegates elected\n                    </div>\n                    <div className=\"summary-count\">\n                        <strong>\n                            {summary.count.toCommaString()}\n                        </strong>\n                    </div>\n                    <div className=\"summary-delegates\">\n                        {summary.delegates.toCommaString()}\n                    </div>\n                </div>\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        Minimum of <strong>{summary.minimumCountForViability.singularPlural(\"person\", \"people\")}</strong> needed to make a subcaucus viable\n                    </div>\n                </div>\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        Viability number\n                    </div>\n                    <div className=\"summary-count\">\n                        <strong>\n                            {Math.round(summary.viability * 1000) / 1000}\n                        </strong>\n                    </div>\n                </div>\n                {summary.nonViableCount\n                    ? <div className=\"summary-row clickable\"\n                        onClick={() => alert(\"TODO: explain viability in more detail.\")}\n                    >\n                        <div className=\"summary-label\">\n                            Recalculated viability number ({summary.nonViableCount.singularPlural(\"person\", \"people\")} in non-viable subcaucuses)\n                        </div>\n                        <div className=\"summary-count\">\n                            {Math.round(summary.revisedViability * 1000) / 1000}\n                        </div>\n                    </div>\n                    : ''\n                }\n            </div>\n            : <div id=\"summary-container\">\n                <div className=\"summary-row\">\n                    <div className=\"summary-label\">\n                        To get a \"viability number\" just put the count of all the people in the room into a single subcaucus.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n\n        _u.debug(\"rendering\", this.subcaucuses)\n\n        const menu = this.renderMenu()\n        const subcaucusRows = this.renderSubcaucusRows()\n        const summary = this.renderSummary()\n        const card = this.renderNextCard()\n\n        const { name, revised, snapshot, created, sortName, sortCount } = this.state\n\n        return (\n            <div id=\"app\">\n                <div id=\"app-content\">\n                    {menu}\n                    <div id=\"meeting-info\">\n                        <div id=\"meeting-name\" className=\"button\"\n                            onClick={() => this.addCardState(CardFor.ChangingName)}\n                        >\n                            {name ? name : this.defaultName()}\n                            {revised === created && snapshot != ''\n                                ? <span className=\"snapshot\">\n                                    {snapshot}\n                                </span>\n                                : ''\n                            }\n                        </div>\n                        <div id=\"delegates-allowed\" className=\"button\"\n                            onClick={() => this.addCardState(CardFor.ChangingDelegates)}\n                        >{this.allowedString()}</div>\n                    </div>\n                    <div id=\"subcaucus-container\">\n                        <div id=\"subcaucus-header\">\n                            <Button id=\"subcaucus-name-head\"\n                                label=\"Subcaucus\"\n                                icon={this.sortOrderIcon(sortName)}\n                                onClick={() => this.setState({\n                                    sortName: this.nextSortOrder(sortName),\n                                    sortCount: SortOrder.None\n                                })}\n                            />\n                            <Button id=\"subcaucus-count-head\"\n                                label=\"Count\"\n                                iconPos=\"right\"\n                                icon={this.sortOrderIcon(sortCount)}\n                                onClick={() => this.setState({\n                                    sortName: SortOrder.None,\n                                    sortCount: this.nextSortOrder(sortCount, -1)\n                                })}\n                            />\n                            <Button id=\"subcaucus-delegate-head\"\n                                label=\"Dels\"\n                            />\n                        </div>\n                        <div id=\"subcaucus-list\">\n                            {subcaucusRows}\n                        </div>\n                        <div id=\"subcaucus-footer\">\n                            <Button id=\"add-subcaucus-button\"\n                                label=\"Add a Subcaucus\"\n                                icon=\"pi pi-plus\"\n                                onClick={() => this.addSubcaucus()}\n                            />\n                            <Button id=\"remove-empty-subcaucuses-button\"\n                                label=\"Remove Empties\"\n                                icon=\"pi pi-trash\"\n                                onClick={() => this.addCardState(CardFor.RemovingEmpties)}\n                            />\n                        </div>\n                    </div>\n                    {summary}\n                    <Button id=\"app-byline\"\n                        label=\"Brought to you by Tenseg LLC\"\n                        href=\"https://tenseg.net\"\n                        onClick={() => this.addCardState(CardFor.ShowingBy)}\n                    />\n                    {card}\n                </div>\n                {_u.isDebugging()\n                    ? <div className=\"debugging\">\n                        <p>This is debugging info for <a href=\"https://grand.clst.org:3000/tenseg/subcalc-pr/issues\" target=\"_repository\">subcalc-pr</a> (with <a href=\"https://reactjs.org/docs/react-component.html\" target=\"_react\">ReactJS</a>, <a href=\"https://www.primefaces.org/primereact/\" target=\"_primereact\">PrimeReact</a>, <a href=\"https://www.primefaces.org/primeng/#/icons\" target=\"_primeicons\">PrimeIcons</a>) derrived from <a href=\"https://bitbucket.org/tenseg/subcalc-js/src\" target=\"_bitbucket\">subcalc-js</a>.\n                        </p>\n                        <pre>{\"rendered App \" + (new Date()).toLocaleTimeString()}</pre>\n                        <pre>{\"this.state is \" + JSON.stringify(this.state, null, 2)}</pre>\n                        <pre>{\"this.subcaucuses is \" + JSON.stringify(this.subcaucuses, null, 2)}</pre>\n                    </div>\n                    : <></>\n                }\n            </div>\n        )\n    }\n}\n","/**\n * SubCalcStorage.ts\n * \n * Manages storage in app or localStorage.\n * Handles conversion to and from JSON.\n */\n\n// see https://github.com/ClickSimply/typescript-map\nimport { TSMap } from 'typescript-map'\n// local to this app\nimport * as _u from './Utilities'\nimport { Subcaucus } from './Subcaucus'\n\ndeclare global {\n\n\t/**\n\t * A snapshot of an meeting in time.\n\t */\n\tinterface MeetingSnapshot {\n\t\tcreated: string\n\t\trevised: string\n\t\tsnapName: string\n\t\tname: string\n\t\tallowed: number\n\t\tseed: number\n\t\tsubcacucuses: Array<Subcaucus>\n\t}\n\n\tinterface Meeting {\n\t\tcreated: string\n\t\tcurrent: MeetingSnapshot,\n\t\tsnapshots: TSMap<string, MeetingSnapshot>\n\t}\n\n}\n\n/**\n * Manages storage in app or localStorage.\n * Handles conversion to and from JSON.\n */\nexport class SubCalcStorage {\n\n\t/**\n\t * Version helps to future-proof the stored JSON.\n\t */\n\tversion = 2\n\n\t/**\n\t * This author is just a random number that will help\n\t * distinguish meeting identifiers if they start to be\n\t * shared among devices. Hopefully a combination of \n\t * author and meeting creation date won't collide.\n\t */\n\tauthor = 0\n\tcurrentMeetingKey = ''\n\tmeetings = new TSMap<string, Meeting>()\n\n\tconstructor() {\n\n\t\t// then we look for local data\n\n\t\tthis.importSubCalc2Data()\n\n\t\tif (!this.author) {\n\n\t\t\tthis.importSubCalc1Data()\n\n\t\t\tif (!this.author) {\n\n\t\t\t\t// no prefix means that subcalc has never run in this browser\n\t\t\t\t// so we gather together some basics about this instance\n\n\t\t\t\tconst created = (new Date()).toJSON()\n\t\t\t\tthis.author = _u.randomSeed()\n\t\t\t\tthis.currentMeetingKey = this.meetingKey(created)\n\n\t\t\t\t// since there was no data at all, we also don't have a\n\t\t\t\t// current meeting, so we have to create that and write\n\t\t\t\t// it out as well\n\n\t\t\t\tconst currentSnapshot = this.newMeetingSnapshot(created)\n\n\t\t\t\tthis.meetings.set(this.currentMeetingKey, {\n\t\t\t\t\tcreated: created,\n\t\t\t\t\tcurrent: currentSnapshot,\n\t\t\t\t\tsnapshots: new TSMap<string, MeetingSnapshot>()\n\t\t\t\t})\n\n\t\t\t\tthis.storeMeetingSnapshot(currentSnapshot)\n\t\t\t}\n\t\t}\n\n\n\t\t// then we look for URI data\n\t\t// this would become current if we find it\n\n\t}\n\n\tmeetingKey = (created: string): string => {\n\t\treturn `${this.author}-${created}`\n\t}\n\n\tnewMeetingSnapshot = (created?: string): MeetingSnapshot => {\n\t\tif (created === undefined) {\n\t\t\tcreated = (new Date()).toJSON()\n\t\t}\n\t\treturn {\n\t\t\tcreated: created,\n\t\t\trevised: '',\n\t\t\tsnapName: '',\n\t\t\tname: '',\n\t\t\tallowed: 0,\n\t\t\tseed: _u.randomSeed(),\n\t\t\tsubcacucuses: []\n\t\t}\n\t}\n\n\tstoreMeetingSnapshot(snapshot: MeetingSnapshot) {\n\t\tconst meetingKey = this.meetingKey(snapshot.created)\n\t\tconst isCurrent = (snapshot.snapName == '')\n\n\t\t// add the snapshot to our instance data\n\n\t\tif (isCurrent) {\n\t\t\tthis.meetings.get(meetingKey).current = snapshot\n\t\t} else {\n\t\t\tthis.meetings.get(meetingKey).snapshots[snapshot.revised] = snapshot\n\t\t}\n\n\t\t// synchronize our instance data with local storage\n\n\t\tthis.writeLocalStorage(meetingKey)\n\t}\n\n\twriteLocalStorage = (meetingKey: string) => {\n\n\t\tconst meeting = this.meetings.get(meetingKey)\n\n\t\tif (meeting === undefined) {\n\n\t\t}\n\n\t\tconst jsonSubCalc = {\n\t\t\tv: this.version,\n\t\t\tauthor: this.author,\n\t\t\tcurrent: meetingKey,\n\t\t\tmeetings: this.meetings.keys\n\t\t}\n\n\t\ttry {\n\t\t\tconst jsonSubCalcString = JSON.stringify(jsonSubCalc)\n\t\t\tconsole.log(\"storing subcalc2\", jsonSubCalcString)\n\t\t\tlocalStorage.setItem(\"subcalc2\", jsonSubCalcString)\n\t\t} catch (e) {\n\t\t\talert(`Error saving subcalc2 to local storage: ${e.message}`)\n\t\t\tconsole.log(e)\n\t\t\treturn\n\t\t}\n\n\t\tconst jsonMeeting = {\n\t\t\tv: this.version,\n\t\t\tauthor: this.author,\n\t\t\tcreated: meeting.created,\n\t\t\tcurrent: this.jsonForMeetingSnapshot(meeting.current),\n\t\t\tsnapshots: meeting.snapshots.map((snapshot) => {\n\t\t\t\treturn this.jsonForMeetingSnapshot(snapshot)\n\t\t\t})\n\t\t}\n\n\t\ttry {\n\t\t\tconst jsonMeetingString = JSON.stringify(jsonMeeting)\n\t\t\tconsole.log(`storing sc-${meetingKey}`, jsonMeetingString)\n\t\t\tlocalStorage.setItem(`sc-${meetingKey}`, jsonMeetingString)\n\t\t} catch (e) {\n\t\t\talert(`Error saving sc-${meetingKey} to local storage: ${e.message}`)\n\t\t\tconsole.log(e)\n\t\t\treturn\n\t\t}\n\t}\n\n\tjsonForMeetingSnapshot = (snapshot: MeetingSnapshot): Object => {\n\t\tlet o: Object = { ...snapshot }\n\t\tlet jsonSubcaucuses = {}\n\n\t\tsnapshot.subcacucuses.forEach((subcaucus) => {\n\t\t\tjsonSubcaucuses[subcaucus.id] = {\n\t\t\t\tname: subcaucus.name,\n\t\t\t\tcount: subcaucus.count\n\t\t\t}\n\t\t})\n\n\t\to[\"Subcaucuses\"] = jsonSubcaucuses\n\n\t\treturn o\n\t}\n\n\timportSubCalc1Data = () => {\n\n\t}\n\n\timportSubCalc2Data = () => {\n\n\t}\n\n\t/**\n\t * Retrieve a snapshot (by default, the current meeting's current state),\n\t * from storage.\n\t * \n\t * NOTE: A side effect of this function is that the `currentMeetingKey`\n\t * of the Storage instance is reset when retrieval is successful.\n\t */\n\tgetSnapshot = (meetingKey = '', timestamp?: string): MeetingSnapshot | undefined => {\n\t\tconst { currentMeetingKey, meetings } = this\n\n\t\tif (meetingKey === '') {\n\t\t\tif (!currentMeetingKey) {\n\t\t\t\tconst message = \"No current meeting data\"\n\t\t\t\talert(message)\n\t\t\t\tconsole.log(new Error(message))\n\t\t\t\treturn undefined\n\t\t\t}\n\t\t\tmeetingKey = currentMeetingKey\n\t\t}\n\n\t\tconst meeting = meetings[meetingKey]\n\n\t\tif (meeting === undefined) {\n\t\t\tconst message = `No data for meeting ${meetingKey}`\n\t\t\talert(message)\n\t\t\tconsole.log(new Error(message))\n\t\t\treturn undefined\n\t\t}\n\n\t\tif (timestamp === undefined) {\n\t\t\tthis.currentMeetingKey = meetingKey\n\t\t\treturn meeting.current\n\t\t}\n\n\t\tconst snapshot = meeting.snapshots[timestamp]\n\n\t\tif (snapshot === undefined) {\n\t\t\tconst message = `No data for meeting ${currentMeetingKey} snapshot ${timestamp}`\n\t\t\talert(message)\n\t\t\tconsole.log(new Error(message))\n\t\t\treturn undefined\n\t\t}\n\n\t\tthis.currentMeetingKey = meetingKey\n\t\treturn snapshot\n\t}\n\n\n}","// we will need a way to type validate the json we import\n// see https://github.com/mojotech/json-type-validation\n// or maybe just use a JSON.parse reviver to type the data\n\nexport class Subcaucus {\n\n\treadonly id: number\n\tname: string\n\tcount: number\n\tdelegates: number\n\n\tconstructor(withID: number, name = '', count = 0, delegates = 0) {\n\t\tthis.id = withID\n\t\tthis.name = name\n\t\tthis.count = count\n\t\tthis.delegates = delegates\n\t}\n}","import * as React from 'react'\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { InputText } from 'primereact/inputtext'\nimport { InputTextarea } from 'primereact/inputtextarea'\n// local to this app\nimport * as _u from './Utilities'\nimport { Subcaucus } from './Subcaucus'\n\nexport type SubcaucusRowAction = 'sync' | 'enter' | State\n\ninterface Props {\n\tid: number\n\texchange: ((subcaucusID: number, action: SubcaucusRowAction) => Subcaucus | undefined)\n}\n\ninterface State {\n\tname: string\n\tcount: number\n\tdelegates: number\n}\n\nexport class SubcaucusRow extends React.Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tcount: 0,\n\t\t\tdelegates: 0,\n\t\t}\n\t\tconst subcaucus = this.props.exchange(this.props.id, 'sync')\n\t\tif (subcaucus) {\n\t\t\tthis.state = {\n\t\t\t\tname: subcaucus.name,\n\t\t\t\tcount: subcaucus.count,\n\t\t\t\tdelegates: subcaucus.delegates\n\t\t\t}\n\t\t}\n\t}\n\n\t// static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n\t// \tlet newState = {}\n\t// \tconst subcaucus = nextProps.exchange(nextProps.id, 'sync')\n\t// \tif (subcaucus) {\n\t// \t\tnewState = {\n\t// \t\t\tname: subcaucus.name,\n\t// \t\t\tcount: subcaucus.count,\n\t// \t\t\tdelegates: subcaucus.delegates\n\t// \t\t}\n\t// \t}\n\t// \treturn newState\n\t// }\n\n\thandleName = () => (event: React.FormEvent<HTMLTextAreaElement>) => {\n\t\tvar value = event.currentTarget.value\n\t\tthis.setState({ name: value })\n\t\tthis.props.exchange(this.props.id, { ...this.state, name: value })\n\t}\n\n\thandleCount = () => (event: React.FormEvent<HTMLInputElement>) => {\n\t\tvar num = Number(event.currentTarget.value)\n\t\tif (num < 0) {\n\t\t\tnum = 0\n\t\t}\n\t\tthis.setState({ count: num })\n\t}\n\n\tnotify = () => (event: React.FormEvent<HTMLInputElement>) => {\n\t\tthis.props.exchange(this.props.id, { ...this.state })\n\t}\n\n\thandleKey = () => (event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tif (event.key === 'Enter' || event.key === 'Tab') {\n\t\t\tthis.props.exchange(this.props.id, 'enter')\n\t\t}\n\t}\n\n\tfocusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n\t\t// event properties must be copied to use async\n\t\tconst target = event.currentTarget\n\t\t// do this async to try to make Safari behave\n\t\tsetTimeout(() => target.setSelectionRange(0, 9999), 0)\n\t}\n\n\tidPlus = (suffix: string): string | undefined => {\n\t\treturn `subcaucus-${this.props.id}-${suffix}`\n\t}\n\n\trender() {\n\t\t_u.debug(\"render row\", this.props.id, this.state)\n\n\t\tconst { name, count, delegates } = this.state\n\n\t\treturn (\n\t\t\t<div id={this.idPlus(\"row\")}\n\t\t\t\tclassName={`subcaucus-row ${delegates > 0 ? \"has-delegates\" : (count > 0 ? \"no-delegates\" : \"\")}`}\n\t\t\t>\n\t\t\t\t{_u.isDebugging ? <div className=\"subcaucus-id\">{this.props.id}</div> : ''}\n\t\t\t\t<InputTextarea id={this.idPlus(\"row-name\")}\n\t\t\t\t\tclassName=\"subcaucus-field subcaucus-name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\trows={1}\n\t\t\t\t\tcols={1}\n\t\t\t\t\t// PrimeReact has a bug with the InputTextarea placeholder\n\t\t\t\t\t// for now, it will not update this placeholder\n\t\t\t\t\t// see: https://github.com/primefaces/primereact/issues/747\n\t\t\t\t\tplaceholder={`Subcaucus ${this.props.id}`}\n\t\t\t\t\t// placeholder={`Subcaucus name`}\n\t\t\t\t\tonChange={this.handleName()}\n\t\t\t\t\tonKeyUp={this.handleKey()}\n\t\t\t\t/>\n\t\t\t\t<InputText id={this.idPlus(\"row-count\")}\n\t\t\t\t\tclassName=\"subcaucus-field subcaucus-count\"\n\t\t\t\t\tkeyfilter=\"pint\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tpattern=\"\\d*\"\n\t\t\t\t\tvalue={count ? count : ''}\n\t\t\t\t\tplaceholder={`—`}\n\t\t\t\t\tonChange={this.handleCount()}\n\t\t\t\t\tonBlur={this.notify()}\n\t\t\t\t\t// forcing the selction of the whole text seems to lead to problems\n\t\t\t\t\t// see https://grand.clst.org:3000/tenseg/subcalc-pr/issues/3\n\t\t\t\t\t// onFocus={this.focusOnWholeText()}\n\t\t\t\t\tonKeyUp={this.handleKey()}\n\t\t\t\t/>\n\t\t\t\t<Button id={this.idPlus(\"row-delegates\")}\n\t\t\t\t\tclassName={`subcaucus-delegates-button ${delegates > 0 ? \"p-button-success\" : \"p-button-secondary\"}`}\n\t\t\t\t\tlabel={`${delegates ? delegates : (count ? \"0\" : \"—\")}`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\n// see https://www.primefaces.org/primereact\nimport { Button } from 'primereact/button'\nimport { Card } from 'primereact/card'\nimport { InputText } from 'primereact/inputtext'\n// local to this app\nimport * as _u from './Utilities'\n\ntype KindOfValue = 'text' | 'positive integer'\n\ninterface Props {\n    id?: string\n    title: string\n    description?: string\n    image?: string\n    alt?: string\n    extraButtons?: JSX.Element\n    footer?: JSX.Element\n    type?: KindOfValue\n    value?: string\n    defaultValue?: string\n    allowEmpty?: boolean\n    onSave?: ((value?: string) => void)\n}\ninterface State {\n    value: string\n}\n\nexport class ValueCard extends React.Component<Props, State> {\n\n    isPositiveInteger = false\n\n    constructor(props: Props) {\n        super(props)\n        this.isPositiveInteger = this.props.type === 'positive integer'\n        let initialValue = _u.unwrapString(this.props.value)\n        if (!this.props.allowEmpty && this.isEmpty(initialValue)) {\n            initialValue = _u.unwrapString(this.props.defaultValue)\n        }\n        this.state = {\n            value: initialValue,\n        }\n    }\n\n    originalValue = (): string => {\n        return _u.unwrapString(this.props.value)\n    }\n\n    defaultValue = (): string => {\n        return _u.unwrapString(this.props.defaultValue)\n    }\n\n    handleChange = () => (event: React.FormEvent<HTMLInputElement>) => {\n        _u.debug(\"change\", event.currentTarget.value)\n        if (this.isPositiveInteger) {\n            var num = Number(event.currentTarget.value)\n            if (num < 0) {\n                num = 0\n            }\n            this.setState({ value: String(num) })\n        } else {\n            this.setState({ value: event.currentTarget.value })\n        }\n    }\n\n    handleKey = () => (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            if (this.props.onSave) {\n                this.props.onSave(this.state.value.trim())\n            }\n        }\n    }\n\n    focusOnWholeText = () => (event: React.FormEvent<HTMLInputElement>) => {\n        // event properties must be copied to use async\n        const target = event.currentTarget\n        // do this async to try to make Safari behave\n        setTimeout(() => target.setSelectionRange(0, 9999), 0)\n    }\n\n    isEmpty = (value?: string): boolean => {\n        var empty = (value === '') || (value === undefined)\n        if (this.isPositiveInteger) {\n            empty = (empty || value === '0')\n        }\n        return empty\n    }\n\n    save = (value?: string) => (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (this.props.onSave) {\n            if (value === undefined) {\n                this.props.onSave()\n            } else if (this.isEmpty(value) && !this.props.allowEmpty) {\n                if (!this.isEmpty(this.props.defaultValue)) {\n                    this.props.onSave(this.props.defaultValue)\n                }\n            } else {\n                this.props.onSave(value.trim())\n            }\n        }\n    }\n\n    idPlus = (suffix: string): string | undefined => {\n        return this.props.id ? `${this.props.id}-${suffix}` : undefined\n    }\n\n    render() {\n\n        const { value } = this.state\n        const isPositiveInteger = this.isPositiveInteger\n\n        let cardFooter = <></>\n\n        if (this.props.footer == undefined) {\n            const illegallyEmpty = (this.isEmpty(value) && this.isEmpty(this.defaultValue()) && this.props.allowEmpty === false)\n            const originalIllegallyEmpty = (this.isEmpty(this.originalValue()) && this.props.allowEmpty === false)\n\n            // don't show a save button at all if there is no save function\n            // and if there is no value property, then call the save button \"close\" instead\n            const saveButton = (this.props.onSave\n                ? ((this.props.value != undefined)\n                    ? <Button id={this.idPlus(\"save-button\")}\n                        label=\"Save\"\n                        icon=\"pi pi-check\"\n                        disabled={illegallyEmpty}\n                        onClick={this.save(_u.unwrapString(value, this.defaultValue()))}\n                    />\n                    : <Button id={this.idPlus(\"close-button\")}\n                        label=\"Close\"\n                        icon=\"pi pi-times\"\n                        onClick={this.save()}\n                    />\n                )\n                : <></>\n            )\n\n            const cancelButton = originalIllegallyEmpty || this.props.value === undefined\n                ? ''\n                : <Button id={this.idPlus(\"cancel-button\")}\n                    label=\"Cancel\"\n                    icon=\"pi pi-times\"\n                    className=\"p-button-secondary\"\n                    onClick={this.save()}\n                />\n\n            cardFooter = <>{saveButton}{this.props.extraButtons}{cancelButton}</>\n        } else {\n            cardFooter = this.props.footer\n        }\n\n        return (\n            <div className=\"valuecard-wrapper\">\n                <div className=\"background-blocker\">\n                </div>\n                <Card id={this.idPlus(\"valuecard\")}\n                    className={`valuecard ${this.idPlus(\"valuecard\")}`}\n                    title={this.props.title}\n                    header={this.props.image\n                        ? <div id={this.idPlus(\"picture-container\")}\n                            className=\"picture-container\"\n                        >\n                            <img\n                                alt={`${this.props.alt}`}\n                                src={`${this.props.image}`}\n                            />\n                            <Button\n                                id={this.idPlus(\"picture-close-button\")}\n                                icon=\"pi pi-times\"\n                                onClick={this.save()}\n                            />\n                        </div>\n                        : undefined\n                    }\n                    footer={cardFooter}\n                >\n                    {this.props.children\n                        ? <div id={this.idPlus(\"valuecard-children\")} className=\"valuecard-children\">\n                            {this.props.children}\n                        </div>\n                        : ''}\n                    {this.props.description\n                        ? <div id={this.idPlus(\"valuecard-description\")} className=\"valuecard-description\">\n                            <p>{this.props.description}</p>\n                        </div>\n                        : ''}\n                    {this.props.value != undefined\n                        ? <InputText id={this.idPlus(\"card-field\")}\n                            className={isPositiveInteger ? \"number\" : \"text\"}\n                            keyfilter={isPositiveInteger ? \"pint\" : \"\"}\n                            type=\"text\"\n                            pattern={isPositiveInteger ? \"\\\\d*\" : undefined}\n                            value={isPositiveInteger ? (value === '0' ? '' : value) : value} // show 0 as blank for positive integers\n                            placeholder={this.props.defaultValue}\n                            onChange={this.handleChange()}\n                            // onFocus={this.isPositiveInt ? this.focusOnWholeText() : undefined}\n                            onKeyUp={this.handleKey()}\n                            autoFocus\n                        />\n                        : ''\n                    }\n                </Card>\n            </div>\n        )\n    }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}